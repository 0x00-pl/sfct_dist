DIGEST a234c9c6f5a85c06883a18f82d265878
FTop.Extraction
R353:356 Top.Perm <> <> lib
mod 367:371 <> Sort1
def 383:388 Sort1 insert
R393:395 Coq.Init.Datatypes <> nat ind
R402:405 Coq.Init.Datatypes <> list ind
R407:409 Coq.Init.Datatypes <> nat ind
R424:424 Top.Extraction <> l var
R435:437 Coq.Init.Datatypes <> nil constr
R443:444 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R442:442 Top.Extraction <> i var
R445:447 Coq.Init.Datatypes <> nil constr
R454:455 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R465:469 Coq.Arith.PeanoNat <> :nat_scope:x_'<=?'_x not
R464:464 Top.Extraction <> i var
R491:494 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R495:500 Top.Extraction <> insert def
R502:502 Top.Extraction <> i var
R478:479 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R477:477 Top.Extraction <> i var
R481:482 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
def 522:525 Sort1 sort
R531:534 Coq.Init.Datatypes <> list ind
R536:538 Coq.Init.Datatypes <> nat ind
R543:546 Coq.Init.Datatypes <> list ind
R548:550 Coq.Init.Datatypes <> nat ind
R563:563 Top.Extraction <> l var
R574:576 Coq.Init.Datatypes <> nil constr
R581:583 Coq.Init.Datatypes <> nil constr
R590:591 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R597:602 Top.Extraction Sort1 insert def
R607:610 Top.Extraction <> sort def
R699:708 Coq.extraction.Extraction <> <> lib
R722:725 Top.Extraction Sort1 sort def
R1435:1438 Coq.Init.Datatypes <> bool ind
R1488:1491 Coq.Init.Datatypes <> list ind
R1553:1557 Top.Extraction Sort1 <> mod
R2999:3004 Coq.ZArith.ZArith <> <> lib
ax 3926:3928 <> int
ax 4057:4059 <> ltb
R4065:4068 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4072:4075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4076:4079 Coq.Init.Datatypes <> bool ind
R4069:4071 Top.Extraction <> int defax
R4062:4064 Top.Extraction <> int defax
ax 4797:4801 <> int2Z
R4807:4810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4811:4811 Coq.Numbers.BinNums <> Z ind
R4804:4806 Top.Extraction <> int defax
ax 4822:4827 <> ltb_lt
R4844:4846 Top.Extraction <> int defax
R4863:4867 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4856:4858 Coq.Init.Logic <> :type_scope:x_'='_x not
R4849:4851 Top.Extraction <> ltb defax
R4855:4855 Top.Extraction <> m var
R4853:4853 Top.Extraction <> n var
R4859:4862 Coq.Init.Datatypes <> true constr
R4875:4877 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R4868:4872 Top.Extraction <> int2Z defax
R4874:4874 Top.Extraction <> n var
R4878:4882 Top.Extraction <> int2Z defax
R4884:4884 Top.Extraction <> m var
prf 6129:6143 <> int_blt_reflect
R6159:6165 Coq.Bool.Bool <> reflect ind
R6188:6190 Top.Extraction <> ltb defax
R6194:6194 Top.Extraction <> y var
R6192:6192 Top.Extraction <> x var
R6175:6177 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6168:6172 Top.Extraction <> int2Z defax
R6174:6174 Top.Extraction <> x var
R6178:6182 Top.Extraction <> int2Z defax
R6184:6184 Top.Extraction <> y var
R6227:6237 Coq.Bool.Bool <> iff_reflect thm
R6227:6237 Coq.Bool.Bool <> iff_reflect thm
R6256:6261 Top.Extraction <> ltb_lt prfax
R6256:6261 Top.Extraction <> ltb_lt prfax
prf 6276:6288 <> Z_eqb_reflect
R6304:6310 Coq.Bool.Bool <> reflect ind
R6319:6323 Coq.ZArith.BinInt Z eqb def
R6327:6327 Top.Extraction <> y var
R6325:6325 Top.Extraction <> x var
R6314:6314 Coq.Init.Logic <> :type_scope:x_'='_x not
R6313:6313 Top.Extraction <> x var
R6315:6315 Top.Extraction <> y var
R6360:6370 Coq.Bool.Bool <> iff_reflect thm
R6360:6370 Coq.Bool.Bool <> iff_reflect thm
R6389:6396 Coq.ZArith.BinInt Z eqb_eq thm
R6389:6396 Coq.ZArith.BinInt Z eqb_eq thm
prf 6411:6423 <> Z_ltb_reflect
R6439:6445 Coq.Bool.Bool <> reflect ind
R6454:6458 Coq.ZArith.BinInt Z ltb def
R6462:6462 Top.Extraction <> y var
R6460:6460 Top.Extraction <> x var
R6449:6449 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6448:6448 Top.Extraction <> x var
R6450:6450 Top.Extraction <> y var
R6495:6505 Coq.Bool.Bool <> iff_reflect thm
R6495:6505 Coq.Bool.Bool <> iff_reflect thm
R6524:6531 Coq.ZArith.BinInt Z ltb_lt thm
R6524:6531 Coq.ZArith.BinInt Z ltb_lt thm
R7273:7306 Coq.Logic.FunctionalExtensionality <> <> lib
mod 7317:7323 <> IntMaps
def 7337:7345 IntMaps total_map
R7360:7363 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7364:7364 Top.Extraction <> A var
R7359:7359 Coq.Numbers.BinNums <> Z ind
def 7378:7384 IntMaps t_empty
R7400:7400 Top.Extraction <> A var
R7405:7413 Top.Extraction IntMaps total_map def
R7415:7415 Top.Extraction <> A var
R7431:7431 Top.Extraction <> v var
def 7446:7453 IntMaps t_update
R7469:7477 Top.Extraction IntMaps total_map def
R7479:7479 Top.Extraction <> A var
R7487:7487 Coq.Numbers.BinNums <> Z ind
R7495:7495 Top.Extraction <> A var
R7516:7520 Coq.ZArith.BinInt Z eqb def
R7524:7525 Top.Extraction <> x' var
R7522:7522 Top.Extraction <> x var
R7539:7539 Top.Extraction <> m var
R7541:7542 Top.Extraction <> x' var
R7532:7532 Top.Extraction <> v var
prf 7551:7561 IntMaps t_update_eq
R7578:7586 Top.Extraction IntMaps total_map def
R7588:7588 Top.Extraction <> A var
R7614:7616 Coq.Init.Logic <> :type_scope:x_'='_x not
R7597:7604 Top.Extraction IntMaps t_update def
R7610:7610 Top.Extraction <> v var
R7608:7608 Top.Extraction <> x var
R7606:7606 Top.Extraction <> m var
R7613:7613 Top.Extraction <> x var
R7617:7617 Top.Extraction <> v var
R7644:7651 Top.Extraction IntMaps t_update def
R7668:7669 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R7668:7669 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
prf 7704:7715 IntMaps t_update_neq
R7748:7756 Top.Extraction IntMaps total_map def
R7758:7758 Top.Extraction <> X var
R7772:7776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7797:7799 Coq.Init.Logic <> :type_scope:x_'='_x not
R7778:7785 Top.Extraction IntMaps t_update def
R7792:7792 Top.Extraction <> v var
R7789:7790 Top.Extraction <> x1 var
R7787:7787 Top.Extraction <> m var
R7795:7796 Top.Extraction <> x2 var
R7800:7800 Top.Extraction <> m var
R7802:7803 Top.Extraction <> x2 var
R7766:7769 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7764:7765 Top.Extraction <> x1 var
R7770:7771 Top.Extraction <> x2 var
R7830:7837 Top.Extraction IntMaps t_update def
R7855:7856 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R7855:7856 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
prf 7889:7903 IntMaps t_update_shadow
R7920:7928 Top.Extraction IntMaps total_map def
R7930:7930 Top.Extraction <> A var
R7977:7980 Coq.Init.Logic <> :type_scope:x_'='_x not
R7946:7953 Top.Extraction IntMaps t_update def
R7975:7976 Top.Extraction <> v2 var
R7973:7973 Top.Extraction <> x var
R7956:7963 Top.Extraction IntMaps t_update def
R7969:7970 Top.Extraction <> v1 var
R7967:7967 Top.Extraction <> x var
R7965:7965 Top.Extraction <> m var
R7981:7988 Top.Extraction IntMaps t_update def
R7994:7995 Top.Extraction <> v2 var
R7992:7992 Top.Extraction <> x var
R7990:7990 Top.Extraction <> m var
R8022:8029 Top.Extraction IntMaps t_update def
R8067:8068 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R8067:8068 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R8090:8096 Top.Extraction IntMaps <> mod
mod 8241:8251 <> SearchTree2
sec 8262:8266 SearchTree2 TREES
var 8278:8278 SearchTree2.TREES V
var 8297:8303 SearchTree2.TREES default
R8306:8306 Top.Extraction <> SearchTree2.TREES.V var
def 8321:8323 SearchTree2 key
R8328:8330 Top.Extraction <> int defax
ind 8344:8347 SearchTree2 tree
constr 8362:8362 SearchTree2 E
constr 8374:8374 SearchTree2 T
R8366:8369 Top.Extraction <> tree ind
R8381:8384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8388:8391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8393:8396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8401:8404 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8405:8408 Top.Extraction <> tree ind
R8397:8400 Top.Extraction <> tree ind
R8392:8392 Top.Extraction <> SearchTree2.TREES.V var
R8385:8387 Top.Extraction SearchTree2 key def
R8377:8380 Top.Extraction <> tree ind
def 8423:8432 SearchTree2 empty_tree
R8436:8439 Top.Extraction SearchTree2 tree ind
R8444:8444 Top.Extraction SearchTree2 E constr
def 8457:8462 SearchTree2 lookup
R8468:8470 Top.Extraction SearchTree2 key def
R8478:8481 Top.Extraction SearchTree2 tree ind
R8486:8486 Top.Extraction <> SearchTree2.TREES.V var
R8499:8499 Top.Extraction <> t var
R8510:8510 Top.Extraction SearchTree2 E constr
R8515:8521 Top.Extraction <> SearchTree2.TREES.default var
R8527:8527 Top.Extraction SearchTree2 T constr
R8545:8547 Top.Extraction <> ltb defax
R8549:8549 Top.Extraction <> x var
R8604:8606 Top.Extraction <> ltb defax
R8610:8610 Top.Extraction <> x var
R8617:8622 Top.Extraction <> lookup def
R8624:8624 Top.Extraction <> x var
R8558:8563 Top.Extraction <> lookup def
R8565:8565 Top.Extraction <> x var
def 8678:8683 SearchTree2 insert
R8689:8691 Top.Extraction SearchTree2 key def
R8698:8698 Top.Extraction <> SearchTree2.TREES.V var
R8705:8708 Top.Extraction SearchTree2 tree ind
R8713:8716 Top.Extraction SearchTree2 tree ind
R8728:8728 Top.Extraction <> s var
R8739:8739 Top.Extraction SearchTree2 E constr
R8744:8744 Top.Extraction SearchTree2 T constr
R8752:8752 Top.Extraction SearchTree2 E constr
R8750:8750 Top.Extraction <> v var
R8748:8748 Top.Extraction <> x var
R8746:8746 Top.Extraction SearchTree2 E constr
R8757:8757 Top.Extraction SearchTree2 T constr
R8775:8777 Top.Extraction <> ltb defax
R8779:8779 Top.Extraction <> x var
R8844:8846 Top.Extraction <> ltb defax
R8850:8850 Top.Extraction <> x var
R8910:8910 Top.Extraction SearchTree2 T constr
R8916:8916 Top.Extraction <> v var
R8914:8914 Top.Extraction <> x var
R8857:8857 Top.Extraction SearchTree2 T constr
R8867:8872 Top.Extraction <> insert def
R8876:8876 Top.Extraction <> v var
R8874:8874 Top.Extraction <> x var
R8788:8788 Top.Extraction SearchTree2 T constr
R8791:8796 Top.Extraction <> insert def
R8800:8800 Top.Extraction <> v var
R8798:8798 Top.Extraction <> x var
def 8936:8944 SearchTree2 elements'
R8950:8953 Top.Extraction SearchTree2 tree ind
R8963:8966 Coq.Init.Datatypes <> list ind
R8972:8972 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R8969:8971 Top.Extraction SearchTree2 key def
R8973:8973 Top.Extraction <> SearchTree2.TREES.V var
R8979:8982 Coq.Init.Datatypes <> list ind
R8988:8990 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R8985:8987 Top.Extraction SearchTree2 key def
R8991:8991 Top.Extraction <> SearchTree2.TREES.V var
R9004:9004 Top.Extraction <> s var
R9014:9014 Top.Extraction SearchTree2 E constr
R9019:9022 Top.Extraction <> base var
R9027:9027 Top.Extraction SearchTree2 T constr
R9040:9048 Top.Extraction <> elements' def
R9058:9061 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9053:9053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9055:9055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9057:9057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9062:9070 Top.Extraction <> elements' def
R9074:9077 Top.Extraction <> base var
def 9098:9105 SearchTree2 elements
R9111:9114 Top.Extraction SearchTree2 tree ind
R9119:9122 Coq.Init.Datatypes <> list ind
R9128:9130 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R9125:9127 Top.Extraction SearchTree2 key def
R9131:9131 Top.Extraction <> SearchTree2.TREES.V var
R9137:9145 Top.Extraction SearchTree2 elements' def
R9149:9151 Coq.Init.Datatypes <> nil constr
R9147:9147 Top.Extraction <> s var
def 9166:9172 SearchTree2 combine
R9186:9186 Coq.Numbers.BinNums <> Z ind
R9197:9205 Top.Extraction IntMaps total_map def
R9207:9207 Top.Extraction <> A var
R9212:9220 Top.Extraction IntMaps total_map def
R9222:9222 Top.Extraction <> A var
R9241:9245 Coq.ZArith.BinInt Z ltb def
R9249:9253 Top.Extraction <> pivot var
R9247:9247 Top.Extraction <> x var
R9271:9272 Top.Extraction <> m2 var
R9274:9274 Top.Extraction <> x var
R9261:9262 Top.Extraction <> m1 var
R9264:9264 Top.Extraction <> x var
ind 9288:9290 SearchTree2 Abs
constr 9327:9331 SearchTree2 Abs_E
constr 9360:9364 SearchTree2 Abs_T
R9298:9301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9313:9316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9302:9310 Top.Extraction IntMaps total_map def
R9312:9312 Top.Extraction <> SearchTree2.TREES.V var
R9294:9297 Top.Extraction SearchTree2 tree ind
R9334:9336 Top.Extraction <> Abs ind
R9341:9347 Top.Extraction IntMaps t_empty def
R9349:9355 Top.Extraction <> SearchTree2.TREES.default var
R9338:9338 Top.Extraction SearchTree2 E constr
R9400:9409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9417:9426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9427:9429 Top.Extraction <> Abs ind
R9445:9452 Top.Extraction IntMaps t_update def
R9488:9488 Top.Extraction <> v var
R9479:9483 Top.Extraction <> int2Z defax
R9485:9485 Top.Extraction <> k var
R9455:9461 Top.Extraction SearchTree2 combine def
R9475:9475 Top.Extraction <> b var
R9473:9473 Top.Extraction <> a var
R9464:9468 Top.Extraction <> int2Z defax
R9470:9470 Top.Extraction <> k var
R9432:9432 Top.Extraction SearchTree2 T constr
R9440:9440 Top.Extraction <> r var
R9438:9438 Top.Extraction <> v var
R9436:9436 Top.Extraction <> k var
R9434:9434 Top.Extraction <> l var
R9410:9412 Top.Extraction <> Abs ind
R9416:9416 Top.Extraction <> b var
R9414:9414 Top.Extraction <> r var
R9393:9395 Top.Extraction <> Abs ind
R9399:9399 Top.Extraction <> a var
R9397:9397 Top.Extraction <> l var
prf 9501:9517 SearchTree2 empty_tree_relate
R9520:9522 Top.Extraction SearchTree2 Abs ind
R9536:9542 Top.Extraction IntMaps t_empty def
R9544:9550 Top.Extraction <> SearchTree2.TREES.default var
R9524:9533 Top.Extraction SearchTree2 empty_tree def
prf 9635:9647 SearchTree2 lookup_relate
R9680:9683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9694:9697 Coq.Init.Logic <> :type_scope:x_'='_x not
R9684:9689 Top.Extraction SearchTree2 lookup def
R9693:9693 Top.Extraction <> t var
R9691:9691 Top.Extraction <> k var
R9698:9700 Top.Extraction <> cts var
R9703:9707 Top.Extraction <> int2Z defax
R9709:9709 Top.Extraction <> k var
R9671:9673 Top.Extraction SearchTree2 Abs ind
R9677:9679 Top.Extraction <> cts var
R9675:9675 Top.Extraction <> t var
prf 9871:9883 SearchTree2 insert_relate
R9918:9925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9926:9928 Top.Extraction SearchTree2 Abs ind
R9946:9953 Top.Extraction IntMaps t_update def
R9969:9969 Top.Extraction <> v var
R9960:9964 Top.Extraction <> int2Z defax
R9966:9966 Top.Extraction <> k var
R9955:9957 Top.Extraction <> cts var
R9931:9936 Top.Extraction SearchTree2 insert def
R9942:9942 Top.Extraction <> t var
R9940:9940 Top.Extraction <> v var
R9938:9938 Top.Extraction <> k var
R9909:9911 Top.Extraction SearchTree2 Abs ind
R9915:9917 Top.Extraction <> cts var
R9913:9913 Top.Extraction <> t var
prf 10148:10180 SearchTree2 unrealistically_strong_can_relate
R10195:10201 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10205:10206 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10207:10209 Top.Extraction SearchTree2 Abs ind
R10213:10215 Top.Extraction <> cts var
R10211:10211 Top.Extraction <> t var
R10339:10343 Top.Extraction SearchTree2.TREES <> sec
R10834:10844 Top.Extraction SearchTree2 <> mod
R13311:13320 Top.SearchTree <> <> lib
mod 13330:13340 <> Experiments
def 13376:13385 Experiments empty_tree
R13390:13410 Top.SearchTree <> empty_tree def
R13412:13414 Coq.Init.Datatypes <> nat ind
def 13428:13433 Experiments insert
R13438:13454 Top.SearchTree <> insert def
R13456:13458 Coq.Init.Datatypes <> nat ind
def 13472:13477 Experiments lookup
R13482:13498 Top.SearchTree <> lookup def
R13500:13502 Coq.Init.Datatypes <> nat ind
def 13518:13518 Experiments E
R13523:13534 Top.SearchTree <> E constr
R13536:13538 Coq.Init.Datatypes <> nat ind
def 13552:13552 Experiments T
R13557:13568 Top.SearchTree <> T constr
R13570:13572 Coq.Init.Datatypes <> nat ind
R13667:13670 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R13581:13586 Top.Extraction Experiments insert def
R13593:13598 Top.Extraction Experiments insert def
R13605:13610 Top.Extraction Experiments insert def
R13617:13622 Top.Extraction Experiments insert def
R13629:13634 Top.Extraction Experiments insert def
R13641:13646 Top.Extraction Experiments insert def
R13652:13661 Top.Extraction Experiments empty_tree def
R13671:13671 Top.Extraction Experiments E def
R13686:13686 Top.Extraction Experiments E def
R13701:13701 Top.Extraction Experiments T def
R13686:13686 Top.Extraction Experiments E def
R13701:13701 Top.Extraction Experiments T def
R13701:13701 Top.Extraction Experiments T def
R13701:13701 Top.Extraction Experiments T def
R13701:13701 Top.Extraction Experiments T def
R13701:13701 Top.Extraction Experiments T def
R13701:13701 Top.Extraction Experiments T def
R13701:13701 Top.Extraction Experiments T def
R14207:14217 Top.Extraction Experiments <> mod
