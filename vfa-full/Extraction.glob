DIGEST ad5cc72811f3b1916b0e0a7204e92a31
FTop.Extraction
R339:348 Coq.extraction.Extraction <> <> lib
R366:369 Top.Perm <> <> lib
mod 380:384 <> Sort1
def 396:401 Sort1 insert
R406:408 Coq.Init.Datatypes <> nat ind
R415:418 Coq.Init.Datatypes <> list ind
R420:422 Coq.Init.Datatypes <> nat ind
R437:437 Top.Extraction <> l var
R448:450 Coq.Init.Datatypes <> nil constr
R456:457 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R455:455 Top.Extraction <> i var
R458:460 Coq.Init.Datatypes <> nil constr
R467:468 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R478:482 Coq.Arith.PeanoNat <> :nat_scope:x_'<=?'_x not
R477:477 Top.Extraction <> i var
R504:507 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R508:513 Top.Extraction <> insert def
R515:515 Top.Extraction <> i var
R491:492 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R490:490 Top.Extraction <> i var
R494:495 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
def 535:538 Sort1 sort
R544:547 Coq.Init.Datatypes <> list ind
R549:551 Coq.Init.Datatypes <> nat ind
R556:559 Coq.Init.Datatypes <> list ind
R561:563 Coq.Init.Datatypes <> nat ind
R576:576 Top.Extraction <> l var
R587:589 Coq.Init.Datatypes <> nil constr
R594:596 Coq.Init.Datatypes <> nil constr
R603:604 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R610:615 Top.Extraction Sort1 insert def
R620:623 Top.Extraction <> sort def
R715:718 Top.Extraction Sort1 sort def
R1428:1431 Coq.Init.Datatypes <> bool ind
R1481:1484 Coq.Init.Datatypes <> list ind
R1546:1550 Top.Extraction Sort1 <> mod
R2992:2997 Coq.ZArith.ZArith <> <> lib
ax 3919:3921 <> int
ax 4050:4052 <> ltb
R4058:4061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4065:4068 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4069:4072 Coq.Init.Datatypes <> bool ind
R4062:4064 Top.Extraction <> int defax
R4055:4057 Top.Extraction <> int defax
ax 4790:4794 <> int2Z
R4800:4803 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4804:4804 Coq.Numbers.BinNums <> Z ind
R4797:4799 Top.Extraction <> int defax
ax 4815:4820 <> ltb_lt
R4837:4839 Top.Extraction <> int defax
R4856:4860 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4849:4851 Coq.Init.Logic <> :type_scope:x_'='_x not
R4842:4844 Top.Extraction <> ltb defax
R4848:4848 Top.Extraction <> m var
R4846:4846 Top.Extraction <> n var
R4852:4855 Coq.Init.Datatypes <> true constr
R4868:4870 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R4861:4865 Top.Extraction <> int2Z defax
R4867:4867 Top.Extraction <> n var
R4871:4875 Top.Extraction <> int2Z defax
R4877:4877 Top.Extraction <> m var
prf 6122:6136 <> int_blt_reflect
R6152:6158 Coq.Bool.Bool <> reflect ind
R6181:6183 Top.Extraction <> ltb defax
R6187:6187 Top.Extraction <> y var
R6185:6185 Top.Extraction <> x var
R6168:6170 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6161:6165 Top.Extraction <> int2Z defax
R6167:6167 Top.Extraction <> x var
R6171:6175 Top.Extraction <> int2Z defax
R6177:6177 Top.Extraction <> y var
R6220:6230 Coq.Bool.Bool <> iff_reflect thm
R6220:6230 Coq.Bool.Bool <> iff_reflect thm
R6249:6254 Top.Extraction <> ltb_lt prfax
R6249:6254 Top.Extraction <> ltb_lt prfax
prf 6269:6281 <> Z_eqb_reflect
R6297:6303 Coq.Bool.Bool <> reflect ind
R6312:6316 Coq.ZArith.BinInt Z eqb def
R6320:6320 Top.Extraction <> y var
R6318:6318 Top.Extraction <> x var
R6307:6307 Coq.Init.Logic <> :type_scope:x_'='_x not
R6306:6306 Top.Extraction <> x var
R6308:6308 Top.Extraction <> y var
R6353:6363 Coq.Bool.Bool <> iff_reflect thm
R6353:6363 Coq.Bool.Bool <> iff_reflect thm
R6382:6389 Coq.ZArith.BinInt Z eqb_eq thm
R6382:6389 Coq.ZArith.BinInt Z eqb_eq thm
prf 6404:6416 <> Z_ltb_reflect
R6432:6438 Coq.Bool.Bool <> reflect ind
R6447:6451 Coq.ZArith.BinInt Z ltb def
R6455:6455 Top.Extraction <> y var
R6453:6453 Top.Extraction <> x var
R6442:6442 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6441:6441 Top.Extraction <> x var
R6443:6443 Top.Extraction <> y var
R6488:6498 Coq.Bool.Bool <> iff_reflect thm
R6488:6498 Coq.Bool.Bool <> iff_reflect thm
R6517:6524 Coq.ZArith.BinInt Z ltb_lt thm
R6517:6524 Coq.ZArith.BinInt Z ltb_lt thm
R7266:7299 Coq.Logic.FunctionalExtensionality <> <> lib
mod 7310:7316 <> IntMaps
def 7330:7338 IntMaps total_map
R7353:7356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7357:7357 Top.Extraction <> A var
R7352:7352 Coq.Numbers.BinNums <> Z ind
def 7371:7377 IntMaps t_empty
R7393:7393 Top.Extraction <> A var
R7398:7406 Top.Extraction IntMaps total_map def
R7408:7408 Top.Extraction <> A var
R7424:7424 Top.Extraction <> v var
def 7439:7446 IntMaps t_update
R7462:7470 Top.Extraction IntMaps total_map def
R7472:7472 Top.Extraction <> A var
R7480:7480 Coq.Numbers.BinNums <> Z ind
R7488:7488 Top.Extraction <> A var
R7509:7513 Coq.ZArith.BinInt Z eqb def
R7517:7518 Top.Extraction <> x' var
R7515:7515 Top.Extraction <> x var
R7532:7532 Top.Extraction <> m var
R7534:7535 Top.Extraction <> x' var
R7525:7525 Top.Extraction <> v var
prf 7544:7554 IntMaps t_update_eq
R7571:7579 Top.Extraction IntMaps total_map def
R7581:7581 Top.Extraction <> A var
R7607:7609 Coq.Init.Logic <> :type_scope:x_'='_x not
R7590:7597 Top.Extraction IntMaps t_update def
R7603:7603 Top.Extraction <> v var
R7601:7601 Top.Extraction <> x var
R7599:7599 Top.Extraction <> m var
R7606:7606 Top.Extraction <> x var
R7610:7610 Top.Extraction <> v var
R7637:7644 Top.Extraction IntMaps t_update def
R7661:7662 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R7661:7662 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
prf 7697:7708 IntMaps t_update_neq
R7741:7749 Top.Extraction IntMaps total_map def
R7751:7751 Top.Extraction <> X var
R7765:7769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7790:7792 Coq.Init.Logic <> :type_scope:x_'='_x not
R7771:7778 Top.Extraction IntMaps t_update def
R7785:7785 Top.Extraction <> v var
R7782:7783 Top.Extraction <> x1 var
R7780:7780 Top.Extraction <> m var
R7788:7789 Top.Extraction <> x2 var
R7793:7793 Top.Extraction <> m var
R7795:7796 Top.Extraction <> x2 var
R7759:7762 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7757:7758 Top.Extraction <> x1 var
R7763:7764 Top.Extraction <> x2 var
R7823:7830 Top.Extraction IntMaps t_update def
R7848:7849 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R7848:7849 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
prf 7882:7896 IntMaps t_update_shadow
R7913:7921 Top.Extraction IntMaps total_map def
R7923:7923 Top.Extraction <> A var
R7970:7973 Coq.Init.Logic <> :type_scope:x_'='_x not
R7939:7946 Top.Extraction IntMaps t_update def
R7968:7969 Top.Extraction <> v2 var
R7966:7966 Top.Extraction <> x var
R7949:7956 Top.Extraction IntMaps t_update def
R7962:7963 Top.Extraction <> v1 var
R7960:7960 Top.Extraction <> x var
R7958:7958 Top.Extraction <> m var
R7974:7981 Top.Extraction IntMaps t_update def
R7987:7988 Top.Extraction <> v2 var
R7985:7985 Top.Extraction <> x var
R7983:7983 Top.Extraction <> m var
R8015:8022 Top.Extraction IntMaps t_update def
R8060:8061 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R8060:8061 Coq.ZArith.BinInt <> :Z_scope:x_'=?'_x not
R8083:8089 Top.Extraction IntMaps <> mod
mod 8234:8244 <> SearchTree2
sec 8255:8259 SearchTree2 TREES
var 8271:8271 SearchTree2.TREES V
var 8290:8296 SearchTree2.TREES default
R8299:8299 Top.Extraction <> SearchTree2.TREES.V var
def 8314:8316 SearchTree2 key
R8321:8323 Top.Extraction <> int defax
ind 8337:8340 SearchTree2 tree
constr 8355:8355 SearchTree2 E
constr 8367:8367 SearchTree2 T
R8359:8362 Top.Extraction <> tree ind
R8374:8377 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8381:8384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8386:8389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8394:8397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8398:8401 Top.Extraction <> tree ind
R8390:8393 Top.Extraction <> tree ind
R8385:8385 Top.Extraction <> SearchTree2.TREES.V var
R8378:8380 Top.Extraction SearchTree2 key def
R8370:8373 Top.Extraction <> tree ind
def 8416:8425 SearchTree2 empty_tree
R8429:8432 Top.Extraction SearchTree2 tree ind
R8437:8437 Top.Extraction SearchTree2 E constr
def 8450:8455 SearchTree2 lookup
R8461:8463 Top.Extraction SearchTree2 key def
R8471:8474 Top.Extraction SearchTree2 tree ind
R8479:8479 Top.Extraction <> SearchTree2.TREES.V var
R8492:8492 Top.Extraction <> t var
R8503:8503 Top.Extraction SearchTree2 E constr
R8508:8514 Top.Extraction <> SearchTree2.TREES.default var
R8520:8520 Top.Extraction SearchTree2 T constr
R8538:8540 Top.Extraction <> ltb defax
R8542:8542 Top.Extraction <> x var
R8597:8599 Top.Extraction <> ltb defax
R8603:8603 Top.Extraction <> x var
R8610:8615 Top.Extraction <> lookup def
R8617:8617 Top.Extraction <> x var
R8551:8556 Top.Extraction <> lookup def
R8558:8558 Top.Extraction <> x var
def 8671:8676 SearchTree2 insert
R8682:8684 Top.Extraction SearchTree2 key def
R8691:8691 Top.Extraction <> SearchTree2.TREES.V var
R8698:8701 Top.Extraction SearchTree2 tree ind
R8706:8709 Top.Extraction SearchTree2 tree ind
R8721:8721 Top.Extraction <> s var
R8732:8732 Top.Extraction SearchTree2 E constr
R8737:8737 Top.Extraction SearchTree2 T constr
R8745:8745 Top.Extraction SearchTree2 E constr
R8743:8743 Top.Extraction <> v var
R8741:8741 Top.Extraction <> x var
R8739:8739 Top.Extraction SearchTree2 E constr
R8750:8750 Top.Extraction SearchTree2 T constr
R8768:8770 Top.Extraction <> ltb defax
R8772:8772 Top.Extraction <> x var
R8837:8839 Top.Extraction <> ltb defax
R8843:8843 Top.Extraction <> x var
R8903:8903 Top.Extraction SearchTree2 T constr
R8909:8909 Top.Extraction <> v var
R8907:8907 Top.Extraction <> x var
R8850:8850 Top.Extraction SearchTree2 T constr
R8860:8865 Top.Extraction <> insert def
R8869:8869 Top.Extraction <> v var
R8867:8867 Top.Extraction <> x var
R8781:8781 Top.Extraction SearchTree2 T constr
R8784:8789 Top.Extraction <> insert def
R8793:8793 Top.Extraction <> v var
R8791:8791 Top.Extraction <> x var
def 8929:8937 SearchTree2 elements'
R8943:8946 Top.Extraction SearchTree2 tree ind
R8956:8959 Coq.Init.Datatypes <> list ind
R8965:8965 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R8962:8964 Top.Extraction SearchTree2 key def
R8966:8966 Top.Extraction <> SearchTree2.TREES.V var
R8972:8975 Coq.Init.Datatypes <> list ind
R8981:8983 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R8978:8980 Top.Extraction SearchTree2 key def
R8984:8984 Top.Extraction <> SearchTree2.TREES.V var
R8997:8997 Top.Extraction <> s var
R9007:9007 Top.Extraction SearchTree2 E constr
R9012:9015 Top.Extraction <> base var
R9020:9020 Top.Extraction SearchTree2 T constr
R9033:9041 Top.Extraction <> elements' def
R9051:9054 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9046:9046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9048:9048 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9050:9050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9055:9063 Top.Extraction <> elements' def
R9067:9070 Top.Extraction <> base var
def 9091:9098 SearchTree2 elements
R9104:9107 Top.Extraction SearchTree2 tree ind
R9112:9115 Coq.Init.Datatypes <> list ind
R9121:9123 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R9118:9120 Top.Extraction SearchTree2 key def
R9124:9124 Top.Extraction <> SearchTree2.TREES.V var
R9130:9138 Top.Extraction SearchTree2 elements' def
R9142:9144 Coq.Init.Datatypes <> nil constr
R9140:9140 Top.Extraction <> s var
def 9159:9165 SearchTree2 combine
R9179:9179 Coq.Numbers.BinNums <> Z ind
R9190:9198 Top.Extraction IntMaps total_map def
R9200:9200 Top.Extraction <> A var
R9205:9213 Top.Extraction IntMaps total_map def
R9215:9215 Top.Extraction <> A var
R9234:9238 Coq.ZArith.BinInt Z ltb def
R9242:9246 Top.Extraction <> pivot var
R9240:9240 Top.Extraction <> x var
R9264:9265 Top.Extraction <> m2 var
R9267:9267 Top.Extraction <> x var
R9254:9255 Top.Extraction <> m1 var
R9257:9257 Top.Extraction <> x var
ind 9281:9283 SearchTree2 Abs
constr 9320:9324 SearchTree2 Abs_E
constr 9353:9357 SearchTree2 Abs_T
R9291:9294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9306:9309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9295:9303 Top.Extraction IntMaps total_map def
R9305:9305 Top.Extraction <> SearchTree2.TREES.V var
R9287:9290 Top.Extraction SearchTree2 tree ind
R9327:9329 Top.Extraction <> Abs ind
R9334:9340 Top.Extraction IntMaps t_empty def
R9342:9348 Top.Extraction <> SearchTree2.TREES.default var
R9331:9331 Top.Extraction SearchTree2 E constr
R9393:9402 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9410:9419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9420:9422 Top.Extraction <> Abs ind
R9438:9445 Top.Extraction IntMaps t_update def
R9481:9481 Top.Extraction <> v var
R9472:9476 Top.Extraction <> int2Z defax
R9478:9478 Top.Extraction <> k var
R9448:9454 Top.Extraction SearchTree2 combine def
R9468:9468 Top.Extraction <> b var
R9466:9466 Top.Extraction <> a var
R9457:9461 Top.Extraction <> int2Z defax
R9463:9463 Top.Extraction <> k var
R9425:9425 Top.Extraction SearchTree2 T constr
R9433:9433 Top.Extraction <> r var
R9431:9431 Top.Extraction <> v var
R9429:9429 Top.Extraction <> k var
R9427:9427 Top.Extraction <> l var
R9403:9405 Top.Extraction <> Abs ind
R9409:9409 Top.Extraction <> b var
R9407:9407 Top.Extraction <> r var
R9386:9388 Top.Extraction <> Abs ind
R9392:9392 Top.Extraction <> a var
R9390:9390 Top.Extraction <> l var
prf 9494:9510 SearchTree2 empty_tree_relate
R9513:9515 Top.Extraction SearchTree2 Abs ind
R9529:9535 Top.Extraction IntMaps t_empty def
R9537:9543 Top.Extraction <> SearchTree2.TREES.default var
R9517:9526 Top.Extraction SearchTree2 empty_tree def
prf 9628:9640 SearchTree2 lookup_relate
R9673:9676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9687:9690 Coq.Init.Logic <> :type_scope:x_'='_x not
R9677:9682 Top.Extraction SearchTree2 lookup def
R9686:9686 Top.Extraction <> t var
R9684:9684 Top.Extraction <> k var
R9691:9693 Top.Extraction <> cts var
R9696:9700 Top.Extraction <> int2Z defax
R9702:9702 Top.Extraction <> k var
R9664:9666 Top.Extraction SearchTree2 Abs ind
R9670:9672 Top.Extraction <> cts var
R9668:9668 Top.Extraction <> t var
prf 9864:9876 SearchTree2 insert_relate
R9911:9918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9919:9921 Top.Extraction SearchTree2 Abs ind
R9939:9946 Top.Extraction IntMaps t_update def
R9962:9962 Top.Extraction <> v var
R9953:9957 Top.Extraction <> int2Z defax
R9959:9959 Top.Extraction <> k var
R9948:9950 Top.Extraction <> cts var
R9924:9929 Top.Extraction SearchTree2 insert def
R9935:9935 Top.Extraction <> t var
R9933:9933 Top.Extraction <> v var
R9931:9931 Top.Extraction <> k var
R9902:9904 Top.Extraction SearchTree2 Abs ind
R9908:9910 Top.Extraction <> cts var
R9906:9906 Top.Extraction <> t var
prf 10141:10173 SearchTree2 unrealistically_strong_can_relate
R10188:10194 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10198:10199 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10200:10202 Top.Extraction SearchTree2 Abs ind
R10206:10208 Top.Extraction <> cts var
R10204:10204 Top.Extraction <> t var
R10332:10336 Top.Extraction SearchTree2.TREES <> sec
R10827:10837 Top.Extraction SearchTree2 <> mod
R13304:13313 Top.SearchTree <> <> lib
mod 13323:13333 <> Experiments
def 13369:13378 Experiments empty_tree
R13383:13403 Top.SearchTree <> empty_tree def
R13405:13407 Coq.Init.Datatypes <> nat ind
def 13421:13426 Experiments insert
R13431:13447 Top.SearchTree <> insert def
R13449:13451 Coq.Init.Datatypes <> nat ind
def 13465:13470 Experiments lookup
R13475:13491 Top.SearchTree <> lookup def
R13493:13495 Coq.Init.Datatypes <> nat ind
def 13511:13511 Experiments E
R13516:13527 Top.SearchTree <> E constr
R13529:13531 Coq.Init.Datatypes <> nat ind
def 13545:13545 Experiments T
R13550:13561 Top.SearchTree <> T constr
R13563:13565 Coq.Init.Datatypes <> nat ind
R13660:13663 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R13574:13579 Top.Extraction Experiments insert def
R13586:13591 Top.Extraction Experiments insert def
R13598:13603 Top.Extraction Experiments insert def
R13610:13615 Top.Extraction Experiments insert def
R13622:13627 Top.Extraction Experiments insert def
R13634:13639 Top.Extraction Experiments insert def
R13645:13654 Top.Extraction Experiments empty_tree def
R13664:13664 Top.Extraction Experiments E def
R13679:13679 Top.Extraction Experiments E def
R13694:13694 Top.Extraction Experiments T def
R13679:13679 Top.Extraction Experiments E def
R13694:13694 Top.Extraction Experiments T def
R13694:13694 Top.Extraction Experiments T def
R13694:13694 Top.Extraction Experiments T def
R13694:13694 Top.Extraction Experiments T def
R13694:13694 Top.Extraction Experiments T def
R13694:13694 Top.Extraction Experiments T def
R13694:13694 Top.Extraction Experiments T def
R14200:14210 Top.Extraction Experiments <> mod
