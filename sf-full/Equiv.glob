DIGEST 59f3157fc7dfae4d8f273aa29df121e9
FTop.Equiv
R62:74 Coq.Bool.Bool <> <> lib
R92:106 Coq.Arith.Arith <> <> lib
R124:138 Coq.Arith.EqNat <> <> lib
R156:170 Coq.omega.Omega <> <> lib
R188:201 Coq.Lists.List <> <> lib
R219:252 Coq.Logic.FunctionalExtensionality <> <> lib
R292:295 Top.Maps <> <> lib
R313:315 Top.Imp <> <> lib
def 2253:2258 <> aequiv
R2269:2272 Top.Imp <> aexp ind
R2298:2302 Top.Imp <> state def
R2321:2323 Coq.Init.Logic <> :type_scope:x_'='_x not
R2310:2314 Top.Imp <> aeval def
R2319:2320 Top.Equiv <> a1 var
R2316:2317 Top.Equiv <> st var
R2324:2328 Top.Imp <> aeval def
R2333:2334 Top.Equiv <> a2 var
R2330:2331 Top.Equiv <> st var
def 2349:2354 <> bequiv
R2365:2368 Top.Imp <> bexp ind
R2394:2398 Top.Imp <> state def
R2417:2419 Coq.Init.Logic <> :type_scope:x_'='_x not
R2406:2410 Top.Imp <> beval def
R2415:2416 Top.Equiv <> b1 var
R2412:2413 Top.Equiv <> st var
R2420:2424 Top.Imp <> beval def
R2429:2430 Top.Equiv <> b2 var
R2426:2427 Top.Equiv <> st var
prf 2539:2552 <> aequiv_example
R2557:2562 Top.Equiv <> aequiv def
R2590:2593 Top.Imp <> ANum constr
R2565:2570 Top.Imp <> AMinus constr
R2581:2583 Top.Imp <> AId constr
R2585:2585 Top.Imp <> X def
R2573:2575 Top.Imp <> AId constr
R2577:2577 Top.Imp <> X def
prf 2647:2660 <> bequiv_example
R2665:2670 Top.Equiv <> bequiv def
R2712:2716 Top.Imp <> BTrue constr
R2673:2675 Top.Imp <> BEq constr
R2703:2706 Top.Imp <> ANum constr
R2678:2683 Top.Imp <> AMinus constr
R2694:2696 Top.Imp <> AId constr
R2698:2698 Top.Imp <> X def
R2686:2688 Top.Imp <> AId constr
R2690:2690 Top.Imp <> X def
R2746:2750 Top.Imp <> beval def
R2763:2776 Top.Equiv <> aequiv_example thm
R2763:2776 Top.Equiv <> aequiv_example thm
R2763:2776 Top.Equiv <> aequiv_example thm
def 3393:3398 <> cequiv
R3409:3411 Top.Imp <> com ind
R3443:3447 Top.Imp <> state def
R3455:3455 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3470:3476 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3491:3491 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3458:3460 Top.Imp <> ::x_'/'_x_'\\'_x not
R3463:3466 Top.Imp <> ::x_'/'_x_'\\'_x not
R3456:3457 Top.Equiv <> c1 var
R3461:3462 Top.Equiv <> st var
R3467:3469 Top.Equiv <> st' var
R3479:3481 Top.Imp <> ::x_'/'_x_'\\'_x not
R3484:3487 Top.Imp <> ::x_'/'_x_'\\'_x not
R3477:3478 Top.Equiv <> c2 var
R3482:3483 Top.Equiv <> st var
R3488:3490 Top.Equiv <> st' var
prf 3732:3740 <> skip_left
R3755:3760 Top.Equiv <> cequiv def
R3783:3783 Top.Equiv <> c var
R3772:3774 Top.Imp <> ::x_';;'_x not
R3768:3771 Top.Imp <> ::'SKIP' not
R3775:3775 Top.Equiv <> c var
R3956:3960 Top.Imp <> E_Seq constr
R3956:3960 Top.Imp <> E_Seq constr
R3981:3986 Top.Imp <> E_Skip constr
R3981:3986 Top.Imp <> E_Skip constr
prf 4151:4160 <> skip_right
R4175:4180 Top.Equiv <> cequiv def
R4202:4202 Top.Equiv <> c var
R4188:4191 Top.Imp <> ::x_';;'_x not
R4187:4187 Top.Equiv <> c var
R4192:4195 Top.Imp <> ::'SKIP' not
prf 4327:4341 <> IFB_true_simple
R4360:4365 Top.Equiv <> cequiv def
R4406:4407 Top.Equiv <> c1 var
R4372:4375 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4381:4386 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4389:4394 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4397:4399 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4376:4380 Top.Imp <> BTrue constr
R4387:4388 Top.Equiv <> c1 var
R4395:4396 Top.Equiv <> c2 var
R4538:4545 Top.Imp <> E_IfTrue constr
R4538:4545 Top.Imp <> E_IfTrue constr
prf 6413:6420 <> IFB_true
R6458:6467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6468:6473 Top.Equiv <> cequiv def
R6516:6517 Top.Equiv <> c1 var
R6483:6486 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6488:6493 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6496:6501 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6504:6506 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6487:6487 Top.Equiv <> b var
R6494:6495 Top.Equiv <> c1 var
R6502:6503 Top.Equiv <> c2 var
R6444:6449 Top.Equiv <> bequiv def
R6453:6457 Top.Imp <> BTrue constr
R6451:6451 Top.Equiv <> b var
R6709:6714 Top.Equiv <> bequiv def
R6803:6810 Top.Imp <> E_IfTrue constr
R6803:6810 Top.Imp <> E_IfTrue constr
R6840:6845 Top.Equiv <> bequiv def
prf 6967:6975 <> IFB_false
R7011:7017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7018:7023 Top.Equiv <> cequiv def
R7060:7061 Top.Equiv <> c2 var
R7030:7033 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7035:7040 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7043:7048 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7051:7053 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7034:7034 Top.Equiv <> b var
R7041:7042 Top.Equiv <> c1 var
R7049:7050 Top.Equiv <> c2 var
R6996:7001 Top.Equiv <> bequiv def
R7005:7010 Top.Imp <> BFalse constr
R7003:7003 Top.Equiv <> b var
prf 7247:7262 <> swap_if_branches
R7283:7288 Top.Equiv <> cequiv def
R7326:7329 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7336:7341 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7344:7349 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7352:7354 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7330:7333 Top.Imp <> BNot constr
R7335:7335 Top.Equiv <> b var
R7342:7343 Top.Equiv <> e2 var
R7350:7351 Top.Equiv <> e1 var
R7295:7298 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7300:7305 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7308:7313 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7316:7318 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7299:7299 Top.Equiv <> b var
R7306:7307 Top.Equiv <> e1 var
R7314:7315 Top.Equiv <> e2 var
prf 7722:7732 <> WHILE_false
R7765:7770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7771:7776 Top.Equiv <> cequiv def
R7805:7808 Top.Imp <> ::'SKIP' not
R7783:7788 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7790:7793 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7795:7798 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R7789:7789 Top.Equiv <> b var
R7794:7794 Top.Equiv <> c var
R7750:7755 Top.Equiv <> bequiv def
R7759:7764 Top.Imp <> BFalse constr
R7757:7757 Top.Equiv <> b var
R7924:7929 Top.Imp <> E_Skip constr
R7924:7929 Top.Imp <> E_Skip constr
R8041:8050 Top.Imp <> E_WhileEnd constr
R8041:8050 Top.Imp <> E_WhileEnd constr
prf 9271:9288 <> WHILE_true_nonterm
R9327:9332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9333:9335 Coq.Init.Logic <> :type_scope:'~'_x not
R9366:9367 Coq.Init.Logic <> :type_scope:'~'_x not
R9336:9336 Top.Imp <> ::x_'/'_x_'\\'_x not
R9353:9356 Top.Imp <> ::x_'/'_x_'\\'_x not
R9359:9362 Top.Imp <> ::x_'/'_x_'\\'_x not
R9337:9342 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9344:9347 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9349:9352 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9343:9343 Top.Equiv <> b var
R9348:9348 Top.Equiv <> c var
R9357:9358 Top.Equiv <> st var
R9363:9365 Top.Equiv <> st' var
R9313:9318 Top.Equiv <> bequiv def
R9322:9326 Top.Imp <> BTrue constr
R9320:9320 Top.Equiv <> b var
R9449:9454 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9456:9459 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9461:9464 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9449:9454 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9456:9459 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9461:9464 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9773:9778 Top.Equiv <> bequiv def
prf 10261:10270 <> WHILE_true
R10301:10307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10308:10313 Top.Equiv <> cequiv def
R10343:10348 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10354:10357 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10362:10365 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10349:10353 Top.Imp <> BTrue constr
R10358:10361 Top.Imp <> ::'SKIP' not
R10320:10325 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10327:10330 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10332:10335 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10326:10326 Top.Equiv <> b var
R10331:10331 Top.Equiv <> c var
R10287:10292 Top.Equiv <> bequiv def
R10296:10300 Top.Imp <> BTrue constr
R10294:10294 Top.Equiv <> b var
prf 10638:10651 <> loop_unrolling
R10668:10673 Top.Equiv <> cequiv def
R10703:10706 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R10708:10714 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R10736:10742 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R10747:10749 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R10707:10707 Top.Equiv <> b var
R10716:10719 Top.Imp <> ::x_';;'_x not
R10715:10715 Top.Equiv <> c var
R10720:10725 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10727:10730 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10732:10735 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10726:10726 Top.Equiv <> b var
R10731:10731 Top.Equiv <> c var
R10743:10746 Top.Imp <> ::'SKIP' not
R10680:10685 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10687:10690 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10692:10695 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10686:10686 Top.Equiv <> b var
R10691:10691 Top.Equiv <> c var
R10905:10913 Top.Imp <> E_IfFalse constr
R10905:10913 Top.Imp <> E_IfFalse constr
R10934:10939 Top.Imp <> E_Skip constr
R10934:10939 Top.Imp <> E_Skip constr
R10979:10986 Top.Imp <> E_IfTrue constr
R10979:10986 Top.Imp <> E_IfTrue constr
R11013:11017 Top.Imp <> E_Seq constr
R11013:11017 Top.Imp <> E_Seq constr
R11166:11176 Top.Imp <> E_WhileLoop constr
R11166:11176 Top.Imp <> E_WhileLoop constr
R11301:11310 Top.Imp <> E_WhileEnd constr
R11301:11310 Top.Imp <> E_WhileEnd constr
prf 11393:11401 <> seq_assoc
R11424:11429 Top.Equiv <> cequiv def
R11449:11451 Top.Imp <> ::x_';;'_x not
R11458:11458 Top.Imp <> ::x_';;'_x not
R11447:11448 Top.Equiv <> c1 var
R11454:11455 Top.Imp <> ::x_';;'_x not
R11452:11453 Top.Equiv <> c2 var
R11456:11457 Top.Equiv <> c3 var
R11432:11432 Top.Imp <> ::x_';;'_x not
R11439:11441 Top.Imp <> ::x_';;'_x not
R11435:11436 Top.Imp <> ::x_';;'_x not
R11433:11434 Top.Equiv <> c1 var
R11437:11438 Top.Equiv <> c2 var
R11442:11443 Top.Equiv <> c3 var
prf 11657:11675 <> identity_assignment
R11689:11690 Top.Maps <> id ind
R11696:11701 Top.Equiv <> cequiv def
R11725:11728 Top.Imp <> ::'SKIP' not
R11709:11713 Top.Imp <> ::x_'::='_x not
R11708:11708 Top.Equiv <> X var
R11714:11716 Top.Imp <> AId constr
R11718:11718 Top.Equiv <> X var
R11831:11838 Top.Maps <> t_update def
R11831:11838 Top.Maps <> t_update def
R11899:11923 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R11899:11923 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R11950:11962 Top.Maps <> t_update_same prfax
R11950:11962 Top.Maps <> t_update_same prfax
R11950:11962 Top.Maps <> t_update_same prfax
R12019:12026 Top.Maps <> t_update def
R12035:12039 Top.Imp <> aeval def
R12046:12048 Top.Imp <> AId constr
R12019:12026 Top.Maps <> t_update def
R12035:12039 Top.Imp <> aeval def
R12046:12048 Top.Imp <> AId constr
R12091:12095 Top.Imp <> E_Ass constr
R12091:12095 Top.Imp <> E_Ass constr
R12126:12150 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12126:12150 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12177:12189 Top.Maps <> t_update_same prfax
R12177:12189 Top.Maps <> t_update_same prfax
R12177:12189 Top.Maps <> t_update_same prfax
prf 12279:12291 <> assign_aequiv
R12325:12330 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12331:12336 Top.Equiv <> cequiv def
R12345:12349 Top.Imp <> ::x_'::='_x not
R12344:12344 Top.Equiv <> X var
R12350:12350 Top.Equiv <> e var
R12338:12341 Top.Imp <> ::'SKIP' not
R12309:12314 Top.Equiv <> aequiv def
R12324:12324 Top.Equiv <> e var
R12317:12319 Top.Imp <> AId constr
R12321:12321 Top.Equiv <> X var
def 12978:12983 <> prog_a
R12987:12989 Top.Imp <> com ind
R12996:13001 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13029:13036 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13065:13070 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13002:13005 Top.Imp <> BNot constr
R13008:13010 Top.Imp <> BLe constr
R13021:13024 Top.Imp <> ANum constr
R13013:13015 Top.Imp <> AId constr
R13017:13017 Top.Imp <> X def
R13038:13042 Top.Imp <> ::x_'::='_x not
R13037:13037 Top.Imp <> X def
R13043:13047 Top.Imp <> APlus constr
R13058:13061 Top.Imp <> ANum constr
R13050:13052 Top.Imp <> AId constr
R13054:13054 Top.Imp <> X def
def 13085:13090 <> prog_b
R13094:13096 Top.Imp <> com ind
R13213:13217 Top.Imp <> ::x_';;'_x not
R13103:13106 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13127:13136 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13184:13195 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13208:13212 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13107:13109 Top.Imp <> BEq constr
R13120:13123 Top.Imp <> ANum constr
R13112:13114 Top.Imp <> AId constr
R13116:13116 Top.Imp <> X def
R13165:13171 Top.Imp <> ::x_';;'_x not
R13138:13142 Top.Imp <> ::x_'::='_x not
R13137:13137 Top.Imp <> X def
R13143:13147 Top.Imp <> APlus constr
R13158:13161 Top.Imp <> ANum constr
R13150:13152 Top.Imp <> AId constr
R13154:13154 Top.Imp <> X def
R13173:13177 Top.Imp <> ::x_'::='_x not
R13172:13172 Top.Imp <> Y def
R13178:13181 Top.Imp <> ANum constr
R13197:13201 Top.Imp <> ::x_'::='_x not
R13196:13196 Top.Imp <> Y def
R13202:13205 Top.Imp <> ANum constr
R13246:13250 Top.Imp <> ::x_';;'_x not
R13219:13223 Top.Imp <> ::x_'::='_x not
R13218:13218 Top.Imp <> X def
R13224:13229 Top.Imp <> AMinus constr
R13240:13242 Top.Imp <> AId constr
R13244:13244 Top.Imp <> Y def
R13232:13234 Top.Imp <> AId constr
R13236:13236 Top.Imp <> X def
R13252:13256 Top.Imp <> ::x_'::='_x not
R13251:13251 Top.Imp <> Y def
R13257:13260 Top.Imp <> ANum constr
def 13277:13282 <> prog_c
R13286:13288 Top.Imp <> com ind
R13295:13298 Top.Imp <> ::'SKIP' not
def 13313:13318 <> prog_d
R13322:13324 Top.Imp <> com ind
R13331:13336 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13364:13371 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13416:13421 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13337:13340 Top.Imp <> BNot constr
R13343:13345 Top.Imp <> BEq constr
R13356:13359 Top.Imp <> ANum constr
R13348:13350 Top.Imp <> AId constr
R13352:13352 Top.Imp <> X def
R13373:13377 Top.Imp <> ::x_'::='_x not
R13372:13372 Top.Imp <> X def
R13378:13382 Top.Imp <> APlus constr
R13409:13412 Top.Imp <> ANum constr
R13385:13389 Top.Imp <> AMult constr
R13400:13402 Top.Imp <> AId constr
R13404:13404 Top.Imp <> Y def
R13392:13394 Top.Imp <> AId constr
R13396:13396 Top.Imp <> X def
def 13436:13441 <> prog_e
R13445:13447 Top.Imp <> com ind
R13455:13459 Top.Imp <> ::x_'::='_x not
R13454:13454 Top.Imp <> Y def
R13460:13463 Top.Imp <> ANum constr
def 13480:13485 <> prog_f
R13489:13491 Top.Imp <> com ind
R13526:13530 Top.Imp <> ::x_';;'_x not
R13499:13503 Top.Imp <> ::x_'::='_x not
R13498:13498 Top.Imp <> Y def
R13504:13508 Top.Imp <> APlus constr
R13519:13522 Top.Imp <> ANum constr
R13511:13513 Top.Imp <> AId constr
R13515:13515 Top.Imp <> X def
R13531:13536 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13563:13570 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13599:13604 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13537:13540 Top.Imp <> BNot constr
R13543:13545 Top.Imp <> BEq constr
R13556:13558 Top.Imp <> AId constr
R13560:13560 Top.Imp <> Y def
R13548:13550 Top.Imp <> AId constr
R13552:13552 Top.Imp <> X def
R13572:13576 Top.Imp <> ::x_'::='_x not
R13571:13571 Top.Imp <> Y def
R13577:13581 Top.Imp <> APlus constr
R13592:13595 Top.Imp <> ANum constr
R13584:13586 Top.Imp <> AId constr
R13588:13588 Top.Imp <> X def
def 13619:13624 <> prog_g
R13628:13630 Top.Imp <> com ind
R13637:13642 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13648:13655 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13660:13665 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13643:13647 Top.Imp <> BTrue constr
R13656:13659 Top.Imp <> ::'SKIP' not
def 13680:13685 <> prog_h
R13689:13691 Top.Imp <> com ind
R13698:13703 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13730:13737 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13766:13771 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13704:13707 Top.Imp <> BNot constr
R13710:13712 Top.Imp <> BEq constr
R13723:13725 Top.Imp <> AId constr
R13727:13727 Top.Imp <> X def
R13715:13717 Top.Imp <> AId constr
R13719:13719 Top.Imp <> X def
R13739:13743 Top.Imp <> ::x_'::='_x not
R13738:13738 Top.Imp <> X def
R13744:13748 Top.Imp <> APlus constr
R13759:13762 Top.Imp <> ANum constr
R13751:13753 Top.Imp <> AId constr
R13755:13755 Top.Imp <> X def
def 13786:13791 <> prog_i
R13795:13797 Top.Imp <> com ind
R13804:13809 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13836:13843 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13872:13877 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13810:13813 Top.Imp <> BNot constr
R13816:13818 Top.Imp <> BEq constr
R13829:13831 Top.Imp <> AId constr
R13833:13833 Top.Imp <> Y def
R13821:13823 Top.Imp <> AId constr
R13825:13825 Top.Imp <> X def
R13845:13849 Top.Imp <> ::x_'::='_x not
R13844:13844 Top.Imp <> X def
R13850:13854 Top.Imp <> APlus constr
R13865:13868 Top.Imp <> ANum constr
R13857:13859 Top.Imp <> AId constr
R13861:13861 Top.Imp <> Y def
def 13892:13904 <> equiv_classes
R13908:13911 Coq.Init.Datatypes <> list ind
R13914:13917 Coq.Init.Datatypes <> list ind
R13919:13921 Top.Imp <> com ind
prf 14565:14575 <> refl_aequiv
R14591:14594 Top.Imp <> aexp ind
R14598:14603 Top.Equiv <> aequiv def
R14607:14607 Top.Equiv <> a var
R14605:14605 Top.Equiv <> a var
prf 14658:14667 <> sym_aequiv
R14687:14690 Top.Imp <> aexp ind
R14708:14711 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14712:14717 Top.Equiv <> aequiv def
R14722:14723 Top.Equiv <> a1 var
R14719:14720 Top.Equiv <> a2 var
R14696:14701 Top.Equiv <> aequiv def
R14706:14707 Top.Equiv <> a2 var
R14703:14704 Top.Equiv <> a1 var
prf 14794:14805 <> trans_aequiv
R14828:14831 Top.Imp <> aexp ind
R14849:14852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14865:14868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14869:14874 Top.Equiv <> aequiv def
R14879:14880 Top.Equiv <> a3 var
R14876:14877 Top.Equiv <> a1 var
R14853:14858 Top.Equiv <> aequiv def
R14863:14864 Top.Equiv <> a3 var
R14860:14861 Top.Equiv <> a2 var
R14837:14842 Top.Equiv <> aequiv def
R14847:14848 Top.Equiv <> a2 var
R14844:14845 Top.Equiv <> a1 var
R14899:14904 Top.Equiv <> aequiv def
prf 14999:15009 <> refl_bequiv
R15025:15028 Top.Imp <> bexp ind
R15032:15037 Top.Equiv <> bequiv def
R15041:15041 Top.Equiv <> b var
R15039:15039 Top.Equiv <> b var
R15060:15065 Top.Equiv <> bequiv def
prf 15107:15116 <> sym_bequiv
R15136:15139 Top.Imp <> bexp ind
R15157:15160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15161:15166 Top.Equiv <> bequiv def
R15171:15172 Top.Equiv <> b1 var
R15168:15169 Top.Equiv <> b2 var
R15145:15150 Top.Equiv <> bequiv def
R15155:15156 Top.Equiv <> b2 var
R15152:15153 Top.Equiv <> b1 var
R15191:15196 Top.Equiv <> bequiv def
prf 15258:15269 <> trans_bequiv
R15292:15295 Top.Imp <> bexp ind
R15313:15316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15329:15332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15333:15338 Top.Equiv <> bequiv def
R15343:15344 Top.Equiv <> b3 var
R15340:15341 Top.Equiv <> b1 var
R15317:15322 Top.Equiv <> bequiv def
R15327:15328 Top.Equiv <> b3 var
R15324:15325 Top.Equiv <> b2 var
R15301:15306 Top.Equiv <> bequiv def
R15311:15312 Top.Equiv <> b2 var
R15308:15309 Top.Equiv <> b1 var
R15363:15368 Top.Equiv <> bequiv def
prf 15463:15473 <> refl_cequiv
R15489:15491 Top.Imp <> com ind
R15495:15500 Top.Equiv <> cequiv def
R15504:15504 Top.Equiv <> c var
R15502:15502 Top.Equiv <> c var
R15523:15528 Top.Equiv <> cequiv def
R15554:15561 Coq.Init.Logic <> iff_refl thm
R15554:15561 Coq.Init.Logic <> iff_refl thm
prf 15577:15586 <> sym_cequiv
R15606:15608 Top.Imp <> com ind
R15626:15629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15630:15635 Top.Equiv <> cequiv def
R15640:15641 Top.Equiv <> c1 var
R15637:15638 Top.Equiv <> c2 var
R15614:15619 Top.Equiv <> cequiv def
R15624:15625 Top.Equiv <> c2 var
R15621:15622 Top.Equiv <> c1 var
R15660:15665 Top.Equiv <> cequiv def
R15715:15719 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15703:15705 Top.Imp <> ::x_'/'_x_'\\'_x not
R15708:15711 Top.Imp <> ::x_'/'_x_'\\'_x not
R15722:15724 Top.Imp <> ::x_'/'_x_'\\'_x not
R15727:15730 Top.Imp <> ::x_'/'_x_'\\'_x not
R15715:15719 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15703:15705 Top.Imp <> ::x_'/'_x_'\\'_x not
R15708:15711 Top.Imp <> ::x_'/'_x_'\\'_x not
R15722:15724 Top.Imp <> ::x_'/'_x_'\\'_x not
R15727:15730 Top.Imp <> ::x_'/'_x_'\\'_x not
R15788:15794 Coq.Init.Logic <> iff_sym thm
R15788:15794 Coq.Init.Logic <> iff_sym thm
prf 15821:15829 <> iff_trans
R15861:15861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15871:15875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15876:15876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15886:15891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15901:15901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15894:15898 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15892:15893 Top.Equiv <> P1 var
R15899:15900 Top.Equiv <> P3 var
R15879:15883 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15877:15878 Top.Equiv <> P2 var
R15884:15885 Top.Equiv <> P3 var
R15864:15868 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15862:15863 Top.Equiv <> P1 var
R15869:15870 Top.Equiv <> P2 var
prf 16067:16078 <> trans_cequiv
R16101:16103 Top.Imp <> com ind
R16121:16124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16137:16140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16141:16146 Top.Equiv <> cequiv def
R16151:16152 Top.Equiv <> c3 var
R16148:16149 Top.Equiv <> c1 var
R16125:16130 Top.Equiv <> cequiv def
R16135:16136 Top.Equiv <> c3 var
R16132:16133 Top.Equiv <> c2 var
R16109:16114 Top.Equiv <> cequiv def
R16119:16120 Top.Equiv <> c2 var
R16116:16117 Top.Equiv <> c1 var
R16171:16176 Top.Equiv <> cequiv def
R16237:16239 Top.Imp <> ::x_'/'_x_'\\'_x not
R16242:16245 Top.Imp <> ::x_'/'_x_'\\'_x not
R16219:16227 Top.Equiv <> iff_trans thm
R16237:16239 Top.Imp <> ::x_'/'_x_'\\'_x not
R16242:16245 Top.Imp <> ::x_'/'_x_'\\'_x not
R16219:16227 Top.Equiv <> iff_trans thm
prf 17547:17561 <> CAss_congruence
R17597:17602 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17603:17608 Top.Equiv <> cequiv def
R17623:17626 Top.Imp <> CAss constr
R17630:17632 Top.Equiv <> a1' var
R17628:17628 Top.Equiv <> i var
R17611:17614 Top.Imp <> CAss constr
R17618:17619 Top.Equiv <> a1 var
R17616:17616 Top.Equiv <> i var
R17584:17589 Top.Equiv <> aequiv def
R17594:17596 Top.Equiv <> a1' var
R17591:17592 Top.Equiv <> a1 var
R17745:17749 Top.Imp <> E_Ass constr
R17745:17749 Top.Imp <> E_Ass constr
R17831:17835 Top.Imp <> E_Ass constr
R17831:17835 Top.Imp <> E_Ass constr
prf 19663:19679 <> CWhile_congruence
R19720:19723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19737:19742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19743:19748 Top.Equiv <> cequiv def
R19772:19777 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19781:19784 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19788:19791 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19778:19780 Top.Equiv <> b1' var
R19785:19787 Top.Equiv <> c1' var
R19751:19756 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19759:19762 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19765:19768 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19757:19758 Top.Equiv <> b1 var
R19763:19764 Top.Equiv <> c1 var
R19724:19729 Top.Equiv <> cequiv def
R19734:19736 Top.Equiv <> c1' var
R19731:19732 Top.Equiv <> c1 var
R19707:19712 Top.Equiv <> bequiv def
R19717:19719 Top.Equiv <> b1' var
R19714:19715 Top.Equiv <> b1 var
R19835:19840 Top.Equiv <> bequiv def
R19842:19847 Top.Equiv <> cequiv def
R19939:19944 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19947:19950 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19953:19956 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19939:19944 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19947:19950 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R19953:19956 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20072:20081 Top.Imp <> E_WhileEnd constr
R20072:20081 Top.Imp <> E_WhileEnd constr
R20146:20156 Top.Imp <> E_WhileLoop constr
R20146:20156 Top.Imp <> E_WhileLoop constr
R20405:20410 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20414:20417 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20421:20424 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20405:20410 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20414:20417 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20421:20424 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20543:20552 Top.Imp <> E_WhileEnd constr
R20543:20552 Top.Imp <> E_WhileEnd constr
R20617:20627 Top.Imp <> E_WhileLoop constr
R20617:20627 Top.Imp <> E_WhileLoop constr
prf 20923:20937 <> CSeq_congruence
R20978:20981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20995:21000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21001:21006 Top.Equiv <> cequiv def
R21021:21022 Top.Imp <> ::x_';;'_x not
R21018:21020 Top.Equiv <> c1' var
R21023:21025 Top.Equiv <> c2' var
R21011:21012 Top.Imp <> ::x_';;'_x not
R21009:21010 Top.Equiv <> c1 var
R21013:21014 Top.Equiv <> c2 var
R20982:20987 Top.Equiv <> cequiv def
R20992:20994 Top.Equiv <> c2' var
R20989:20990 Top.Equiv <> c2 var
R20965:20970 Top.Equiv <> cequiv def
R20975:20977 Top.Equiv <> c1' var
R20972:20973 Top.Equiv <> c1 var
prf 21134:21147 <> CIf_congruence
R21191:21194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21208:21211 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21225:21230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21231:21236 Top.Equiv <> cequiv def
R21275:21278 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21281:21286 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21290:21295 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21299:21301 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21279:21280 Top.Equiv <> b' var
R21287:21289 Top.Equiv <> c1' var
R21296:21298 Top.Equiv <> c2' var
R21239:21242 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21244:21249 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21252:21257 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21260:21262 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21243:21243 Top.Equiv <> b var
R21250:21251 Top.Equiv <> c1 var
R21258:21259 Top.Equiv <> c2 var
R21212:21217 Top.Equiv <> cequiv def
R21222:21224 Top.Equiv <> c2' var
R21219:21220 Top.Equiv <> c2 var
R21195:21200 Top.Equiv <> cequiv def
R21205:21207 Top.Equiv <> c1' var
R21202:21203 Top.Equiv <> c1 var
R21180:21185 Top.Equiv <> bequiv def
R21189:21190 Top.Equiv <> b' var
R21187:21187 Top.Equiv <> b var
def 21441:21458 <> congruence_example
R21463:21468 Top.Equiv <> cequiv def
R21651:21658 Top.Imp <> ::x_';;'_x not
R21640:21644 Top.Imp <> ::x_'::='_x not
R21639:21639 Top.Imp <> X def
R21645:21648 Top.Imp <> ANum constr
R21659:21663 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21684:21702 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21731:21777 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21791:21798 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21664:21666 Top.Imp <> BEq constr
R21677:21680 Top.Imp <> ANum constr
R21669:21671 Top.Imp <> AId constr
R21673:21673 Top.Imp <> X def
R21704:21708 Top.Imp <> ::x_'::='_x not
R21703:21703 Top.Imp <> Y def
R21709:21714 Top.Imp <> AMinus constr
R21725:21727 Top.Imp <> AId constr
R21729:21729 Top.Imp <> X def
R21717:21719 Top.Imp <> AId constr
R21721:21721 Top.Imp <> X def
R21779:21783 Top.Imp <> ::x_'::='_x not
R21778:21778 Top.Imp <> Y def
R21784:21787 Top.Imp <> ANum constr
R21508:21515 Top.Imp <> ::x_';;'_x not
R21497:21501 Top.Imp <> ::x_'::='_x not
R21496:21496 Top.Imp <> X def
R21502:21505 Top.Imp <> ANum constr
R21516:21520 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21541:21559 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21572:21589 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21603:21610 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21521:21523 Top.Imp <> BEq constr
R21534:21537 Top.Imp <> ANum constr
R21526:21528 Top.Imp <> AId constr
R21530:21530 Top.Imp <> X def
R21561:21565 Top.Imp <> ::x_'::='_x not
R21560:21560 Top.Imp <> Y def
R21566:21569 Top.Imp <> ANum constr
R21591:21595 Top.Imp <> ::x_'::='_x not
R21590:21590 Top.Imp <> Y def
R21596:21599 Top.Imp <> ANum constr
R21817:21831 Top.Equiv <> CSeq_congruence prfax
R21817:21831 Top.Equiv <> CSeq_congruence prfax
R21844:21854 Top.Equiv <> refl_cequiv thm
R21844:21854 Top.Equiv <> refl_cequiv thm
R21867:21880 Top.Equiv <> CIf_congruence prfax
R21867:21880 Top.Equiv <> CIf_congruence prfax
R21895:21905 Top.Equiv <> refl_bequiv thm
R21895:21905 Top.Equiv <> refl_bequiv thm
R21920:21934 Top.Equiv <> CAss_congruence thm
R21920:21934 Top.Equiv <> CAss_congruence thm
R21944:21949 Top.Equiv <> aequiv def
R21983:21992 Coq.Arith.Minus <> minus_diag syndef
R21983:21992 Coq.Arith.Minus <> minus_diag syndef
R22007:22017 Top.Equiv <> refl_cequiv thm
R22007:22017 Top.Equiv <> refl_cequiv thm
def 22902:22913 <> atrans_sound
R22929:22932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22933:22936 Top.Imp <> aexp ind
R22925:22928 Top.Imp <> aexp ind
R22963:22966 Top.Imp <> aexp ind
R22974:22979 Top.Equiv <> aequiv def
R22984:22989 Top.Equiv <> atrans var
R22991:22991 Top.Equiv <> a var
R22981:22981 Top.Equiv <> a var
def 23007:23018 <> btrans_sound
R23034:23037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23038:23041 Top.Imp <> bexp ind
R23030:23033 Top.Imp <> bexp ind
R23068:23071 Top.Imp <> bexp ind
R23079:23084 Top.Equiv <> bequiv def
R23089:23094 Top.Equiv <> btrans var
R23096:23096 Top.Equiv <> b var
R23086:23086 Top.Equiv <> b var
def 23112:23123 <> ctrans_sound
R23138:23141 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23142:23144 Top.Imp <> com ind
R23135:23137 Top.Imp <> com ind
R23171:23173 Top.Imp <> com ind
R23181:23186 Top.Equiv <> cequiv def
R23191:23196 Top.Equiv <> ctrans var
R23198:23198 Top.Equiv <> c var
R23188:23188 Top.Equiv <> c var
def 23511:23529 <> fold_constants_aexp
R23536:23539 Top.Imp <> aexp ind
R23544:23547 Top.Imp <> aexp ind
R23560:23560 Top.Equiv <> a var
R23571:23574 Top.Imp <> ANum constr
R23587:23590 Top.Imp <> ANum constr
R23598:23600 Top.Imp <> AId constr
R23614:23616 Top.Imp <> AId constr
R23624:23628 Top.Imp <> APlus constr
R23650:23650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23673:23674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23697:23697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23651:23669 Top.Equiv <> fold_constants_aexp def
R23675:23693 Top.Equiv <> fold_constants_aexp def
R23714:23714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23722:23723 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23731:23731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23715:23718 Top.Imp <> ANum constr
R23724:23727 Top.Imp <> ANum constr
R23736:23739 Top.Imp <> ANum constr
R23744:23746 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23757:23757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23761:23762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23766:23766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23771:23775 Top.Imp <> APlus constr
R23797:23802 Top.Imp <> AMinus constr
R23823:23823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23846:23847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23870:23870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23824:23842 Top.Equiv <> fold_constants_aexp def
R23848:23866 Top.Equiv <> fold_constants_aexp def
R23887:23887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23895:23896 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23904:23904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23888:23891 Top.Imp <> ANum constr
R23897:23900 Top.Imp <> ANum constr
R23909:23912 Top.Imp <> ANum constr
R23917:23919 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23930:23930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23934:23935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23939:23939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23944:23949 Top.Imp <> AMinus constr
R23971:23975 Top.Imp <> AMult constr
R23997:23997 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24020:24021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24044:24044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23998:24016 Top.Equiv <> fold_constants_aexp def
R24022:24040 Top.Equiv <> fold_constants_aexp def
R24061:24061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24069:24070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24078:24078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24062:24065 Top.Imp <> ANum constr
R24071:24074 Top.Imp <> ANum constr
R24083:24086 Top.Imp <> ANum constr
R24091:24093 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24104:24104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24108:24109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24113:24113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24118:24122 Top.Imp <> AMult constr
def 24156:24168 <> fold_aexp_ex1
R24243:24247 Coq.Init.Logic <> :type_scope:x_'='_x not
R24176:24194 Top.Equiv <> fold_constants_aexp def
R24203:24207 Top.Imp <> AMult constr
R24236:24238 Top.Imp <> AId constr
R24240:24240 Top.Imp <> X def
R24210:24214 Top.Imp <> APlus constr
R24226:24229 Top.Imp <> ANum constr
R24217:24220 Top.Imp <> ANum constr
R24248:24252 Top.Imp <> AMult constr
R24264:24266 Top.Imp <> AId constr
R24268:24268 Top.Imp <> X def
R24255:24258 Top.Imp <> ANum constr
def 24555:24567 <> fold_aexp_ex2
R24688:24692 Coq.Init.Logic <> :type_scope:x_'='_x not
R24575:24593 Top.Equiv <> fold_constants_aexp def
R24602:24607 Top.Imp <> AMinus constr
R24618:24622 Top.Imp <> APlus constr
R24680:24682 Top.Imp <> AId constr
R24684:24684 Top.Imp <> Y def
R24625:24629 Top.Imp <> AMult constr
R24641:24644 Top.Imp <> ANum constr
R24632:24635 Top.Imp <> ANum constr
R24610:24612 Top.Imp <> AId constr
R24614:24614 Top.Imp <> X def
R24693:24698 Top.Imp <> AMinus constr
R24709:24713 Top.Imp <> APlus constr
R24725:24727 Top.Imp <> AId constr
R24729:24729 Top.Imp <> Y def
R24716:24719 Top.Imp <> ANum constr
R24701:24703 Top.Imp <> AId constr
R24705:24705 Top.Imp <> X def
def 24986:25004 <> fold_constants_bexp
R25011:25014 Top.Imp <> bexp ind
R25019:25022 Top.Imp <> bexp ind
R25035:25035 Top.Equiv <> b var
R25046:25050 Top.Imp <> BTrue constr
R25062:25066 Top.Imp <> BTrue constr
R25072:25077 Top.Imp <> BFalse constr
R25088:25093 Top.Imp <> BFalse constr
R25099:25101 Top.Imp <> BEq constr
R25125:25125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25148:25149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25172:25172 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25126:25144 Top.Equiv <> fold_constants_aexp def
R25150:25168 Top.Equiv <> fold_constants_aexp def
R25187:25187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25195:25196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25204:25204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25188:25191 Top.Imp <> ANum constr
R25197:25200 Top.Imp <> ANum constr
R25222:25228 Coq.Arith.EqNat <> beq_nat syndef
R25252:25257 Top.Imp <> BFalse constr
R25241:25245 Top.Imp <> BTrue constr
R25267:25267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25271:25272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25276:25276 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25291:25293 Top.Imp <> BEq constr
R25317:25319 Top.Imp <> BLe constr
R25343:25343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25366:25367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25390:25390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25344:25362 Top.Equiv <> fold_constants_aexp def
R25368:25386 Top.Equiv <> fold_constants_aexp def
R25405:25405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25413:25414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25422:25422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25406:25409 Top.Imp <> ANum constr
R25415:25418 Top.Imp <> ANum constr
R25440:25442 Coq.Arith.Compare_dec <> leb syndef
R25466:25471 Top.Imp <> BFalse constr
R25455:25459 Top.Imp <> BTrue constr
R25481:25481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25485:25486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25490:25490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25505:25507 Top.Imp <> BLe constr
R25531:25534 Top.Imp <> BNot constr
R25556:25574 Top.Equiv <> fold_constants_bexp def
R25593:25597 Top.Imp <> BTrue constr
R25602:25607 Top.Imp <> BFalse constr
R25617:25622 Top.Imp <> BFalse constr
R25627:25631 Top.Imp <> BTrue constr
R25648:25651 Top.Imp <> BNot constr
R25671:25674 Top.Imp <> BAnd constr
R25698:25698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25721:25722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25745:25745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25699:25717 Top.Equiv <> fold_constants_bexp def
R25723:25741 Top.Equiv <> fold_constants_bexp def
R25760:25760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25766:25767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25773:25773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25761:25765 Top.Imp <> BTrue constr
R25768:25772 Top.Imp <> BTrue constr
R25778:25782 Top.Imp <> BTrue constr
R25792:25792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25798:25799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25806:25806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25793:25797 Top.Imp <> BTrue constr
R25800:25805 Top.Imp <> BFalse constr
R25811:25816 Top.Imp <> BFalse constr
R25826:25826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25833:25834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25840:25840 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25827:25832 Top.Imp <> BFalse constr
R25835:25839 Top.Imp <> BTrue constr
R25845:25850 Top.Imp <> BFalse constr
R25860:25860 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25867:25868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25875:25875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25861:25866 Top.Imp <> BFalse constr
R25869:25874 Top.Imp <> BFalse constr
R25880:25885 Top.Imp <> BFalse constr
R25895:25895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25899:25900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25904:25904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25909:25912 Top.Imp <> BAnd constr
def 25948:25960 <> fold_bexp_ex1
R26027:26031 Coq.Init.Logic <> :type_scope:x_'='_x not
R25968:25986 Top.Equiv <> fold_constants_bexp def
R25989:25992 Top.Imp <> BAnd constr
R26001:26004 Top.Imp <> BNot constr
R26007:26010 Top.Imp <> BAnd constr
R26019:26023 Top.Imp <> BTrue constr
R26012:26017 Top.Imp <> BFalse constr
R25994:25998 Top.Imp <> BTrue constr
R26032:26036 Top.Imp <> BTrue constr
def 26073:26085 <> fold_bexp_ex2
R26276:26280 Coq.Init.Logic <> :type_scope:x_'='_x not
R26093:26111 Top.Equiv <> fold_constants_bexp def
R26120:26123 Top.Imp <> BAnd constr
R26160:26162 Top.Imp <> BEq constr
R26191:26196 Top.Imp <> AMinus constr
R26208:26212 Top.Imp <> APlus constr
R26265:26268 Top.Imp <> ANum constr
R26215:26218 Top.Imp <> ANum constr
R26199:26202 Top.Imp <> ANum constr
R26165:26168 Top.Imp <> ANum constr
R26126:26128 Top.Imp <> BEq constr
R26139:26141 Top.Imp <> AId constr
R26143:26143 Top.Imp <> Y def
R26131:26133 Top.Imp <> AId constr
R26135:26135 Top.Imp <> X def
R26281:26284 Top.Imp <> BAnd constr
R26308:26312 Top.Imp <> BTrue constr
R26287:26289 Top.Imp <> BEq constr
R26300:26302 Top.Imp <> AId constr
R26304:26304 Top.Imp <> Y def
R26292:26294 Top.Imp <> AId constr
R26296:26296 Top.Imp <> X def
def 26449:26466 <> fold_constants_com
R26473:26475 Top.Imp <> com ind
R26480:26482 Top.Imp <> com ind
R26495:26495 Top.Equiv <> c var
R26506:26509 Top.Imp <> ::'SKIP' not
R26525:26528 Top.Imp <> ::'SKIP' not
R26535:26539 Top.Imp <> ::x_'::='_x not
R26552:26555 Top.Imp <> CAss constr
R26560:26578 Top.Equiv <> fold_constants_aexp def
R26589:26592 Top.Imp <> ::x_';;'_x not
R26606:26606 Top.Imp <> ::x_';;'_x not
R26628:26633 Top.Imp <> ::x_';;'_x not
R26655:26655 Top.Imp <> ::x_';;'_x not
R26607:26624 Top.Equiv <> fold_constants_com def
R26634:26651 Top.Equiv <> fold_constants_com def
R26661:26664 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26666:26671 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26674:26679 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26682:26684 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26701:26719 Top.Equiv <> fold_constants_bexp def
R26736:26740 Top.Imp <> BTrue constr
R26745:26762 Top.Equiv <> fold_constants_com def
R26775:26780 Top.Imp <> BFalse constr
R26785:26802 Top.Equiv <> fold_constants_com def
R26821:26824 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26827:26832 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26854:26880 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26902:26904 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26833:26850 Top.Equiv <> fold_constants_com def
R26881:26898 Top.Equiv <> fold_constants_com def
R26920:26925 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R26927:26930 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R26932:26935 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R26952:26970 Top.Equiv <> fold_constants_bexp def
R26987:26991 Top.Imp <> BTrue constr
R26996:27001 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27007:27010 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27015:27018 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27002:27006 Top.Imp <> BTrue constr
R27011:27014 Top.Imp <> ::'SKIP' not
R27028:27033 Top.Imp <> BFalse constr
R27038:27041 Top.Imp <> ::'SKIP' not
R27057:27062 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27065:27069 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27090:27094 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27070:27087 Top.Equiv <> fold_constants_com def
R27089:27089 Top.Equiv <> c var
def 27122:27133 <> fold_com_ex1
R27608:27640 Coq.Init.Logic <> :type_scope:x_'='_x not
R27898:27898 Coq.Init.Logic <> :type_scope:x_'='_x not
R27139:27156 Top.Equiv <> fold_constants_com def
R27213:27220 Top.Imp <> ::x_';;'_x not
R27185:27189 Top.Imp <> ::x_'::='_x not
R27184:27184 Top.Imp <> X def
R27190:27194 Top.Imp <> APlus constr
R27206:27209 Top.Imp <> ANum constr
R27197:27200 Top.Imp <> ANum constr
R27250:27257 Top.Imp <> ::x_';;'_x not
R27222:27226 Top.Imp <> ::x_'::='_x not
R27221:27221 Top.Imp <> Y def
R27227:27232 Top.Imp <> AMinus constr
R27243:27246 Top.Imp <> ANum constr
R27235:27237 Top.Imp <> AId constr
R27239:27239 Top.Imp <> X def
R27384:27391 Top.Imp <> ::x_';;'_x not
R27258:27261 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27329:27341 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27346:27363 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27376:27383 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27262:27264 Top.Imp <> BEq constr
R27305:27309 Top.Imp <> APlus constr
R27321:27324 Top.Imp <> ANum constr
R27312:27315 Top.Imp <> ANum constr
R27267:27272 Top.Imp <> AMinus constr
R27283:27285 Top.Imp <> AId constr
R27287:27287 Top.Imp <> Y def
R27275:27277 Top.Imp <> AId constr
R27279:27279 Top.Imp <> X def
R27342:27345 Top.Imp <> ::'SKIP' not
R27365:27369 Top.Imp <> ::x_'::='_x not
R27364:27364 Top.Imp <> Y def
R27370:27373 Top.Imp <> ANum constr
R27525:27532 Top.Imp <> ::x_';;'_x not
R27392:27395 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27465:27482 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27495:27512 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27517:27524 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27396:27398 Top.Imp <> BLe constr
R27423:27428 Top.Imp <> AMinus constr
R27440:27444 Top.Imp <> APlus constr
R27456:27459 Top.Imp <> ANum constr
R27447:27450 Top.Imp <> ANum constr
R27431:27434 Top.Imp <> ANum constr
R27401:27404 Top.Imp <> ANum constr
R27484:27488 Top.Imp <> ::x_'::='_x not
R27483:27483 Top.Imp <> Y def
R27489:27492 Top.Imp <> ANum constr
R27513:27516 Top.Imp <> ::'SKIP' not
R27533:27538 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27559:27569 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27598:27606 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27539:27541 Top.Imp <> BEq constr
R27552:27555 Top.Imp <> ANum constr
R27544:27546 Top.Imp <> AId constr
R27548:27548 Top.Imp <> Y def
R27571:27575 Top.Imp <> ::x_'::='_x not
R27570:27570 Top.Imp <> X def
R27576:27580 Top.Imp <> APlus constr
R27591:27594 Top.Imp <> ANum constr
R27583:27585 Top.Imp <> AId constr
R27587:27587 Top.Imp <> X def
R27653:27660 Top.Imp <> ::x_';;'_x not
R27642:27646 Top.Imp <> ::x_'::='_x not
R27641:27641 Top.Imp <> X def
R27647:27650 Top.Imp <> ANum constr
R27690:27697 Top.Imp <> ::x_';;'_x not
R27662:27666 Top.Imp <> ::x_'::='_x not
R27661:27661 Top.Imp <> Y def
R27667:27672 Top.Imp <> AMinus constr
R27683:27686 Top.Imp <> ANum constr
R27675:27677 Top.Imp <> AId constr
R27679:27679 Top.Imp <> X def
R27796:27803 Top.Imp <> ::x_';;'_x not
R27698:27701 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27739:27751 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27756:27774 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27787:27795 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27702:27704 Top.Imp <> BEq constr
R27732:27735 Top.Imp <> ANum constr
R27707:27712 Top.Imp <> AMinus constr
R27723:27725 Top.Imp <> AId constr
R27727:27727 Top.Imp <> Y def
R27715:27717 Top.Imp <> AId constr
R27719:27719 Top.Imp <> X def
R27752:27755 Top.Imp <> ::'SKIP' not
R27776:27780 Top.Imp <> ::x_'::='_x not
R27775:27775 Top.Imp <> Y def
R27781:27784 Top.Imp <> ANum constr
R27816:27823 Top.Imp <> ::x_';;'_x not
R27805:27809 Top.Imp <> ::x_'::='_x not
R27804:27804 Top.Imp <> Y def
R27810:27813 Top.Imp <> ANum constr
R27824:27829 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27850:27860 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27889:27897 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27830:27832 Top.Imp <> BEq constr
R27843:27846 Top.Imp <> ANum constr
R27835:27837 Top.Imp <> AId constr
R27839:27839 Top.Imp <> Y def
R27862:27866 Top.Imp <> ::x_'::='_x not
R27861:27861 Top.Imp <> X def
R27867:27871 Top.Imp <> APlus constr
R27882:27885 Top.Imp <> ANum constr
R27874:27876 Top.Imp <> AId constr
R27878:27878 Top.Imp <> X def
prf 28147:28171 <> fold_constants_aexp_sound
R28177:28188 Top.Equiv <> atrans_sound def
R28190:28208 Top.Equiv <> fold_constants_aexp def
R28227:28238 Top.Equiv <> atrans_sound def
R28258:28263 Top.Equiv <> aequiv def
R28674:28692 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28674:28692 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28674:28692 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28674:28692 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
R28718:28736 Top.Equiv <> fold_constants_aexp def
prf 31647:31671 <> fold_constants_bexp_sound
R31676:31687 Top.Equiv <> btrans_sound def
R31689:31707 Top.Equiv <> fold_constants_bexp def
R31726:31737 Top.Equiv <> btrans_sound def
R31757:31762 Top.Equiv <> bequiv def
R32232:32250 Top.Equiv <> fold_constants_aexp def
R32232:32250 Top.Equiv <> fold_constants_aexp def
R32289:32307 Top.Equiv <> fold_constants_aexp def
R32289:32307 Top.Equiv <> fold_constants_aexp def
R32345:32349 Top.Imp <> aeval def
R32364:32368 Top.Imp <> aeval def
R32411:32435 Top.Equiv <> fold_constants_aexp_sound thm
R32345:32349 Top.Imp <> aeval def
R32364:32368 Top.Imp <> aeval def
R32411:32435 Top.Equiv <> fold_constants_aexp_sound thm
R32411:32435 Top.Equiv <> fold_constants_aexp_sound thm
R32465:32469 Top.Imp <> aeval def
R32484:32488 Top.Imp <> aeval def
R32531:32555 Top.Equiv <> fold_constants_aexp_sound thm
R32465:32469 Top.Imp <> aeval def
R32484:32488 Top.Imp <> aeval def
R32531:32555 Top.Equiv <> fold_constants_aexp_sound thm
R32531:32555 Top.Equiv <> fold_constants_aexp_sound thm
R32721:32727 Coq.Arith.EqNat <> beq_nat syndef
R32721:32727 Coq.Arith.EqNat <> beq_nat syndef
R32829:32847 Top.Equiv <> fold_constants_bexp def
R32829:32847 Top.Equiv <> fold_constants_bexp def
R32956:32974 Top.Equiv <> fold_constants_bexp def
R32956:32974 Top.Equiv <> fold_constants_bexp def
R33013:33031 Top.Equiv <> fold_constants_bexp def
R33013:33031 Top.Equiv <> fold_constants_bexp def
prf 33294:33317 <> fold_constants_com_sound
R33323:33334 Top.Equiv <> ctrans_sound def
R33336:33353 Top.Equiv <> fold_constants_com def
R33372:33383 Top.Equiv <> ctrans_sound def
R33439:33449 Top.Equiv <> refl_cequiv thm
R33439:33449 Top.Equiv <> refl_cequiv thm
R33472:33486 Top.Equiv <> CAss_congruence thm
R33472:33486 Top.Equiv <> CAss_congruence thm
R33509:33533 Top.Equiv <> fold_constants_aexp_sound thm
R33509:33533 Top.Equiv <> fold_constants_aexp_sound thm
R33555:33569 Top.Equiv <> CSeq_congruence prfax
R33555:33569 Top.Equiv <> CSeq_congruence prfax
R33610:33615 Top.Equiv <> bequiv def
R33620:33638 Top.Equiv <> fold_constants_bexp def
R33610:33615 Top.Equiv <> bequiv def
R33620:33638 Top.Equiv <> fold_constants_bexp def
R33659:33683 Top.Equiv <> fold_constants_bexp_sound prfax
R33659:33683 Top.Equiv <> fold_constants_bexp_sound prfax
R33702:33720 Top.Equiv <> fold_constants_bexp def
R33752:33765 Top.Equiv <> CIf_congruence prfax
R33702:33720 Top.Equiv <> fold_constants_bexp def
R33752:33765 Top.Equiv <> CIf_congruence prfax
R33752:33765 Top.Equiv <> CIf_congruence prfax
R33752:33765 Top.Equiv <> CIf_congruence prfax
R33752:33765 Top.Equiv <> CIf_congruence prfax
R33752:33765 Top.Equiv <> CIf_congruence prfax
R33752:33765 Top.Equiv <> CIf_congruence prfax
R33933:33944 Top.Equiv <> trans_cequiv thm
R33933:33944 Top.Equiv <> trans_cequiv thm
R33983:33990 Top.Equiv <> IFB_true thm
R33983:33990 Top.Equiv <> IFB_true thm
R34041:34052 Top.Equiv <> trans_cequiv thm
R34041:34052 Top.Equiv <> trans_cequiv thm
R34091:34099 Top.Equiv <> IFB_false prfax
R34091:34099 Top.Equiv <> IFB_false prfax
def 36410:36419 <> subst_aexp
R36426:36427 Top.Maps <> id ind
R36435:36438 Top.Imp <> aexp ind
R36446:36449 Top.Imp <> aexp ind
R36454:36457 Top.Imp <> aexp ind
R36470:36470 Top.Equiv <> a var
R36481:36484 Top.Imp <> ANum constr
R36503:36506 Top.Imp <> ANum constr
R36514:36516 Top.Imp <> AId constr
R36539:36544 Top.Maps <> beq_id def
R36546:36546 Top.Equiv <> i var
R36563:36565 Top.Imp <> AId constr
R36556:36556 Top.Equiv <> u var
R36574:36578 Top.Imp <> APlus constr
R36596:36600 Top.Imp <> APlus constr
R36623:36632 Top.Equiv <> subst_aexp def
R36636:36636 Top.Equiv <> u var
R36634:36634 Top.Equiv <> i var
R36603:36612 Top.Equiv <> subst_aexp def
R36616:36616 Top.Equiv <> u var
R36614:36614 Top.Equiv <> i var
R36646:36651 Top.Imp <> AMinus constr
R36668:36673 Top.Imp <> AMinus constr
R36696:36705 Top.Equiv <> subst_aexp def
R36709:36709 Top.Equiv <> u var
R36707:36707 Top.Equiv <> i var
R36676:36685 Top.Equiv <> subst_aexp def
R36689:36689 Top.Equiv <> u var
R36687:36687 Top.Equiv <> i var
R36719:36723 Top.Imp <> AMult constr
R36741:36745 Top.Imp <> AMult constr
R36768:36777 Top.Equiv <> subst_aexp def
R36781:36781 Top.Equiv <> u var
R36779:36779 Top.Equiv <> i var
R36748:36757 Top.Equiv <> subst_aexp def
R36761:36761 Top.Equiv <> u var
R36759:36759 Top.Equiv <> i var
def 36803:36815 <> subst_aexp_ex
R36898:36901 Coq.Init.Logic <> :type_scope:x_'='_x not
R36943:36943 Coq.Init.Logic <> :type_scope:x_'='_x not
R36821:36830 Top.Equiv <> subst_aexp def
R36876:36880 Top.Imp <> APlus constr
R36891:36893 Top.Imp <> AId constr
R36895:36895 Top.Imp <> X def
R36883:36885 Top.Imp <> AId constr
R36887:36887 Top.Imp <> Y def
R36835:36839 Top.Imp <> APlus constr
R36852:36855 Top.Imp <> ANum constr
R36842:36845 Top.Imp <> ANum constr
R36832:36832 Top.Imp <> X def
R36902:36906 Top.Imp <> APlus constr
R36917:36921 Top.Imp <> APlus constr
R36934:36937 Top.Imp <> ANum constr
R36924:36927 Top.Imp <> ANum constr
R36909:36911 Top.Imp <> AId constr
R36913:36913 Top.Imp <> Y def
def 37100:37119 <> subst_equiv_property
R37146:37151 Top.Equiv <> cequiv def
R37196:37198 Top.Imp <> ::x_';;'_x not
R37189:37193 Top.Imp <> ::x_'::='_x not
R37187:37188 Top.Equiv <> i1 var
R37194:37195 Top.Equiv <> a1 var
R37201:37205 Top.Imp <> ::x_'::='_x not
R37199:37200 Top.Equiv <> i2 var
R37206:37215 Top.Equiv <> subst_aexp def
R37223:37224 Top.Equiv <> a2 var
R37220:37221 Top.Equiv <> a1 var
R37217:37218 Top.Equiv <> i1 var
R37163:37165 Top.Imp <> ::x_';;'_x not
R37156:37160 Top.Imp <> ::x_'::='_x not
R37154:37155 Top.Equiv <> i1 var
R37161:37162 Top.Equiv <> a1 var
R37168:37172 Top.Imp <> ::x_'::='_x not
R37166:37167 Top.Equiv <> i2 var
R37173:37174 Top.Equiv <> a2 var
prf 38521:38533 <> subst_inequiv
R38539:38540 Coq.Init.Logic <> :type_scope:'~'_x not
R38541:38560 Top.Equiv <> subst_equiv_property def
R38579:38598 Top.Equiv <> subst_equiv_property def
R38760:38774 Top.Imp <> ::x_';;'_x not
R38733:38737 Top.Imp <> ::x_'::='_x not
R38732:38732 Top.Imp <> X def
R38738:38742 Top.Imp <> APlus constr
R38753:38756 Top.Imp <> ANum constr
R38745:38747 Top.Imp <> AId constr
R38749:38749 Top.Imp <> X def
R38776:38780 Top.Imp <> ::x_'::='_x not
R38775:38775 Top.Imp <> Y def
R38781:38783 Top.Imp <> AId constr
R38785:38785 Top.Imp <> X def
R38760:38774 Top.Imp <> ::x_';;'_x not
R38733:38737 Top.Imp <> ::x_'::='_x not
R38732:38732 Top.Imp <> X def
R38738:38742 Top.Imp <> APlus constr
R38753:38756 Top.Imp <> ANum constr
R38745:38747 Top.Imp <> AId constr
R38749:38749 Top.Imp <> X def
R38776:38780 Top.Imp <> ::x_'::='_x not
R38775:38775 Top.Imp <> Y def
R38781:38783 Top.Imp <> AId constr
R38785:38785 Top.Imp <> X def
R38841:38855 Top.Imp <> ::x_';;'_x not
R38814:38818 Top.Imp <> ::x_'::='_x not
R38813:38813 Top.Imp <> X def
R38819:38823 Top.Imp <> APlus constr
R38834:38837 Top.Imp <> ANum constr
R38826:38828 Top.Imp <> AId constr
R38830:38830 Top.Imp <> X def
R38857:38861 Top.Imp <> ::x_'::='_x not
R38856:38856 Top.Imp <> Y def
R38862:38866 Top.Imp <> APlus constr
R38877:38880 Top.Imp <> ANum constr
R38869:38871 Top.Imp <> AId constr
R38873:38873 Top.Imp <> X def
R38841:38855 Top.Imp <> ::x_';;'_x not
R38814:38818 Top.Imp <> ::x_'::='_x not
R38813:38813 Top.Imp <> X def
R38819:38823 Top.Imp <> APlus constr
R38834:38837 Top.Imp <> ANum constr
R38826:38828 Top.Imp <> AId constr
R38830:38830 Top.Imp <> X def
R38857:38861 Top.Imp <> ::x_'::='_x not
R38856:38856 Top.Imp <> Y def
R38862:38866 Top.Imp <> APlus constr
R38877:38880 Top.Imp <> ANum constr
R38869:38871 Top.Imp <> AId constr
R38873:38873 Top.Imp <> X def
R38909:38914 Top.Equiv <> cequiv def
R38909:38914 Top.Equiv <> cequiv def
R39099:39106 Top.Maps <> t_update def
R39135:39135 Top.Imp <> Y def
R39109:39116 Top.Maps <> t_update def
R39130:39130 Top.Imp <> X def
R39118:39128 Top.Imp <> empty_state def
R39099:39106 Top.Maps <> t_update def
R39135:39135 Top.Imp <> Y def
R39109:39116 Top.Maps <> t_update def
R39130:39130 Top.Imp <> X def
R39118:39128 Top.Imp <> empty_state def
R39160:39167 Top.Maps <> t_update def
R39196:39196 Top.Imp <> Y def
R39170:39177 Top.Maps <> t_update def
R39191:39191 Top.Imp <> X def
R39179:39189 Top.Imp <> empty_state def
R39160:39167 Top.Maps <> t_update def
R39196:39196 Top.Imp <> Y def
R39170:39177 Top.Maps <> t_update def
R39191:39191 Top.Imp <> X def
R39179:39189 Top.Imp <> empty_state def
R39225:39227 Top.Imp <> ::x_'/'_x_'\\'_x not
R39239:39242 Top.Imp <> ::x_'/'_x_'\\'_x not
R39228:39238 Top.Imp <> empty_state def
R39265:39267 Top.Imp <> ::x_'/'_x_'\\'_x not
R39279:39282 Top.Imp <> ::x_'/'_x_'\\'_x not
R39268:39278 Top.Imp <> empty_state def
R39336:39343 Top.Maps <> t_update def
R39357:39357 Top.Imp <> X def
R39345:39355 Top.Imp <> empty_state def
R39316:39320 Top.Imp <> E_Seq constr
R39377:39381 Top.Imp <> E_Ass constr
R39225:39227 Top.Imp <> ::x_'/'_x_'\\'_x not
R39239:39242 Top.Imp <> ::x_'/'_x_'\\'_x not
R39228:39238 Top.Imp <> empty_state def
R39265:39267 Top.Imp <> ::x_'/'_x_'\\'_x not
R39279:39282 Top.Imp <> ::x_'/'_x_'\\'_x not
R39268:39278 Top.Imp <> empty_state def
R39265:39267 Top.Imp <> ::x_'/'_x_'\\'_x not
R39279:39282 Top.Imp <> ::x_'/'_x_'\\'_x not
R39268:39278 Top.Imp <> empty_state def
R39336:39343 Top.Maps <> t_update def
R39357:39357 Top.Imp <> X def
R39345:39355 Top.Imp <> empty_state def
R39316:39320 Top.Imp <> E_Seq constr
R39377:39381 Top.Imp <> E_Ass constr
R39377:39381 Top.Imp <> E_Ass constr
R39336:39343 Top.Maps <> t_update def
R39357:39357 Top.Imp <> X def
R39345:39355 Top.Imp <> empty_state def
R39316:39320 Top.Imp <> E_Seq constr
R39377:39381 Top.Imp <> E_Ass constr
R39377:39381 Top.Imp <> E_Ass constr
R39336:39343 Top.Maps <> t_update def
R39357:39357 Top.Imp <> X def
R39345:39355 Top.Imp <> empty_state def
R39316:39320 Top.Imp <> E_Seq constr
R39377:39381 Top.Imp <> E_Ass constr
R39377:39381 Top.Imp <> E_Ass constr
R39336:39343 Top.Maps <> t_update def
R39357:39357 Top.Imp <> X def
R39345:39355 Top.Imp <> empty_state def
R39316:39320 Top.Imp <> E_Seq constr
R39501:39503 Coq.Init.Logic <> :type_scope:x_'='_x not
R39524:39542 Top.Imp <> ceval_deterministic thm
R39547:39557 Top.Imp <> empty_state def
R39501:39503 Coq.Init.Logic <> :type_scope:x_'='_x not
R39524:39542 Top.Imp <> ceval_deterministic thm
R39547:39557 Top.Imp <> empty_state def
R39599:39601 Coq.Init.Logic <> :type_scope:x_'='_x not
R39598:39598 Top.Imp <> Y def
R39606:39606 Top.Imp <> Y def
R39599:39601 Coq.Init.Logic <> :type_scope:x_'='_x not
R39598:39598 Top.Imp <> Y def
R39606:39606 Top.Imp <> Y def
ind 39946:39965 <> var_not_used_in_aexp
constr 39996:40001 <> VNUNum
constr 40050:40054 <> VNUId
constr 40112:40118 <> VNUPlus
constr 40252:40259 <> VNUMinus
constr 40394:40400 <> VNUMult
R39970:39971 Top.Maps <> id ind
R39980:39983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39976:39979 Top.Imp <> aexp ind
R40014:40033 Top.Equiv <> var_not_used_in_aexp ind
R40038:40041 Top.Imp <> ANum constr
R40043:40043 Top.Equiv <> n var
R40035:40035 Top.Equiv <> X var
R40073:40076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40077:40096 Top.Equiv <> var_not_used_in_aexp ind
R40101:40103 Top.Imp <> AId constr
R40105:40105 Top.Equiv <> Y var
R40098:40098 Top.Equiv <> X var
R40068:40071 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40067:40067 Top.Equiv <> X var
R40072:40072 Top.Equiv <> Y var
R40166:40175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40201:40210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40211:40230 Top.Equiv <> var_not_used_in_aexp ind
R40235:40239 Top.Imp <> APlus constr
R40244:40245 Top.Equiv <> a2 var
R40241:40242 Top.Equiv <> a1 var
R40232:40232 Top.Equiv <> X var
R40176:40195 Top.Equiv <> var_not_used_in_aexp ind
R40199:40200 Top.Equiv <> a2 var
R40197:40197 Top.Equiv <> X var
R40141:40160 Top.Equiv <> var_not_used_in_aexp ind
R40164:40165 Top.Equiv <> a1 var
R40162:40162 Top.Equiv <> X var
R40307:40316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40342:40351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40352:40371 Top.Equiv <> var_not_used_in_aexp ind
R40376:40381 Top.Imp <> AMinus constr
R40386:40387 Top.Equiv <> a2 var
R40383:40384 Top.Equiv <> a1 var
R40373:40373 Top.Equiv <> X var
R40317:40336 Top.Equiv <> var_not_used_in_aexp ind
R40340:40341 Top.Equiv <> a2 var
R40338:40338 Top.Equiv <> X var
R40282:40301 Top.Equiv <> var_not_used_in_aexp ind
R40305:40306 Top.Equiv <> a1 var
R40303:40303 Top.Equiv <> X var
R40448:40457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40483:40492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40493:40512 Top.Equiv <> var_not_used_in_aexp ind
R40517:40521 Top.Imp <> AMult constr
R40526:40527 Top.Equiv <> a2 var
R40523:40524 Top.Equiv <> a1 var
R40514:40514 Top.Equiv <> X var
R40458:40477 Top.Equiv <> var_not_used_in_aexp ind
R40481:40482 Top.Equiv <> a2 var
R40479:40479 Top.Equiv <> X var
R40423:40442 Top.Equiv <> var_not_used_in_aexp ind
R40446:40447 Top.Equiv <> a1 var
R40444:40444 Top.Equiv <> X var
prf 40538:40552 <> aeval_weakening
R40600:40605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40632:40634 Coq.Init.Logic <> :type_scope:x_'='_x not
R40606:40610 Top.Imp <> aeval def
R40631:40631 Top.Equiv <> a var
R40613:40620 Top.Maps <> t_update def
R40627:40628 Top.Equiv <> ni var
R40625:40625 Top.Equiv <> i var
R40622:40623 Top.Equiv <> st var
R40635:40639 Top.Imp <> aeval def
R40644:40644 Top.Equiv <> a var
R40641:40642 Top.Equiv <> st var
R40576:40595 Top.Equiv <> var_not_used_in_aexp ind
R40599:40599 Top.Equiv <> a var
R40597:40597 Top.Equiv <> i var
prf 40913:40928 <> inequiv_exercise
R40933:40934 Coq.Init.Logic <> :type_scope:'~'_x not
R40935:40940 Top.Equiv <> cequiv def
R40968:40971 Top.Imp <> ::'SKIP' not
R40943:40948 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40954:40957 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40962:40965 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40949:40953 Top.Imp <> BTrue constr
R40958:40961 Top.Imp <> ::'SKIP' not
mod 42717:42720 <> Himp
ind 42812:42814 Himp com
constr 42830:42834 Himp CSkip
constr 42846:42849 Himp CAss
constr 42875:42878 Himp CSeq
constr 42904:42906 Himp CIf
constr 42940:42945 Himp CWhile
constr 42972:42977 Himp CHavoc
R42838:42840 Top.Equiv <> com ind
R42855:42858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42863:42866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42867:42869 Top.Equiv <> com ind
R42859:42862 Top.Imp <> aexp ind
R42853:42854 Top.Maps <> id ind
R42885:42888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42892:42895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42896:42898 Top.Equiv <> com ind
R42889:42891 Top.Equiv <> com ind
R42882:42884 Top.Equiv <> com ind
R42914:42917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42921:42924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42928:42931 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42932:42934 Top.Equiv <> com ind
R42925:42927 Top.Equiv <> com ind
R42918:42920 Top.Equiv <> com ind
R42910:42913 Top.Imp <> bexp ind
R42953:42956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42960:42963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42964:42966 Top.Equiv <> com ind
R42957:42959 Top.Equiv <> com ind
R42949:42952 Top.Imp <> bexp ind
R42983:42986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42987:42989 Top.Equiv <> com ind
R42981:42982 Top.Maps <> id ind
R43050:43054 Top.Equiv Himp CSkip constr
not 43036:43036 Himp ::'SKIP'
R43084:43087 Top.Equiv Himp CAss constr
not 43066:43066 Himp ::x_'::='_x
R43135:43138 Top.Equiv Himp CSeq constr
not 43118:43118 Himp ::x_';;'_x
R43223:43228 Top.Equiv Himp CWhile constr
not 43192:43192 Himp ::'WHILE'_x_'DO'_x_'END'
R43322:43324 Top.Equiv Himp CIf constr
not 43280:43280 Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R43397:43402 Top.Equiv Himp CHavoc constr
not 43381:43381 Himp ::'HAVOC'_x
ind 43756:43760 Himp ceval
constr 43801:43806 Himp E_Skip
constr 43849:43853 Himp E_Ass
constr 43979:43983 Himp E_Seq
constr 44115:44122 Himp E_IfTrue
constr 44279:44287 Himp E_IfFalse
constr 44445:44454 Himp E_WhileEnd
constr 44573:44583 Himp E_WhileLoop
R43767:43770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43776:43779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43785:43788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43780:43784 Top.Imp <> state def
R43771:43775 Top.Imp <> state def
R43764:43766 Top.Equiv Himp com ind
R44829:44833 Top.Equiv <> ceval var
R43822:43826 Top.Imp <> state def
R43833:43835 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R43838:43841 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R43829:43832 Top.Equiv Himp ::'SKIP' not
R43836:43837 Top.Equiv <> st var
R43842:43843 Top.Equiv <> st var
R43870:43874 Top.Imp <> state def
R43883:43886 Top.Imp <> aexp ind
R43894:43896 Coq.Init.Datatypes <> nat ind
R43904:43905 Top.Maps <> id ind
R43930:43939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43940:43940 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R43949:43952 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R43955:43958 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R43942:43946 Top.Equiv Himp ::x_'::='_x not
R43941:43941 Top.Equiv <> X var
R43947:43948 Top.Equiv <> a1 var
R43953:43954 Top.Equiv <> st var
R43959:43966 Top.Maps <> t_update def
R43973:43973 Top.Equiv <> n var
R43971:43971 Top.Equiv <> X var
R43968:43969 Top.Equiv <> st var
R43926:43928 Coq.Init.Logic <> :type_scope:x_'='_x not
R43915:43919 Top.Imp <> aeval def
R43924:43925 Top.Equiv <> a1 var
R43921:43922 Top.Equiv <> st var
R43929:43929 Top.Equiv <> n var
R44003:44005 Top.Equiv Himp com ind
R44023:44027 Top.Imp <> state def
R44051:44060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44077:44086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44087:44087 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44096:44099 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44102:44105 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44090:44093 Top.Equiv Himp ::x_';;'_x not
R44088:44089 Top.Equiv <> c1 var
R44094:44095 Top.Equiv <> c2 var
R44100:44101 Top.Equiv <> st var
R44106:44109 Top.Equiv <> st'' var
R44063:44065 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44069:44072 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44061:44062 Top.Equiv <> c2 var
R44066:44068 Top.Equiv <> st' var
R44073:44076 Top.Equiv <> st'' var
R44039:44041 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44044:44047 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44037:44038 Top.Equiv <> c1 var
R44042:44043 Top.Equiv <> st var
R44048:44050 Top.Equiv <> st' var
R44143:44147 Top.Imp <> state def
R44156:44159 Top.Imp <> bexp ind
R44171:44173 Top.Equiv Himp com ind
R44201:44210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44225:44234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44235:44235 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44261:44264 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44267:44270 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44236:44239 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44242:44247 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44250:44255 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44258:44260 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44240:44241 Top.Equiv <> b1 var
R44248:44249 Top.Equiv <> c1 var
R44256:44257 Top.Equiv <> c2 var
R44265:44266 Top.Equiv <> st var
R44271:44273 Top.Equiv <> st' var
R44213:44215 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44218:44221 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44211:44212 Top.Equiv <> c1 var
R44216:44217 Top.Equiv <> st var
R44222:44224 Top.Equiv <> st' var
R44194:44196 Coq.Init.Logic <> :type_scope:x_'='_x not
R44183:44187 Top.Imp <> beval def
R44192:44193 Top.Equiv <> b1 var
R44189:44190 Top.Equiv <> st var
R44197:44200 Coq.Init.Datatypes <> true constr
R44308:44312 Top.Imp <> state def
R44321:44324 Top.Imp <> bexp ind
R44336:44338 Top.Equiv Himp com ind
R44367:44376 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44391:44400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44401:44401 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44427:44430 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44433:44436 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44402:44405 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44408:44413 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44416:44421 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44424:44426 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44406:44407 Top.Equiv <> b1 var
R44414:44415 Top.Equiv <> c1 var
R44422:44423 Top.Equiv <> c2 var
R44431:44432 Top.Equiv <> st var
R44437:44439 Top.Equiv <> st' var
R44379:44381 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44384:44387 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44377:44378 Top.Equiv <> c2 var
R44382:44383 Top.Equiv <> st var
R44388:44390 Top.Equiv <> st' var
R44359:44361 Coq.Init.Logic <> :type_scope:x_'='_x not
R44348:44352 Top.Imp <> beval def
R44357:44358 Top.Equiv <> b1 var
R44354:44355 Top.Equiv <> st var
R44362:44366 Coq.Init.Datatypes <> false constr
R44471:44474 Top.Imp <> bexp ind
R44483:44487 Top.Imp <> state def
R44496:44498 Top.Equiv Himp com ind
R44527:44536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44537:44537 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44556:44559 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44562:44565 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44538:44543 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44546:44549 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44552:44555 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44544:44545 Top.Equiv <> b1 var
R44550:44551 Top.Equiv <> c1 var
R44560:44561 Top.Equiv <> st var
R44566:44567 Top.Equiv <> st var
R44519:44521 Coq.Init.Logic <> :type_scope:x_'='_x not
R44508:44512 Top.Imp <> beval def
R44517:44518 Top.Equiv <> b1 var
R44514:44515 Top.Equiv <> st var
R44522:44526 Coq.Init.Datatypes <> false constr
R44609:44613 Top.Imp <> state def
R44622:44625 Top.Imp <> bexp ind
R44634:44636 Top.Equiv Himp com ind
R44664:44673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44688:44697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44732:44741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44742:44742 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44761:44764 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44767:44770 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44743:44748 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44751:44754 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44757:44760 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44749:44750 Top.Equiv <> b1 var
R44755:44756 Top.Equiv <> c1 var
R44765:44766 Top.Equiv <> st var
R44771:44774 Top.Equiv <> st'' var
R44698:44698 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44717:44720 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44724:44727 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44699:44704 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44707:44710 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44713:44716 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44705:44706 Top.Equiv <> b1 var
R44711:44712 Top.Equiv <> c1 var
R44721:44723 Top.Equiv <> st' var
R44728:44731 Top.Equiv <> st'' var
R44676:44678 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44681:44684 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44674:44675 Top.Equiv <> c1 var
R44679:44680 Top.Equiv <> st var
R44685:44687 Top.Equiv <> st' var
R44657:44659 Coq.Init.Logic <> :type_scope:x_'='_x not
R44646:44650 Top.Imp <> beval def
R44655:44656 Top.Equiv <> b1 var
R44652:44653 Top.Equiv <> st var
R44660:44663 Coq.Init.Datatypes <> true constr
R44829:44833 Top.Equiv Himp ceval ind
not 44804:44804 Himp ::x_'/'_x_'\\'_x
def 44940:44953 Himp havoc_example1
R44957:44957 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44965:44968 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44980:44983 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R44958:44963 Top.Equiv Himp ::'HAVOC'_x not
R44964:44964 Top.Imp <> X def
R44969:44979 Top.Imp <> empty_state def
R44984:44991 Top.Maps <> t_update def
R45005:45005 Top.Imp <> X def
R44993:45003 Top.Imp <> empty_state def
def 45055:45068 Himp havoc_example2
R45074:45074 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45089:45092 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45104:45107 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45079:45081 Top.Equiv Himp ::x_';;'_x not
R45075:45078 Top.Equiv Himp ::'SKIP' not
R45082:45087 Top.Equiv Himp ::'HAVOC'_x not
R45088:45088 Top.Imp <> Z def
R45093:45103 Top.Imp <> empty_state def
R45108:45115 Top.Maps <> t_update def
R45129:45129 Top.Imp <> Z def
R45117:45127 Top.Imp <> empty_state def
def 45262:45267 Himp cequiv
R45278:45280 Top.Equiv Himp com ind
R45309:45313 Top.Imp <> state def
R45332:45336 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45320:45322 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45325:45328 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45318:45319 Top.Equiv <> c1 var
R45323:45324 Top.Equiv <> st var
R45329:45331 Top.Equiv <> st' var
R45339:45341 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45344:45347 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45337:45338 Top.Equiv <> c2 var
R45342:45343 Top.Equiv <> st var
R45348:45350 Top.Equiv <> st' var
def 45589:45591 Himp pXY
R45605:45607 Top.Equiv Himp ::x_';;'_x not
R45598:45603 Top.Equiv Himp ::'HAVOC'_x not
R45604:45604 Top.Imp <> X def
R45608:45613 Top.Equiv Himp ::'HAVOC'_x not
R45614:45614 Top.Imp <> Y def
def 45629:45631 Himp pYX
R45645:45647 Top.Equiv Himp ::x_';;'_x not
R45638:45643 Top.Equiv Himp ::'HAVOC'_x not
R45644:45644 Top.Imp <> Y def
R45648:45653 Top.Equiv Himp ::'HAVOC'_x not
R45654:45654 Top.Imp <> X def
prf 45779:45792 Himp pXY_cequiv_pYX
R45812:45815 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R45798:45803 Top.Equiv Himp cequiv def
R45809:45811 Top.Equiv Himp pYX def
R45805:45807 Top.Equiv Himp pXY def
R45816:45816 Coq.Init.Logic <> :type_scope:'~'_x not
R45817:45822 Top.Equiv Himp cequiv def
R45828:45830 Top.Equiv Himp pYX def
R45824:45826 Top.Equiv Himp pXY def
def 45985:45990 Himp ptwice
R46004:46006 Top.Equiv Himp ::x_';;'_x not
R45997:46002 Top.Equiv Himp ::'HAVOC'_x not
R46003:46003 Top.Imp <> X def
R46007:46012 Top.Equiv Himp ::'HAVOC'_x not
R46013:46013 Top.Imp <> Y def
def 46028:46032 Himp pcopy
R46046:46048 Top.Equiv Himp ::x_';;'_x not
R46039:46044 Top.Equiv Himp ::'HAVOC'_x not
R46045:46045 Top.Imp <> X def
R46050:46054 Top.Equiv Himp ::x_'::='_x not
R46049:46049 Top.Imp <> Y def
R46055:46057 Top.Imp <> AId constr
R46059:46059 Top.Imp <> X def
prf 46240:46258 Himp ptwice_cequiv_pcopy
R46283:46286 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46264:46269 Top.Equiv Himp cequiv def
R46278:46282 Top.Equiv Himp pcopy def
R46271:46276 Top.Equiv Himp ptwice def
R46287:46287 Coq.Init.Logic <> :type_scope:'~'_x not
R46288:46293 Top.Equiv Himp cequiv def
R46302:46306 Top.Equiv Himp pcopy def
R46295:46300 Top.Equiv Himp ptwice def
def 46913:46914 Himp p1
R46918:46920 Top.Equiv Himp com ind
R46927:46933 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46961:46969 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47012:47017 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46934:46937 Top.Imp <> BNot constr
R46940:46942 Top.Imp <> BEq constr
R46953:46956 Top.Imp <> ANum constr
R46945:46947 Top.Imp <> AId constr
R46949:46949 Top.Imp <> X def
R46977:46983 Top.Equiv Himp ::x_';;'_x not
R46970:46975 Top.Equiv Himp ::'HAVOC'_x not
R46976:46976 Top.Imp <> Y def
R46985:46989 Top.Equiv Himp ::x_'::='_x not
R46984:46984 Top.Imp <> X def
R46990:46994 Top.Imp <> APlus constr
R47005:47008 Top.Imp <> ANum constr
R46997:46999 Top.Imp <> AId constr
R47001:47001 Top.Imp <> X def
def 47032:47033 Himp p2
R47037:47039 Top.Equiv Himp com ind
R47046:47052 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47080:47088 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47093:47098 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47053:47056 Top.Imp <> BNot constr
R47059:47061 Top.Imp <> BEq constr
R47072:47075 Top.Imp <> ANum constr
R47064:47066 Top.Imp <> AId constr
R47068:47068 Top.Imp <> X def
R47089:47092 Top.Equiv Himp ::'SKIP' not
prf 47298:47311 Himp p1_may_diverge
R47339:47344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47345:47346 Coq.Init.Logic <> :type_scope:'~'_x not
R47349:47351 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47354:47357 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47347:47348 Top.Equiv Himp p1 def
R47352:47353 Top.Equiv <> st var
R47358:47360 Top.Equiv <> st' var
R47334:47337 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47330:47331 Top.Equiv <> st var
R47333:47333 Top.Imp <> X def
prf 47406:47419 Himp p2_may_diverge
R47447:47452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47453:47454 Coq.Init.Logic <> :type_scope:'~'_x not
R47457:47459 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47462:47465 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47455:47456 Top.Equiv Himp p2 def
R47460:47461 Top.Equiv <> st var
R47466:47468 Top.Equiv <> st' var
R47442:47445 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47438:47439 Top.Equiv <> st var
R47441:47441 Top.Imp <> X def
prf 47644:47654 Himp p1_p2_equiv
R47658:47663 Top.Equiv Himp cequiv def
R47668:47669 Top.Equiv Himp p2 def
R47665:47666 Top.Equiv Himp p1 def
def 47922:47923 Himp p3
R47927:47929 Top.Equiv Himp com ind
R47948:47952 Top.Equiv Himp ::x_';;'_x not
R47937:47941 Top.Equiv Himp ::x_'::='_x not
R47936:47936 Top.Imp <> Z def
R47942:47945 Top.Imp <> ANum constr
R47953:47959 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47987:47995 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48017:48022 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47960:47963 Top.Imp <> BNot constr
R47966:47968 Top.Imp <> BEq constr
R47979:47982 Top.Imp <> ANum constr
R47971:47973 Top.Imp <> AId constr
R47975:47975 Top.Imp <> X def
R48003:48009 Top.Equiv Himp ::x_';;'_x not
R47996:48001 Top.Equiv Himp ::'HAVOC'_x not
R48002:48002 Top.Imp <> X def
R48010:48015 Top.Equiv Himp ::'HAVOC'_x not
R48016:48016 Top.Imp <> Z def
def 48037:48038 Himp p4
R48042:48044 Top.Equiv Himp com ind
R48065:48069 Top.Equiv Himp ::x_';;'_x not
R48052:48057 Top.Equiv Himp ::x_'::='_x not
R48064:48064 Top.Equiv Himp ::x_'::='_x not
R48051:48051 Top.Imp <> X def
R48058:48061 Top.Imp <> ANum constr
R48071:48076 Top.Equiv Himp ::x_'::='_x not
R48083:48083 Top.Equiv Himp ::x_'::='_x not
R48070:48070 Top.Imp <> Z def
R48077:48080 Top.Imp <> ANum constr
prf 48096:48108 Himp p3_p4_inequiv
R48112:48113 Coq.Init.Logic <> :type_scope:'~'_x not
R48114:48119 Top.Equiv Himp cequiv def
R48124:48125 Top.Equiv Himp p4 def
R48121:48122 Top.Equiv Himp p3 def
def 48733:48734 Himp p5
R48738:48740 Top.Equiv Himp com ind
R48747:48753 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48781:48789 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48797:48802 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48754:48757 Top.Imp <> BNot constr
R48760:48762 Top.Imp <> BEq constr
R48773:48776 Top.Imp <> ANum constr
R48765:48767 Top.Imp <> AId constr
R48769:48769 Top.Imp <> X def
R48790:48795 Top.Equiv Himp ::'HAVOC'_x not
R48796:48796 Top.Imp <> X def
def 48817:48818 Himp p6
R48822:48824 Top.Equiv Himp com ind
R48832:48836 Top.Equiv Himp ::x_'::='_x not
R48831:48831 Top.Imp <> X def
R48837:48840 Top.Imp <> ANum constr
prf 48855:48865 Himp p5_p6_equiv
R48869:48874 Top.Equiv Himp cequiv def
R48879:48880 Top.Equiv Himp p6 def
R48876:48877 Top.Equiv Himp p5 def
R48934:48937 Top.Equiv Himp <> mod
prf 49574:49604 <> swap_noninterfering_assignments
R49637:49642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49669:49674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49701:49706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49707:49712 Top.Equiv <> cequiv def
R49756:49758 Top.Imp <> ::x_';;'_x not
R49749:49753 Top.Imp <> ::x_'::='_x not
R49747:49748 Top.Equiv <> l2 var
R49754:49755 Top.Equiv <> a2 var
R49761:49765 Top.Imp <> ::x_'::='_x not
R49759:49760 Top.Equiv <> l1 var
R49766:49767 Top.Equiv <> a1 var
R49728:49730 Top.Imp <> ::x_';;'_x not
R49721:49725 Top.Imp <> ::x_'::='_x not
R49719:49720 Top.Equiv <> l1 var
R49726:49727 Top.Equiv <> a1 var
R49733:49737 Top.Imp <> ::x_'::='_x not
R49731:49732 Top.Equiv <> l2 var
R49738:49739 Top.Equiv <> a2 var
R49675:49694 Top.Equiv <> var_not_used_in_aexp ind
R49699:49700 Top.Equiv <> a1 var
R49696:49697 Top.Equiv <> l2 var
R49643:49662 Top.Equiv <> var_not_used_in_aexp ind
R49667:49668 Top.Equiv <> a2 var
R49664:49665 Top.Equiv <> l1 var
R49631:49634 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R49629:49630 Top.Equiv <> l1 var
R49635:49636 Top.Equiv <> l2 var
def 50205:50211 <> capprox
R50222:50224 Top.Imp <> com ind
R50254:50258 Top.Imp <> state def
R50278:50281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50284:50286 Top.Imp <> ::x_'/'_x_'\\'_x not
R50289:50292 Top.Imp <> ::x_'/'_x_'\\'_x not
R50282:50283 Top.Equiv <> c2 var
R50287:50288 Top.Equiv <> st var
R50293:50295 Top.Equiv <> st' var
R50266:50268 Top.Imp <> ::x_'/'_x_'\\'_x not
R50271:50274 Top.Imp <> ::x_'/'_x_'\\'_x not
R50264:50265 Top.Equiv <> c1 var
R50269:50270 Top.Equiv <> st var
R50275:50277 Top.Equiv <> st' var
def 50630:50631 <> c3
R50635:50637 Top.Imp <> com ind
def 50715:50716 <> c4
R50720:50722 Top.Imp <> com ind
prf 50798:50812 <> c3_c4_different
R50831:50834 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50816:50817 Coq.Init.Logic <> :type_scope:'~'_x not
R50818:50824 Top.Equiv <> capprox def
R50829:50830 Top.Equiv <> c4 prfax
R50826:50827 Top.Equiv <> c3 prfax
R50835:50836 Coq.Init.Logic <> :type_scope:'~'_x not
R50837:50843 Top.Equiv <> capprox def
R50848:50849 Top.Equiv <> c3 prfax
R50845:50846 Top.Equiv <> c4 prfax
def 51010:51013 <> cmin
R51017:51019 Top.Imp <> com ind
prf 51097:51108 <> cmin_minimal
R51122:51128 Top.Equiv <> capprox def
R51135:51135 Top.Equiv <> c var
R51130:51133 Top.Equiv <> cmin prfax
def 51335:51339 <> zprop
R51346:51348 Top.Imp <> com ind
prf 51434:51449 <> zprop_preserving
R51475:51478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51491:51494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51495:51499 Top.Equiv <> zprop prfax
R51501:51502 Top.Equiv <> c' var
R51479:51485 Top.Equiv <> capprox def
R51489:51490 Top.Equiv <> c' var
R51487:51487 Top.Equiv <> c var
R51468:51472 Top.Equiv <> zprop prfax
R51474:51474 Top.Equiv <> c var
