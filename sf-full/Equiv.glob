DIGEST 56cc7ba2cf4c5234639269d896282db2
FTop.Equiv
R66:78 Coq.Bool.Bool <> <> lib
R96:110 Coq.Arith.Arith <> <> lib
R128:142 Coq.Arith.EqNat <> <> lib
R160:174 Coq.omega.Omega <> <> lib
R192:205 Coq.Lists.List <> <> lib
R223:256 Coq.Logic.FunctionalExtensionality <> <> lib
R296:299 Top.Maps <> <> lib
R317:319 Top.Imp <> <> lib
def 2608:2613 <> aequiv
R2624:2627 Top.Imp <> aexp ind
R2653:2657 Top.Imp <> state def
R2676:2678 Coq.Init.Logic <> :type_scope:x_'='_x not
R2665:2669 Top.Imp <> aeval def
R2674:2675 Top.Equiv <> a1 var
R2671:2672 Top.Equiv <> st var
R2679:2683 Top.Imp <> aeval def
R2688:2689 Top.Equiv <> a2 var
R2685:2686 Top.Equiv <> st var
def 2704:2709 <> bequiv
R2720:2723 Top.Imp <> bexp ind
R2749:2753 Top.Imp <> state def
R2772:2774 Coq.Init.Logic <> :type_scope:x_'='_x not
R2761:2765 Top.Imp <> beval def
R2770:2771 Top.Equiv <> b1 var
R2767:2768 Top.Equiv <> st var
R2775:2779 Top.Imp <> beval def
R2784:2785 Top.Equiv <> b2 var
R2781:2782 Top.Equiv <> st var
prf 2894:2907 <> aequiv_example
R2912:2917 Top.Equiv <> aequiv def
R2945:2948 Top.Imp <> ANum constr
R2920:2925 Top.Imp <> AMinus constr
R2936:2938 Top.Imp <> AId constr
R2940:2940 Top.Imp <> X def
R2928:2930 Top.Imp <> AId constr
R2932:2932 Top.Imp <> X def
prf 3002:3015 <> bequiv_example
R3020:3025 Top.Equiv <> bequiv def
R3067:3071 Top.Imp <> BTrue constr
R3028:3030 Top.Imp <> BEq constr
R3058:3061 Top.Imp <> ANum constr
R3033:3038 Top.Imp <> AMinus constr
R3049:3051 Top.Imp <> AId constr
R3053:3053 Top.Imp <> X def
R3041:3043 Top.Imp <> AId constr
R3045:3045 Top.Imp <> X def
R3101:3105 Top.Imp <> beval def
R3118:3131 Top.Equiv <> aequiv_example thm
R3118:3131 Top.Equiv <> aequiv_example thm
R3118:3131 Top.Equiv <> aequiv_example thm
def 3829:3834 <> cequiv
R3845:3847 Top.Imp <> com ind
R3879:3883 Top.Imp <> state def
R3891:3891 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3906:3912 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3927:3927 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3894:3896 Top.Imp <> ::x_'/'_x_'\\'_x not
R3899:3902 Top.Imp <> ::x_'/'_x_'\\'_x not
R3892:3893 Top.Equiv <> c1 var
R3897:3898 Top.Equiv <> st var
R3903:3905 Top.Equiv <> st' var
R3915:3917 Top.Imp <> ::x_'/'_x_'\\'_x not
R3920:3923 Top.Imp <> ::x_'/'_x_'\\'_x not
R3913:3914 Top.Equiv <> c2 var
R3918:3919 Top.Equiv <> st var
R3924:3926 Top.Equiv <> st' var
prf 4168:4176 <> skip_left
R4191:4196 Top.Equiv <> cequiv def
R4219:4219 Top.Equiv <> c var
R4208:4210 Top.Imp <> ::x_';;'_x not
R4204:4207 Top.Imp <> ::'SKIP' not
R4211:4211 Top.Equiv <> c var
R4392:4396 Top.Imp <> E_Seq constr
R4392:4396 Top.Imp <> E_Seq constr
R4417:4422 Top.Imp <> E_Skip constr
R4417:4422 Top.Imp <> E_Skip constr
prf 4587:4596 <> skip_right
R4611:4616 Top.Equiv <> cequiv def
R4638:4638 Top.Equiv <> c var
R4624:4627 Top.Imp <> ::x_';;'_x not
R4623:4623 Top.Equiv <> c var
R4628:4631 Top.Imp <> ::'SKIP' not
prf 4784:4798 <> IFB_true_simple
R4817:4822 Top.Equiv <> cequiv def
R4863:4864 Top.Equiv <> c1 var
R4829:4832 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4838:4843 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4846:4851 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4854:4856 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4833:4837 Top.Imp <> BTrue constr
R4844:4845 Top.Equiv <> c1 var
R4852:4853 Top.Equiv <> c2 var
R4995:5002 Top.Imp <> E_IfTrue constr
R4995:5002 Top.Imp <> E_IfTrue constr
prf 6917:6924 <> IFB_true
R6962:6971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6972:6977 Top.Equiv <> cequiv def
R7020:7021 Top.Equiv <> c1 var
R6987:6990 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6992:6997 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7000:7005 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7008:7010 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6991:6991 Top.Equiv <> b var
R6998:6999 Top.Equiv <> c1 var
R7006:7007 Top.Equiv <> c2 var
R6948:6953 Top.Equiv <> bequiv def
R6957:6961 Top.Imp <> BTrue constr
R6955:6955 Top.Equiv <> b var
R7220:7225 Top.Equiv <> bequiv def
R7314:7321 Top.Imp <> E_IfTrue constr
R7314:7321 Top.Imp <> E_IfTrue constr
R7351:7356 Top.Equiv <> bequiv def
prf 7478:7486 <> IFB_false
R7522:7528 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7529:7534 Top.Equiv <> cequiv def
R7571:7572 Top.Equiv <> c2 var
R7541:7544 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7546:7551 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7554:7559 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7562:7564 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7545:7545 Top.Equiv <> b var
R7552:7553 Top.Equiv <> c1 var
R7560:7561 Top.Equiv <> c2 var
R7507:7512 Top.Equiv <> bequiv def
R7516:7521 Top.Imp <> BFalse constr
R7514:7514 Top.Equiv <> b var
prf 7767:7782 <> swap_if_branches
R7803:7808 Top.Equiv <> cequiv def
R7846:7849 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7856:7861 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7864:7869 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7872:7874 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7850:7853 Top.Imp <> BNot constr
R7855:7855 Top.Equiv <> b var
R7862:7863 Top.Equiv <> e2 var
R7870:7871 Top.Equiv <> e1 var
R7815:7818 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7820:7825 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7828:7833 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7836:7838 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7819:7819 Top.Equiv <> b var
R7826:7827 Top.Equiv <> e1 var
R7834:7835 Top.Equiv <> e2 var
prf 8256:8266 <> WHILE_false
R8299:8304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8305:8310 Top.Equiv <> cequiv def
R8339:8342 Top.Imp <> ::'SKIP' not
R8317:8322 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R8324:8327 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R8329:8332 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R8323:8323 Top.Equiv <> b var
R8328:8328 Top.Equiv <> c var
R8284:8289 Top.Equiv <> bequiv def
R8293:8298 Top.Imp <> BFalse constr
R8291:8291 Top.Equiv <> b var
R8458:8463 Top.Imp <> E_Skip constr
R8458:8463 Top.Imp <> E_Skip constr
R8575:8584 Top.Imp <> E_WhileEnd constr
R8575:8584 Top.Imp <> E_WhileEnd constr
prf 9915:9932 <> WHILE_true_nonterm
R9971:9976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9977:9979 Coq.Init.Logic <> :type_scope:'~'_x not
R10010:10011 Coq.Init.Logic <> :type_scope:'~'_x not
R9980:9980 Top.Imp <> ::x_'/'_x_'\\'_x not
R9997:10000 Top.Imp <> ::x_'/'_x_'\\'_x not
R10003:10006 Top.Imp <> ::x_'/'_x_'\\'_x not
R9981:9986 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9988:9991 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9993:9996 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R9987:9987 Top.Equiv <> b var
R9992:9992 Top.Equiv <> c var
R10001:10002 Top.Equiv <> st var
R10007:10009 Top.Equiv <> st' var
R9957:9962 Top.Equiv <> bequiv def
R9966:9970 Top.Imp <> BTrue constr
R9964:9964 Top.Equiv <> b var
R10093:10098 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10100:10103 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10105:10108 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10093:10098 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10100:10103 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10105:10108 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R10400:10405 Top.Equiv <> bequiv def
prf 10935:10944 <> WHILE_true
R10975:10981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10982:10987 Top.Equiv <> cequiv def
R11017:11022 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11028:11031 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11036:11039 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11023:11027 Top.Imp <> BTrue constr
R11032:11035 Top.Imp <> ::'SKIP' not
R10994:10999 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11001:11004 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11006:11009 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11000:11000 Top.Equiv <> b var
R11005:11005 Top.Equiv <> c var
R10961:10966 Top.Equiv <> bequiv def
R10970:10974 Top.Imp <> BTrue constr
R10968:10968 Top.Equiv <> b var
prf 11312:11325 <> loop_unrolling
R11342:11347 Top.Equiv <> cequiv def
R11377:11380 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11382:11388 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11410:11416 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11421:11423 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11381:11381 Top.Equiv <> b var
R11390:11393 Top.Imp <> ::x_';;'_x not
R11389:11389 Top.Equiv <> c var
R11394:11399 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11401:11404 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11406:11409 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11400:11400 Top.Equiv <> b var
R11405:11405 Top.Equiv <> c var
R11417:11420 Top.Imp <> ::'SKIP' not
R11354:11359 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11361:11364 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11366:11369 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R11360:11360 Top.Equiv <> b var
R11365:11365 Top.Equiv <> c var
R11580:11588 Top.Imp <> E_IfFalse constr
R11580:11588 Top.Imp <> E_IfFalse constr
R11609:11614 Top.Imp <> E_Skip constr
R11609:11614 Top.Imp <> E_Skip constr
R11651:11658 Top.Imp <> E_IfTrue constr
R11651:11658 Top.Imp <> E_IfTrue constr
R11685:11689 Top.Imp <> E_Seq constr
R11685:11689 Top.Imp <> E_Seq constr
R11835:11845 Top.Imp <> E_WhileLoop constr
R11835:11845 Top.Imp <> E_WhileLoop constr
R11971:11980 Top.Imp <> E_WhileEnd constr
R11971:11980 Top.Imp <> E_WhileEnd constr
prf 12063:12071 <> seq_assoc
R12094:12099 Top.Equiv <> cequiv def
R12119:12121 Top.Imp <> ::x_';;'_x not
R12128:12128 Top.Imp <> ::x_';;'_x not
R12117:12118 Top.Equiv <> c1 var
R12124:12125 Top.Imp <> ::x_';;'_x not
R12122:12123 Top.Equiv <> c2 var
R12126:12127 Top.Equiv <> c3 var
R12102:12102 Top.Imp <> ::x_';;'_x not
R12109:12111 Top.Imp <> ::x_';;'_x not
R12105:12106 Top.Imp <> ::x_';;'_x not
R12103:12104 Top.Equiv <> c1 var
R12107:12108 Top.Equiv <> c2 var
R12112:12113 Top.Equiv <> c3 var
prf 12327:12345 <> identity_assignment
R12359:12360 Top.Maps <> id ind
R12366:12371 Top.Equiv <> cequiv def
R12395:12398 Top.Imp <> ::'SKIP' not
R12379:12383 Top.Imp <> ::x_'::='_x not
R12378:12378 Top.Equiv <> X var
R12384:12386 Top.Imp <> AId constr
R12388:12388 Top.Equiv <> X var
R12501:12508 Top.Maps <> t_update def
R12501:12508 Top.Maps <> t_update def
R12569:12593 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12569:12593 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12620:12632 Top.Maps <> t_update_same prfax
R12620:12632 Top.Maps <> t_update_same prfax
R12620:12632 Top.Maps <> t_update_same prfax
R12689:12696 Top.Maps <> t_update def
R12705:12709 Top.Imp <> aeval def
R12716:12718 Top.Imp <> AId constr
R12689:12696 Top.Maps <> t_update def
R12705:12709 Top.Imp <> aeval def
R12716:12718 Top.Imp <> AId constr
R12761:12765 Top.Imp <> E_Ass constr
R12761:12765 Top.Imp <> E_Ass constr
R12796:12820 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12796:12820 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12847:12859 Top.Maps <> t_update_same prfax
R12847:12859 Top.Maps <> t_update_same prfax
R12847:12859 Top.Maps <> t_update_same prfax
prf 12949:12961 <> assign_aequiv
R12995:13000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13001:13006 Top.Equiv <> cequiv def
R13015:13019 Top.Imp <> ::x_'::='_x not
R13014:13014 Top.Equiv <> X var
R13020:13020 Top.Equiv <> e var
R13008:13011 Top.Imp <> ::'SKIP' not
R12979:12984 Top.Equiv <> aequiv def
R12994:12994 Top.Equiv <> e var
R12987:12989 Top.Imp <> AId constr
R12991:12991 Top.Equiv <> X var
def 13648:13653 <> prog_a
R13657:13659 Top.Imp <> com ind
R13666:13671 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13699:13706 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13735:13740 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R13672:13675 Top.Imp <> BNot constr
R13678:13680 Top.Imp <> BLe constr
R13691:13694 Top.Imp <> ANum constr
R13683:13685 Top.Imp <> AId constr
R13687:13687 Top.Imp <> X def
R13708:13712 Top.Imp <> ::x_'::='_x not
R13707:13707 Top.Imp <> X def
R13713:13717 Top.Imp <> APlus constr
R13728:13731 Top.Imp <> ANum constr
R13720:13722 Top.Imp <> AId constr
R13724:13724 Top.Imp <> X def
def 13755:13760 <> prog_b
R13764:13766 Top.Imp <> com ind
R13883:13887 Top.Imp <> ::x_';;'_x not
R13773:13776 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13797:13806 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13854:13865 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13878:13882 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13777:13779 Top.Imp <> BEq constr
R13790:13793 Top.Imp <> ANum constr
R13782:13784 Top.Imp <> AId constr
R13786:13786 Top.Imp <> X def
R13835:13841 Top.Imp <> ::x_';;'_x not
R13808:13812 Top.Imp <> ::x_'::='_x not
R13807:13807 Top.Imp <> X def
R13813:13817 Top.Imp <> APlus constr
R13828:13831 Top.Imp <> ANum constr
R13820:13822 Top.Imp <> AId constr
R13824:13824 Top.Imp <> X def
R13843:13847 Top.Imp <> ::x_'::='_x not
R13842:13842 Top.Imp <> Y def
R13848:13851 Top.Imp <> ANum constr
R13867:13871 Top.Imp <> ::x_'::='_x not
R13866:13866 Top.Imp <> Y def
R13872:13875 Top.Imp <> ANum constr
R13916:13920 Top.Imp <> ::x_';;'_x not
R13889:13893 Top.Imp <> ::x_'::='_x not
R13888:13888 Top.Imp <> X def
R13894:13899 Top.Imp <> AMinus constr
R13910:13912 Top.Imp <> AId constr
R13914:13914 Top.Imp <> Y def
R13902:13904 Top.Imp <> AId constr
R13906:13906 Top.Imp <> X def
R13922:13926 Top.Imp <> ::x_'::='_x not
R13921:13921 Top.Imp <> Y def
R13927:13930 Top.Imp <> ANum constr
def 13947:13952 <> prog_c
R13956:13958 Top.Imp <> com ind
R13965:13968 Top.Imp <> ::'SKIP' not
def 13983:13988 <> prog_d
R13992:13994 Top.Imp <> com ind
R14001:14006 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14034:14041 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14086:14091 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14007:14010 Top.Imp <> BNot constr
R14013:14015 Top.Imp <> BEq constr
R14026:14029 Top.Imp <> ANum constr
R14018:14020 Top.Imp <> AId constr
R14022:14022 Top.Imp <> X def
R14043:14047 Top.Imp <> ::x_'::='_x not
R14042:14042 Top.Imp <> X def
R14048:14052 Top.Imp <> APlus constr
R14079:14082 Top.Imp <> ANum constr
R14055:14059 Top.Imp <> AMult constr
R14070:14072 Top.Imp <> AId constr
R14074:14074 Top.Imp <> Y def
R14062:14064 Top.Imp <> AId constr
R14066:14066 Top.Imp <> X def
def 14106:14111 <> prog_e
R14115:14117 Top.Imp <> com ind
R14125:14129 Top.Imp <> ::x_'::='_x not
R14124:14124 Top.Imp <> Y def
R14130:14133 Top.Imp <> ANum constr
def 14150:14155 <> prog_f
R14159:14161 Top.Imp <> com ind
R14196:14200 Top.Imp <> ::x_';;'_x not
R14169:14173 Top.Imp <> ::x_'::='_x not
R14168:14168 Top.Imp <> Y def
R14174:14178 Top.Imp <> APlus constr
R14189:14192 Top.Imp <> ANum constr
R14181:14183 Top.Imp <> AId constr
R14185:14185 Top.Imp <> X def
R14201:14206 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14233:14240 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14269:14274 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14207:14210 Top.Imp <> BNot constr
R14213:14215 Top.Imp <> BEq constr
R14226:14228 Top.Imp <> AId constr
R14230:14230 Top.Imp <> Y def
R14218:14220 Top.Imp <> AId constr
R14222:14222 Top.Imp <> X def
R14242:14246 Top.Imp <> ::x_'::='_x not
R14241:14241 Top.Imp <> Y def
R14247:14251 Top.Imp <> APlus constr
R14262:14265 Top.Imp <> ANum constr
R14254:14256 Top.Imp <> AId constr
R14258:14258 Top.Imp <> X def
def 14289:14294 <> prog_g
R14298:14300 Top.Imp <> com ind
R14307:14312 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14318:14325 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14330:14335 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14313:14317 Top.Imp <> BTrue constr
R14326:14329 Top.Imp <> ::'SKIP' not
def 14350:14355 <> prog_h
R14359:14361 Top.Imp <> com ind
R14368:14373 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14400:14407 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14436:14441 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14374:14377 Top.Imp <> BNot constr
R14380:14382 Top.Imp <> BEq constr
R14393:14395 Top.Imp <> AId constr
R14397:14397 Top.Imp <> X def
R14385:14387 Top.Imp <> AId constr
R14389:14389 Top.Imp <> X def
R14409:14413 Top.Imp <> ::x_'::='_x not
R14408:14408 Top.Imp <> X def
R14414:14418 Top.Imp <> APlus constr
R14429:14432 Top.Imp <> ANum constr
R14421:14423 Top.Imp <> AId constr
R14425:14425 Top.Imp <> X def
def 14456:14461 <> prog_i
R14465:14467 Top.Imp <> com ind
R14474:14479 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14506:14513 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14542:14547 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R14480:14483 Top.Imp <> BNot constr
R14486:14488 Top.Imp <> BEq constr
R14499:14501 Top.Imp <> AId constr
R14503:14503 Top.Imp <> Y def
R14491:14493 Top.Imp <> AId constr
R14495:14495 Top.Imp <> X def
R14515:14519 Top.Imp <> ::x_'::='_x not
R14514:14514 Top.Imp <> X def
R14520:14524 Top.Imp <> APlus constr
R14535:14538 Top.Imp <> ANum constr
R14527:14529 Top.Imp <> AId constr
R14531:14531 Top.Imp <> Y def
def 14562:14574 <> equiv_classes
R14578:14581 Coq.Init.Datatypes <> list ind
R14584:14587 Coq.Init.Datatypes <> list ind
R14589:14591 Top.Imp <> com ind
prf 15216:15226 <> refl_aequiv
R15242:15245 Top.Imp <> aexp ind
R15249:15254 Top.Equiv <> aequiv def
R15258:15258 Top.Equiv <> a var
R15256:15256 Top.Equiv <> a var
prf 15309:15318 <> sym_aequiv
R15338:15341 Top.Imp <> aexp ind
R15359:15362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15363:15368 Top.Equiv <> aequiv def
R15373:15374 Top.Equiv <> a1 var
R15370:15371 Top.Equiv <> a2 var
R15347:15352 Top.Equiv <> aequiv def
R15357:15358 Top.Equiv <> a2 var
R15354:15355 Top.Equiv <> a1 var
prf 15445:15456 <> trans_aequiv
R15479:15482 Top.Imp <> aexp ind
R15500:15503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15516:15519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15520:15525 Top.Equiv <> aequiv def
R15530:15531 Top.Equiv <> a3 var
R15527:15528 Top.Equiv <> a1 var
R15504:15509 Top.Equiv <> aequiv def
R15514:15515 Top.Equiv <> a3 var
R15511:15512 Top.Equiv <> a2 var
R15488:15493 Top.Equiv <> aequiv def
R15498:15499 Top.Equiv <> a2 var
R15495:15496 Top.Equiv <> a1 var
R15550:15555 Top.Equiv <> aequiv def
prf 15650:15660 <> refl_bequiv
R15676:15679 Top.Imp <> bexp ind
R15683:15688 Top.Equiv <> bequiv def
R15692:15692 Top.Equiv <> b var
R15690:15690 Top.Equiv <> b var
R15711:15716 Top.Equiv <> bequiv def
prf 15758:15767 <> sym_bequiv
R15787:15790 Top.Imp <> bexp ind
R15808:15811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15812:15817 Top.Equiv <> bequiv def
R15822:15823 Top.Equiv <> b1 var
R15819:15820 Top.Equiv <> b2 var
R15796:15801 Top.Equiv <> bequiv def
R15806:15807 Top.Equiv <> b2 var
R15803:15804 Top.Equiv <> b1 var
R15842:15847 Top.Equiv <> bequiv def
prf 15909:15920 <> trans_bequiv
R15943:15946 Top.Imp <> bexp ind
R15964:15967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15980:15983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15984:15989 Top.Equiv <> bequiv def
R15994:15995 Top.Equiv <> b3 var
R15991:15992 Top.Equiv <> b1 var
R15968:15973 Top.Equiv <> bequiv def
R15978:15979 Top.Equiv <> b3 var
R15975:15976 Top.Equiv <> b2 var
R15952:15957 Top.Equiv <> bequiv def
R15962:15963 Top.Equiv <> b2 var
R15959:15960 Top.Equiv <> b1 var
R16014:16019 Top.Equiv <> bequiv def
prf 16114:16124 <> refl_cequiv
R16140:16142 Top.Imp <> com ind
R16146:16151 Top.Equiv <> cequiv def
R16155:16155 Top.Equiv <> c var
R16153:16153 Top.Equiv <> c var
R16174:16179 Top.Equiv <> cequiv def
R16205:16212 Coq.Init.Logic <> iff_refl thm
R16205:16212 Coq.Init.Logic <> iff_refl thm
prf 16228:16237 <> sym_cequiv
R16257:16259 Top.Imp <> com ind
R16277:16280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16281:16286 Top.Equiv <> cequiv def
R16291:16292 Top.Equiv <> c1 var
R16288:16289 Top.Equiv <> c2 var
R16265:16270 Top.Equiv <> cequiv def
R16275:16276 Top.Equiv <> c2 var
R16272:16273 Top.Equiv <> c1 var
R16311:16316 Top.Equiv <> cequiv def
R16366:16370 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16354:16356 Top.Imp <> ::x_'/'_x_'\\'_x not
R16359:16362 Top.Imp <> ::x_'/'_x_'\\'_x not
R16373:16375 Top.Imp <> ::x_'/'_x_'\\'_x not
R16378:16381 Top.Imp <> ::x_'/'_x_'\\'_x not
R16366:16370 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16354:16356 Top.Imp <> ::x_'/'_x_'\\'_x not
R16359:16362 Top.Imp <> ::x_'/'_x_'\\'_x not
R16373:16375 Top.Imp <> ::x_'/'_x_'\\'_x not
R16378:16381 Top.Imp <> ::x_'/'_x_'\\'_x not
R16442:16448 Coq.Init.Logic <> iff_sym thm
R16442:16448 Coq.Init.Logic <> iff_sym thm
prf 16475:16483 <> iff_trans
R16515:16515 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16525:16529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16530:16530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16540:16545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16555:16555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16548:16552 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16546:16547 Top.Equiv <> P1 var
R16553:16554 Top.Equiv <> P3 var
R16533:16537 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16531:16532 Top.Equiv <> P2 var
R16538:16539 Top.Equiv <> P3 var
R16518:16522 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16516:16517 Top.Equiv <> P1 var
R16523:16524 Top.Equiv <> P2 var
prf 16721:16732 <> trans_cequiv
R16755:16757 Top.Imp <> com ind
R16775:16778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16791:16794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16795:16800 Top.Equiv <> cequiv def
R16805:16806 Top.Equiv <> c3 var
R16802:16803 Top.Equiv <> c1 var
R16779:16784 Top.Equiv <> cequiv def
R16789:16790 Top.Equiv <> c3 var
R16786:16787 Top.Equiv <> c2 var
R16763:16768 Top.Equiv <> cequiv def
R16773:16774 Top.Equiv <> c2 var
R16770:16771 Top.Equiv <> c1 var
R16825:16830 Top.Equiv <> cequiv def
R16891:16893 Top.Imp <> ::x_'/'_x_'\\'_x not
R16896:16899 Top.Imp <> ::x_'/'_x_'\\'_x not
R16873:16881 Top.Equiv <> iff_trans thm
R16891:16893 Top.Imp <> ::x_'/'_x_'\\'_x not
R16896:16899 Top.Imp <> ::x_'/'_x_'\\'_x not
R16873:16881 Top.Equiv <> iff_trans thm
prf 18296:18310 <> CAss_congruence
R18346:18351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18352:18357 Top.Equiv <> cequiv def
R18372:18375 Top.Imp <> CAss constr
R18379:18381 Top.Equiv <> a1' var
R18377:18377 Top.Equiv <> i var
R18360:18363 Top.Imp <> CAss constr
R18367:18368 Top.Equiv <> a1 var
R18365:18365 Top.Equiv <> i var
R18333:18338 Top.Equiv <> aequiv def
R18343:18345 Top.Equiv <> a1' var
R18340:18341 Top.Equiv <> a1 var
R18494:18498 Top.Imp <> E_Ass constr
R18494:18498 Top.Imp <> E_Ass constr
R18580:18584 Top.Imp <> E_Ass constr
R18580:18584 Top.Imp <> E_Ass constr
prf 20436:20452 <> CWhile_congruence
R20493:20496 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20510:20515 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20516:20521 Top.Equiv <> cequiv def
R20545:20550 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20554:20557 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20561:20564 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20551:20553 Top.Equiv <> b1' var
R20558:20560 Top.Equiv <> c1' var
R20524:20529 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20532:20535 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20538:20541 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20530:20531 Top.Equiv <> b1 var
R20536:20537 Top.Equiv <> c1 var
R20497:20502 Top.Equiv <> cequiv def
R20507:20509 Top.Equiv <> c1' var
R20504:20505 Top.Equiv <> c1 var
R20480:20485 Top.Equiv <> bequiv def
R20490:20492 Top.Equiv <> b1' var
R20487:20488 Top.Equiv <> b1 var
R20608:20613 Top.Equiv <> bequiv def
R20615:20620 Top.Equiv <> cequiv def
R20712:20717 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20720:20723 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20726:20729 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20712:20717 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20720:20723 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20726:20729 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20845:20854 Top.Imp <> E_WhileEnd constr
R20845:20854 Top.Imp <> E_WhileEnd constr
R20919:20929 Top.Imp <> E_WhileLoop constr
R20919:20929 Top.Imp <> E_WhileLoop constr
R21178:21183 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21187:21190 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21194:21197 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21178:21183 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21187:21190 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21194:21197 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21316:21325 Top.Imp <> E_WhileEnd constr
R21316:21325 Top.Imp <> E_WhileEnd constr
R21390:21400 Top.Imp <> E_WhileLoop constr
R21390:21400 Top.Imp <> E_WhileLoop constr
prf 21696:21710 <> CSeq_congruence
R21751:21754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21768:21773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21774:21779 Top.Equiv <> cequiv def
R21794:21795 Top.Imp <> ::x_';;'_x not
R21791:21793 Top.Equiv <> c1' var
R21796:21798 Top.Equiv <> c2' var
R21784:21785 Top.Imp <> ::x_';;'_x not
R21782:21783 Top.Equiv <> c1 var
R21786:21787 Top.Equiv <> c2 var
R21755:21760 Top.Equiv <> cequiv def
R21765:21767 Top.Equiv <> c2' var
R21762:21763 Top.Equiv <> c2 var
R21738:21743 Top.Equiv <> cequiv def
R21748:21750 Top.Equiv <> c1' var
R21745:21746 Top.Equiv <> c1 var
prf 21907:21920 <> CIf_congruence
R21964:21967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21981:21984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21998:22003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22004:22009 Top.Equiv <> cequiv def
R22048:22051 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22054:22059 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22063:22068 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22072:22074 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22052:22053 Top.Equiv <> b' var
R22060:22062 Top.Equiv <> c1' var
R22069:22071 Top.Equiv <> c2' var
R22012:22015 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22017:22022 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22025:22030 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22033:22035 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22016:22016 Top.Equiv <> b var
R22023:22024 Top.Equiv <> c1 var
R22031:22032 Top.Equiv <> c2 var
R21985:21990 Top.Equiv <> cequiv def
R21995:21997 Top.Equiv <> c2' var
R21992:21993 Top.Equiv <> c2 var
R21968:21973 Top.Equiv <> cequiv def
R21978:21980 Top.Equiv <> c1' var
R21975:21976 Top.Equiv <> c1 var
R21953:21958 Top.Equiv <> bequiv def
R21962:21963 Top.Equiv <> b' var
R21960:21960 Top.Equiv <> b var
def 22229:22246 <> congruence_example
R22251:22256 Top.Equiv <> cequiv def
R22439:22446 Top.Imp <> ::x_';;'_x not
R22428:22432 Top.Imp <> ::x_'::='_x not
R22427:22427 Top.Imp <> X def
R22433:22436 Top.Imp <> ANum constr
R22447:22451 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22472:22490 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22519:22562 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22576:22583 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22452:22454 Top.Imp <> BEq constr
R22465:22468 Top.Imp <> ANum constr
R22457:22459 Top.Imp <> AId constr
R22461:22461 Top.Imp <> X def
R22492:22496 Top.Imp <> ::x_'::='_x not
R22491:22491 Top.Imp <> Y def
R22497:22502 Top.Imp <> AMinus constr
R22513:22515 Top.Imp <> AId constr
R22517:22517 Top.Imp <> X def
R22505:22507 Top.Imp <> AId constr
R22509:22509 Top.Imp <> X def
R22564:22568 Top.Imp <> ::x_'::='_x not
R22563:22563 Top.Imp <> Y def
R22569:22572 Top.Imp <> ANum constr
R22296:22303 Top.Imp <> ::x_';;'_x not
R22285:22289 Top.Imp <> ::x_'::='_x not
R22284:22284 Top.Imp <> X def
R22290:22293 Top.Imp <> ANum constr
R22304:22308 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22329:22347 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22360:22377 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22391:22398 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22309:22311 Top.Imp <> BEq constr
R22322:22325 Top.Imp <> ANum constr
R22314:22316 Top.Imp <> AId constr
R22318:22318 Top.Imp <> X def
R22349:22353 Top.Imp <> ::x_'::='_x not
R22348:22348 Top.Imp <> Y def
R22354:22357 Top.Imp <> ANum constr
R22379:22383 Top.Imp <> ::x_'::='_x not
R22378:22378 Top.Imp <> Y def
R22384:22387 Top.Imp <> ANum constr
R22602:22616 Top.Equiv <> CSeq_congruence prfax
R22602:22616 Top.Equiv <> CSeq_congruence prfax
R22629:22639 Top.Equiv <> refl_cequiv thm
R22629:22639 Top.Equiv <> refl_cequiv thm
R22652:22665 Top.Equiv <> CIf_congruence prfax
R22652:22665 Top.Equiv <> CIf_congruence prfax
R22680:22690 Top.Equiv <> refl_bequiv thm
R22680:22690 Top.Equiv <> refl_bequiv thm
R22705:22719 Top.Equiv <> CAss_congruence thm
R22705:22719 Top.Equiv <> CAss_congruence thm
R22729:22734 Top.Equiv <> aequiv def
R22768:22777 Coq.Arith.Minus <> minus_diag syndef
R22768:22777 Coq.Arith.Minus <> minus_diag syndef
R22792:22802 Top.Equiv <> refl_cequiv thm
R22792:22802 Top.Equiv <> refl_cequiv thm
def 23562:23573 <> atrans_sound
R23589:23592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23593:23596 Top.Imp <> aexp ind
R23585:23588 Top.Imp <> aexp ind
R23623:23626 Top.Imp <> aexp ind
R23634:23639 Top.Equiv <> aequiv def
R23644:23649 Top.Equiv <> atrans var
R23651:23651 Top.Equiv <> a var
R23641:23641 Top.Equiv <> a var
def 23667:23678 <> btrans_sound
R23694:23697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23698:23701 Top.Imp <> bexp ind
R23690:23693 Top.Imp <> bexp ind
R23728:23731 Top.Imp <> bexp ind
R23739:23744 Top.Equiv <> bequiv def
R23749:23754 Top.Equiv <> btrans var
R23756:23756 Top.Equiv <> b var
R23746:23746 Top.Equiv <> b var
def 23772:23783 <> ctrans_sound
R23798:23801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23802:23804 Top.Imp <> com ind
R23795:23797 Top.Imp <> com ind
R23831:23833 Top.Imp <> com ind
R23841:23846 Top.Equiv <> cequiv def
R23851:23856 Top.Equiv <> ctrans var
R23858:23858 Top.Equiv <> c var
R23848:23848 Top.Equiv <> c var
def 24184:24202 <> fold_constants_aexp
R24209:24212 Top.Imp <> aexp ind
R24217:24220 Top.Imp <> aexp ind
R24233:24233 Top.Equiv <> a var
R24244:24247 Top.Imp <> ANum constr
R24260:24263 Top.Imp <> ANum constr
R24271:24273 Top.Imp <> AId constr
R24287:24289 Top.Imp <> AId constr
R24297:24301 Top.Imp <> APlus constr
R24323:24323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24346:24347 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24370:24370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24324:24342 Top.Equiv <> fold_constants_aexp def
R24348:24366 Top.Equiv <> fold_constants_aexp def
R24387:24387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24395:24396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24404:24404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24388:24391 Top.Imp <> ANum constr
R24397:24400 Top.Imp <> ANum constr
R24409:24412 Top.Imp <> ANum constr
R24417:24419 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24430:24430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24434:24435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24439:24439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24444:24448 Top.Imp <> APlus constr
R24470:24475 Top.Imp <> AMinus constr
R24496:24496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24519:24520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24543:24543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24497:24515 Top.Equiv <> fold_constants_aexp def
R24521:24539 Top.Equiv <> fold_constants_aexp def
R24560:24560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24568:24569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24577:24577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24561:24564 Top.Imp <> ANum constr
R24570:24573 Top.Imp <> ANum constr
R24582:24585 Top.Imp <> ANum constr
R24590:24592 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R24603:24603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24607:24608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24612:24612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24617:24622 Top.Imp <> AMinus constr
R24644:24648 Top.Imp <> AMult constr
R24670:24670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24693:24694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24717:24717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24671:24689 Top.Equiv <> fold_constants_aexp def
R24695:24713 Top.Equiv <> fold_constants_aexp def
R24734:24734 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24742:24743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24751:24751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24735:24738 Top.Imp <> ANum constr
R24744:24747 Top.Imp <> ANum constr
R24756:24759 Top.Imp <> ANum constr
R24764:24766 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24777:24777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24781:24782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24786:24786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24791:24795 Top.Imp <> AMult constr
def 24829:24841 <> fold_aexp_ex1
R24916:24920 Coq.Init.Logic <> :type_scope:x_'='_x not
R24849:24867 Top.Equiv <> fold_constants_aexp def
R24876:24880 Top.Imp <> AMult constr
R24909:24911 Top.Imp <> AId constr
R24913:24913 Top.Imp <> X def
R24883:24887 Top.Imp <> APlus constr
R24899:24902 Top.Imp <> ANum constr
R24890:24893 Top.Imp <> ANum constr
R24921:24925 Top.Imp <> AMult constr
R24937:24939 Top.Imp <> AId constr
R24941:24941 Top.Imp <> X def
R24928:24931 Top.Imp <> ANum constr
def 25284:25296 <> fold_aexp_ex2
R25417:25421 Coq.Init.Logic <> :type_scope:x_'='_x not
R25304:25322 Top.Equiv <> fold_constants_aexp def
R25331:25336 Top.Imp <> AMinus constr
R25347:25351 Top.Imp <> APlus constr
R25409:25411 Top.Imp <> AId constr
R25413:25413 Top.Imp <> Y def
R25354:25358 Top.Imp <> AMult constr
R25370:25373 Top.Imp <> ANum constr
R25361:25364 Top.Imp <> ANum constr
R25339:25341 Top.Imp <> AId constr
R25343:25343 Top.Imp <> X def
R25422:25427 Top.Imp <> AMinus constr
R25438:25442 Top.Imp <> APlus constr
R25454:25456 Top.Imp <> AId constr
R25458:25458 Top.Imp <> Y def
R25445:25448 Top.Imp <> ANum constr
R25430:25432 Top.Imp <> AId constr
R25434:25434 Top.Imp <> X def
def 25680:25698 <> fold_constants_bexp
R25705:25708 Top.Imp <> bexp ind
R25713:25716 Top.Imp <> bexp ind
R25729:25729 Top.Equiv <> b var
R25740:25744 Top.Imp <> BTrue constr
R25756:25760 Top.Imp <> BTrue constr
R25766:25771 Top.Imp <> BFalse constr
R25782:25787 Top.Imp <> BFalse constr
R25793:25795 Top.Imp <> BEq constr
R25819:25819 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25842:25843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25866:25866 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25820:25838 Top.Equiv <> fold_constants_aexp def
R25844:25862 Top.Equiv <> fold_constants_aexp def
R25881:25881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25889:25890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25898:25898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25882:25885 Top.Imp <> ANum constr
R25891:25894 Top.Imp <> ANum constr
R25916:25922 Coq.Arith.EqNat <> beq_nat syndef
R25946:25951 Top.Imp <> BFalse constr
R25935:25939 Top.Imp <> BTrue constr
R25961:25961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25965:25966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25970:25970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25985:25987 Top.Imp <> BEq constr
R26011:26013 Top.Imp <> BLe constr
R26037:26037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26060:26061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26084:26084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26038:26056 Top.Equiv <> fold_constants_aexp def
R26062:26080 Top.Equiv <> fold_constants_aexp def
R26099:26099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26107:26108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26116:26116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26100:26103 Top.Imp <> ANum constr
R26109:26112 Top.Imp <> ANum constr
R26134:26136 Coq.Arith.Compare_dec <> leb syndef
R26160:26165 Top.Imp <> BFalse constr
R26149:26153 Top.Imp <> BTrue constr
R26175:26175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26179:26180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26184:26184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26199:26201 Top.Imp <> BLe constr
R26225:26228 Top.Imp <> BNot constr
R26250:26268 Top.Equiv <> fold_constants_bexp def
R26287:26291 Top.Imp <> BTrue constr
R26296:26301 Top.Imp <> BFalse constr
R26311:26316 Top.Imp <> BFalse constr
R26321:26325 Top.Imp <> BTrue constr
R26342:26345 Top.Imp <> BNot constr
R26365:26368 Top.Imp <> BAnd constr
R26392:26392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26415:26416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26439:26439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26393:26411 Top.Equiv <> fold_constants_bexp def
R26417:26435 Top.Equiv <> fold_constants_bexp def
R26454:26454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26460:26461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26467:26467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26455:26459 Top.Imp <> BTrue constr
R26462:26466 Top.Imp <> BTrue constr
R26472:26476 Top.Imp <> BTrue constr
R26486:26486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26492:26493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26500:26500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26487:26491 Top.Imp <> BTrue constr
R26494:26499 Top.Imp <> BFalse constr
R26505:26510 Top.Imp <> BFalse constr
R26520:26520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26527:26528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26534:26534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26521:26526 Top.Imp <> BFalse constr
R26529:26533 Top.Imp <> BTrue constr
R26539:26544 Top.Imp <> BFalse constr
R26554:26554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26561:26562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26569:26569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26555:26560 Top.Imp <> BFalse constr
R26563:26568 Top.Imp <> BFalse constr
R26574:26579 Top.Imp <> BFalse constr
R26589:26589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26593:26594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26598:26598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26603:26606 Top.Imp <> BAnd constr
def 26642:26654 <> fold_bexp_ex1
R26721:26725 Coq.Init.Logic <> :type_scope:x_'='_x not
R26662:26680 Top.Equiv <> fold_constants_bexp def
R26683:26686 Top.Imp <> BAnd constr
R26695:26698 Top.Imp <> BNot constr
R26701:26704 Top.Imp <> BAnd constr
R26713:26717 Top.Imp <> BTrue constr
R26706:26711 Top.Imp <> BFalse constr
R26688:26692 Top.Imp <> BTrue constr
R26726:26730 Top.Imp <> BTrue constr
def 26767:26779 <> fold_bexp_ex2
R26970:26974 Coq.Init.Logic <> :type_scope:x_'='_x not
R26787:26805 Top.Equiv <> fold_constants_bexp def
R26814:26817 Top.Imp <> BAnd constr
R26854:26856 Top.Imp <> BEq constr
R26885:26890 Top.Imp <> AMinus constr
R26902:26906 Top.Imp <> APlus constr
R26959:26962 Top.Imp <> ANum constr
R26909:26912 Top.Imp <> ANum constr
R26893:26896 Top.Imp <> ANum constr
R26859:26862 Top.Imp <> ANum constr
R26820:26822 Top.Imp <> BEq constr
R26833:26835 Top.Imp <> AId constr
R26837:26837 Top.Imp <> Y def
R26825:26827 Top.Imp <> AId constr
R26829:26829 Top.Imp <> X def
R26975:26978 Top.Imp <> BAnd constr
R27002:27006 Top.Imp <> BTrue constr
R26981:26983 Top.Imp <> BEq constr
R26994:26996 Top.Imp <> AId constr
R26998:26998 Top.Imp <> Y def
R26986:26988 Top.Imp <> AId constr
R26990:26990 Top.Imp <> X def
def 27160:27177 <> fold_constants_com
R27184:27186 Top.Imp <> com ind
R27191:27193 Top.Imp <> com ind
R27206:27206 Top.Equiv <> c var
R27217:27220 Top.Imp <> ::'SKIP' not
R27236:27239 Top.Imp <> ::'SKIP' not
R27246:27250 Top.Imp <> ::x_'::='_x not
R27263:27266 Top.Imp <> CAss constr
R27271:27289 Top.Equiv <> fold_constants_aexp def
R27300:27303 Top.Imp <> ::x_';;'_x not
R27317:27317 Top.Imp <> ::x_';;'_x not
R27339:27344 Top.Imp <> ::x_';;'_x not
R27366:27366 Top.Imp <> ::x_';;'_x not
R27318:27335 Top.Equiv <> fold_constants_com def
R27345:27362 Top.Equiv <> fold_constants_com def
R27372:27375 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27377:27382 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27385:27390 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27393:27395 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27412:27430 Top.Equiv <> fold_constants_bexp def
R27447:27451 Top.Imp <> BTrue constr
R27456:27473 Top.Equiv <> fold_constants_com def
R27486:27491 Top.Imp <> BFalse constr
R27496:27513 Top.Equiv <> fold_constants_com def
R27532:27535 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27538:27543 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27565:27591 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27613:27615 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27544:27561 Top.Equiv <> fold_constants_com def
R27592:27609 Top.Equiv <> fold_constants_com def
R27631:27636 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27638:27641 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27643:27646 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27663:27681 Top.Equiv <> fold_constants_bexp def
R27698:27702 Top.Imp <> BTrue constr
R27707:27712 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27718:27721 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27726:27729 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27713:27717 Top.Imp <> BTrue constr
R27722:27725 Top.Imp <> ::'SKIP' not
R27739:27744 Top.Imp <> BFalse constr
R27749:27752 Top.Imp <> ::'SKIP' not
R27768:27773 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27776:27780 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27801:27805 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R27781:27798 Top.Equiv <> fold_constants_com def
R27800:27800 Top.Equiv <> c var
def 27833:27844 <> fold_com_ex1
R28326:28365 Coq.Init.Logic <> :type_scope:x_'='_x not
R28623:28623 Coq.Init.Logic <> :type_scope:x_'='_x not
R27850:27867 Top.Equiv <> fold_constants_com def
R27931:27938 Top.Imp <> ::x_';;'_x not
R27903:27907 Top.Imp <> ::x_'::='_x not
R27902:27902 Top.Imp <> X def
R27908:27912 Top.Imp <> APlus constr
R27924:27927 Top.Imp <> ANum constr
R27915:27918 Top.Imp <> ANum constr
R27968:27975 Top.Imp <> ::x_';;'_x not
R27940:27944 Top.Imp <> ::x_'::='_x not
R27939:27939 Top.Imp <> Y def
R27945:27950 Top.Imp <> AMinus constr
R27961:27964 Top.Imp <> ANum constr
R27953:27955 Top.Imp <> AId constr
R27957:27957 Top.Imp <> X def
R28102:28109 Top.Imp <> ::x_';;'_x not
R27976:27979 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28047:28059 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28064:28081 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28094:28101 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27980:27982 Top.Imp <> BEq constr
R28023:28027 Top.Imp <> APlus constr
R28039:28042 Top.Imp <> ANum constr
R28030:28033 Top.Imp <> ANum constr
R27985:27990 Top.Imp <> AMinus constr
R28001:28003 Top.Imp <> AId constr
R28005:28005 Top.Imp <> Y def
R27993:27995 Top.Imp <> AId constr
R27997:27997 Top.Imp <> X def
R28060:28063 Top.Imp <> ::'SKIP' not
R28083:28087 Top.Imp <> ::x_'::='_x not
R28082:28082 Top.Imp <> Y def
R28088:28091 Top.Imp <> ANum constr
R28243:28250 Top.Imp <> ::x_';;'_x not
R28110:28113 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28183:28200 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28213:28230 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28235:28242 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28114:28116 Top.Imp <> BLe constr
R28141:28146 Top.Imp <> AMinus constr
R28158:28162 Top.Imp <> APlus constr
R28174:28177 Top.Imp <> ANum constr
R28165:28168 Top.Imp <> ANum constr
R28149:28152 Top.Imp <> ANum constr
R28119:28122 Top.Imp <> ANum constr
R28202:28206 Top.Imp <> ::x_'::='_x not
R28201:28201 Top.Imp <> Y def
R28207:28210 Top.Imp <> ANum constr
R28231:28234 Top.Imp <> ::'SKIP' not
R28251:28256 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R28277:28287 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R28316:28324 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R28257:28259 Top.Imp <> BEq constr
R28270:28273 Top.Imp <> ANum constr
R28262:28264 Top.Imp <> AId constr
R28266:28266 Top.Imp <> Y def
R28289:28293 Top.Imp <> ::x_'::='_x not
R28288:28288 Top.Imp <> X def
R28294:28298 Top.Imp <> APlus constr
R28309:28312 Top.Imp <> ANum constr
R28301:28303 Top.Imp <> AId constr
R28305:28305 Top.Imp <> X def
R28378:28385 Top.Imp <> ::x_';;'_x not
R28367:28371 Top.Imp <> ::x_'::='_x not
R28366:28366 Top.Imp <> X def
R28372:28375 Top.Imp <> ANum constr
R28415:28422 Top.Imp <> ::x_';;'_x not
R28387:28391 Top.Imp <> ::x_'::='_x not
R28386:28386 Top.Imp <> Y def
R28392:28397 Top.Imp <> AMinus constr
R28408:28411 Top.Imp <> ANum constr
R28400:28402 Top.Imp <> AId constr
R28404:28404 Top.Imp <> X def
R28521:28528 Top.Imp <> ::x_';;'_x not
R28423:28426 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28464:28476 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28481:28499 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28512:28520 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R28427:28429 Top.Imp <> BEq constr
R28457:28460 Top.Imp <> ANum constr
R28432:28437 Top.Imp <> AMinus constr
R28448:28450 Top.Imp <> AId constr
R28452:28452 Top.Imp <> Y def
R28440:28442 Top.Imp <> AId constr
R28444:28444 Top.Imp <> X def
R28477:28480 Top.Imp <> ::'SKIP' not
R28501:28505 Top.Imp <> ::x_'::='_x not
R28500:28500 Top.Imp <> Y def
R28506:28509 Top.Imp <> ANum constr
R28541:28548 Top.Imp <> ::x_';;'_x not
R28530:28534 Top.Imp <> ::x_'::='_x not
R28529:28529 Top.Imp <> Y def
R28535:28538 Top.Imp <> ANum constr
R28549:28554 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R28575:28585 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R28614:28622 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R28555:28557 Top.Imp <> BEq constr
R28568:28571 Top.Imp <> ANum constr
R28560:28562 Top.Imp <> AId constr
R28564:28564 Top.Imp <> Y def
R28587:28591 Top.Imp <> ::x_'::='_x not
R28586:28586 Top.Imp <> X def
R28592:28596 Top.Imp <> APlus constr
R28607:28610 Top.Imp <> ANum constr
R28599:28601 Top.Imp <> AId constr
R28603:28603 Top.Imp <> X def
prf 28887:28911 <> fold_constants_aexp_sound
R28917:28928 Top.Equiv <> atrans_sound def
R28930:28948 Top.Equiv <> fold_constants_aexp def
R28967:28978 Top.Equiv <> atrans_sound def
R28998:29003 Top.Equiv <> aequiv def
R29412:29430 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29412:29430 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29412:29430 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29412:29430 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
R29456:29474 Top.Equiv <> fold_constants_aexp def
prf 32418:32442 <> fold_constants_bexp_sound
R32447:32458 Top.Equiv <> btrans_sound def
R32460:32478 Top.Equiv <> fold_constants_bexp def
R32497:32508 Top.Equiv <> btrans_sound def
R32528:32533 Top.Equiv <> bequiv def
R33012:33030 Top.Equiv <> fold_constants_aexp def
R33012:33030 Top.Equiv <> fold_constants_aexp def
R33069:33087 Top.Equiv <> fold_constants_aexp def
R33069:33087 Top.Equiv <> fold_constants_aexp def
R33125:33129 Top.Imp <> aeval def
R33144:33148 Top.Imp <> aeval def
R33191:33215 Top.Equiv <> fold_constants_aexp_sound thm
R33125:33129 Top.Imp <> aeval def
R33144:33148 Top.Imp <> aeval def
R33191:33215 Top.Equiv <> fold_constants_aexp_sound thm
R33191:33215 Top.Equiv <> fold_constants_aexp_sound thm
R33245:33249 Top.Imp <> aeval def
R33264:33268 Top.Imp <> aeval def
R33311:33335 Top.Equiv <> fold_constants_aexp_sound thm
R33245:33249 Top.Imp <> aeval def
R33264:33268 Top.Imp <> aeval def
R33311:33335 Top.Equiv <> fold_constants_aexp_sound thm
R33311:33335 Top.Equiv <> fold_constants_aexp_sound thm
R33522:33528 Coq.Arith.EqNat <> beq_nat syndef
R33522:33528 Coq.Arith.EqNat <> beq_nat syndef
R33630:33648 Top.Equiv <> fold_constants_bexp def
R33630:33648 Top.Equiv <> fold_constants_bexp def
R33757:33775 Top.Equiv <> fold_constants_bexp def
R33757:33775 Top.Equiv <> fold_constants_bexp def
R33814:33832 Top.Equiv <> fold_constants_bexp def
R33814:33832 Top.Equiv <> fold_constants_bexp def
prf 34098:34121 <> fold_constants_com_sound
R34127:34138 Top.Equiv <> ctrans_sound def
R34140:34157 Top.Equiv <> fold_constants_com def
R34176:34187 Top.Equiv <> ctrans_sound def
R34243:34253 Top.Equiv <> refl_cequiv thm
R34243:34253 Top.Equiv <> refl_cequiv thm
R34276:34290 Top.Equiv <> CAss_congruence thm
R34276:34290 Top.Equiv <> CAss_congruence thm
R34313:34337 Top.Equiv <> fold_constants_aexp_sound thm
R34313:34337 Top.Equiv <> fold_constants_aexp_sound thm
R34359:34373 Top.Equiv <> CSeq_congruence prfax
R34359:34373 Top.Equiv <> CSeq_congruence prfax
R34414:34419 Top.Equiv <> bequiv def
R34424:34442 Top.Equiv <> fold_constants_bexp def
R34414:34419 Top.Equiv <> bequiv def
R34424:34442 Top.Equiv <> fold_constants_bexp def
R34463:34487 Top.Equiv <> fold_constants_bexp_sound prfax
R34463:34487 Top.Equiv <> fold_constants_bexp_sound prfax
R34506:34524 Top.Equiv <> fold_constants_bexp def
R34556:34569 Top.Equiv <> CIf_congruence prfax
R34506:34524 Top.Equiv <> fold_constants_bexp def
R34556:34569 Top.Equiv <> CIf_congruence prfax
R34556:34569 Top.Equiv <> CIf_congruence prfax
R34556:34569 Top.Equiv <> CIf_congruence prfax
R34556:34569 Top.Equiv <> CIf_congruence prfax
R34556:34569 Top.Equiv <> CIf_congruence prfax
R34556:34569 Top.Equiv <> CIf_congruence prfax
R34781:34792 Top.Equiv <> trans_cequiv thm
R34781:34792 Top.Equiv <> trans_cequiv thm
R34831:34838 Top.Equiv <> IFB_true thm
R34831:34838 Top.Equiv <> IFB_true thm
R34892:34903 Top.Equiv <> trans_cequiv thm
R34892:34903 Top.Equiv <> trans_cequiv thm
R34942:34950 Top.Equiv <> IFB_false prfax
R34942:34950 Top.Equiv <> IFB_false prfax
def 37415:37424 <> subst_aexp
R37431:37432 Top.Maps <> id ind
R37440:37443 Top.Imp <> aexp ind
R37451:37454 Top.Imp <> aexp ind
R37459:37462 Top.Imp <> aexp ind
R37475:37475 Top.Equiv <> a var
R37486:37489 Top.Imp <> ANum constr
R37508:37511 Top.Imp <> ANum constr
R37519:37521 Top.Imp <> AId constr
R37544:37549 Top.Maps <> beq_id def
R37551:37551 Top.Equiv <> i var
R37568:37570 Top.Imp <> AId constr
R37561:37561 Top.Equiv <> u var
R37579:37583 Top.Imp <> APlus constr
R37601:37605 Top.Imp <> APlus constr
R37628:37637 Top.Equiv <> subst_aexp def
R37641:37641 Top.Equiv <> u var
R37639:37639 Top.Equiv <> i var
R37608:37617 Top.Equiv <> subst_aexp def
R37621:37621 Top.Equiv <> u var
R37619:37619 Top.Equiv <> i var
R37651:37656 Top.Imp <> AMinus constr
R37673:37678 Top.Imp <> AMinus constr
R37701:37710 Top.Equiv <> subst_aexp def
R37714:37714 Top.Equiv <> u var
R37712:37712 Top.Equiv <> i var
R37681:37690 Top.Equiv <> subst_aexp def
R37694:37694 Top.Equiv <> u var
R37692:37692 Top.Equiv <> i var
R37724:37728 Top.Imp <> AMult constr
R37746:37750 Top.Imp <> AMult constr
R37773:37782 Top.Equiv <> subst_aexp def
R37786:37786 Top.Equiv <> u var
R37784:37784 Top.Equiv <> i var
R37753:37762 Top.Equiv <> subst_aexp def
R37766:37766 Top.Equiv <> u var
R37764:37764 Top.Equiv <> i var
def 37808:37820 <> subst_aexp_ex
R37903:37906 Coq.Init.Logic <> :type_scope:x_'='_x not
R37948:37948 Coq.Init.Logic <> :type_scope:x_'='_x not
R37826:37835 Top.Equiv <> subst_aexp def
R37881:37885 Top.Imp <> APlus constr
R37896:37898 Top.Imp <> AId constr
R37900:37900 Top.Imp <> X def
R37888:37890 Top.Imp <> AId constr
R37892:37892 Top.Imp <> Y def
R37840:37844 Top.Imp <> APlus constr
R37857:37860 Top.Imp <> ANum constr
R37847:37850 Top.Imp <> ANum constr
R37837:37837 Top.Imp <> X def
R37907:37911 Top.Imp <> APlus constr
R37922:37926 Top.Imp <> APlus constr
R37939:37942 Top.Imp <> ANum constr
R37929:37932 Top.Imp <> ANum constr
R37914:37916 Top.Imp <> AId constr
R37918:37918 Top.Imp <> Y def
def 38144:38163 <> subst_equiv_property
R38190:38195 Top.Equiv <> cequiv def
R38240:38242 Top.Imp <> ::x_';;'_x not
R38233:38237 Top.Imp <> ::x_'::='_x not
R38231:38232 Top.Equiv <> i1 var
R38238:38239 Top.Equiv <> a1 var
R38245:38249 Top.Imp <> ::x_'::='_x not
R38243:38244 Top.Equiv <> i2 var
R38250:38259 Top.Equiv <> subst_aexp def
R38267:38268 Top.Equiv <> a2 var
R38264:38265 Top.Equiv <> a1 var
R38261:38262 Top.Equiv <> i1 var
R38207:38209 Top.Imp <> ::x_';;'_x not
R38200:38204 Top.Imp <> ::x_'::='_x not
R38198:38199 Top.Equiv <> i1 var
R38205:38206 Top.Equiv <> a1 var
R38212:38216 Top.Imp <> ::x_'::='_x not
R38210:38211 Top.Equiv <> i2 var
R38217:38218 Top.Equiv <> a2 var
prf 39510:39522 <> subst_inequiv
R39528:39529 Coq.Init.Logic <> :type_scope:'~'_x not
R39530:39549 Top.Equiv <> subst_equiv_property def
R39568:39587 Top.Equiv <> subst_equiv_property def
R39798:39812 Top.Imp <> ::x_';;'_x not
R39771:39775 Top.Imp <> ::x_'::='_x not
R39770:39770 Top.Imp <> X def
R39776:39780 Top.Imp <> APlus constr
R39791:39794 Top.Imp <> ANum constr
R39783:39785 Top.Imp <> AId constr
R39787:39787 Top.Imp <> X def
R39814:39818 Top.Imp <> ::x_'::='_x not
R39813:39813 Top.Imp <> Y def
R39819:39821 Top.Imp <> AId constr
R39823:39823 Top.Imp <> X def
R39798:39812 Top.Imp <> ::x_';;'_x not
R39771:39775 Top.Imp <> ::x_'::='_x not
R39770:39770 Top.Imp <> X def
R39776:39780 Top.Imp <> APlus constr
R39791:39794 Top.Imp <> ANum constr
R39783:39785 Top.Imp <> AId constr
R39787:39787 Top.Imp <> X def
R39814:39818 Top.Imp <> ::x_'::='_x not
R39813:39813 Top.Imp <> Y def
R39819:39821 Top.Imp <> AId constr
R39823:39823 Top.Imp <> X def
R39879:39893 Top.Imp <> ::x_';;'_x not
R39852:39856 Top.Imp <> ::x_'::='_x not
R39851:39851 Top.Imp <> X def
R39857:39861 Top.Imp <> APlus constr
R39872:39875 Top.Imp <> ANum constr
R39864:39866 Top.Imp <> AId constr
R39868:39868 Top.Imp <> X def
R39895:39899 Top.Imp <> ::x_'::='_x not
R39894:39894 Top.Imp <> Y def
R39900:39904 Top.Imp <> APlus constr
R39915:39918 Top.Imp <> ANum constr
R39907:39909 Top.Imp <> AId constr
R39911:39911 Top.Imp <> X def
R39879:39893 Top.Imp <> ::x_';;'_x not
R39852:39856 Top.Imp <> ::x_'::='_x not
R39851:39851 Top.Imp <> X def
R39857:39861 Top.Imp <> APlus constr
R39872:39875 Top.Imp <> ANum constr
R39864:39866 Top.Imp <> AId constr
R39868:39868 Top.Imp <> X def
R39895:39899 Top.Imp <> ::x_'::='_x not
R39894:39894 Top.Imp <> Y def
R39900:39904 Top.Imp <> APlus constr
R39915:39918 Top.Imp <> ANum constr
R39907:39909 Top.Imp <> AId constr
R39911:39911 Top.Imp <> X def
R39947:39952 Top.Equiv <> cequiv def
R39947:39952 Top.Equiv <> cequiv def
R40169:40176 Top.Maps <> t_update def
R40205:40205 Top.Imp <> Y def
R40179:40186 Top.Maps <> t_update def
R40200:40200 Top.Imp <> X def
R40188:40198 Top.Imp <> empty_state def
R40169:40176 Top.Maps <> t_update def
R40205:40205 Top.Imp <> Y def
R40179:40186 Top.Maps <> t_update def
R40200:40200 Top.Imp <> X def
R40188:40198 Top.Imp <> empty_state def
R40230:40237 Top.Maps <> t_update def
R40266:40266 Top.Imp <> Y def
R40240:40247 Top.Maps <> t_update def
R40261:40261 Top.Imp <> X def
R40249:40259 Top.Imp <> empty_state def
R40230:40237 Top.Maps <> t_update def
R40266:40266 Top.Imp <> Y def
R40240:40247 Top.Maps <> t_update def
R40261:40261 Top.Imp <> X def
R40249:40259 Top.Imp <> empty_state def
R40295:40297 Top.Imp <> ::x_'/'_x_'\\'_x not
R40309:40312 Top.Imp <> ::x_'/'_x_'\\'_x not
R40298:40308 Top.Imp <> empty_state def
R40335:40337 Top.Imp <> ::x_'/'_x_'\\'_x not
R40349:40352 Top.Imp <> ::x_'/'_x_'\\'_x not
R40338:40348 Top.Imp <> empty_state def
R40406:40413 Top.Maps <> t_update def
R40427:40427 Top.Imp <> X def
R40415:40425 Top.Imp <> empty_state def
R40386:40390 Top.Imp <> E_Seq constr
R40447:40451 Top.Imp <> E_Ass constr
R40295:40297 Top.Imp <> ::x_'/'_x_'\\'_x not
R40309:40312 Top.Imp <> ::x_'/'_x_'\\'_x not
R40298:40308 Top.Imp <> empty_state def
R40335:40337 Top.Imp <> ::x_'/'_x_'\\'_x not
R40349:40352 Top.Imp <> ::x_'/'_x_'\\'_x not
R40338:40348 Top.Imp <> empty_state def
R40335:40337 Top.Imp <> ::x_'/'_x_'\\'_x not
R40349:40352 Top.Imp <> ::x_'/'_x_'\\'_x not
R40338:40348 Top.Imp <> empty_state def
R40406:40413 Top.Maps <> t_update def
R40427:40427 Top.Imp <> X def
R40415:40425 Top.Imp <> empty_state def
R40386:40390 Top.Imp <> E_Seq constr
R40447:40451 Top.Imp <> E_Ass constr
R40447:40451 Top.Imp <> E_Ass constr
R40406:40413 Top.Maps <> t_update def
R40427:40427 Top.Imp <> X def
R40415:40425 Top.Imp <> empty_state def
R40386:40390 Top.Imp <> E_Seq constr
R40447:40451 Top.Imp <> E_Ass constr
R40447:40451 Top.Imp <> E_Ass constr
R40406:40413 Top.Maps <> t_update def
R40427:40427 Top.Imp <> X def
R40415:40425 Top.Imp <> empty_state def
R40386:40390 Top.Imp <> E_Seq constr
R40447:40451 Top.Imp <> E_Ass constr
R40447:40451 Top.Imp <> E_Ass constr
R40406:40413 Top.Maps <> t_update def
R40427:40427 Top.Imp <> X def
R40415:40425 Top.Imp <> empty_state def
R40386:40390 Top.Imp <> E_Seq constr
R40606:40608 Coq.Init.Logic <> :type_scope:x_'='_x not
R40629:40647 Top.Imp <> ceval_deterministic thm
R40652:40662 Top.Imp <> empty_state def
R40606:40608 Coq.Init.Logic <> :type_scope:x_'='_x not
R40629:40647 Top.Imp <> ceval_deterministic thm
R40652:40662 Top.Imp <> empty_state def
R40704:40706 Coq.Init.Logic <> :type_scope:x_'='_x not
R40703:40703 Top.Imp <> Y def
R40711:40711 Top.Imp <> Y def
R40704:40706 Coq.Init.Logic <> :type_scope:x_'='_x not
R40703:40703 Top.Imp <> Y def
R40711:40711 Top.Imp <> Y def
ind 41119:41138 <> var_not_used_in_aexp
constr 41169:41174 <> VNUNum
constr 41223:41227 <> VNUId
constr 41285:41291 <> VNUPlus
constr 41425:41432 <> VNUMinus
constr 41567:41573 <> VNUMult
R41143:41144 Top.Maps <> id ind
R41153:41156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41149:41152 Top.Imp <> aexp ind
R41187:41206 Top.Equiv <> var_not_used_in_aexp ind
R41211:41214 Top.Imp <> ANum constr
R41216:41216 Top.Equiv <> n var
R41208:41208 Top.Equiv <> X var
R41246:41249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41250:41269 Top.Equiv <> var_not_used_in_aexp ind
R41274:41276 Top.Imp <> AId constr
R41278:41278 Top.Equiv <> Y var
R41271:41271 Top.Equiv <> X var
R41241:41244 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41240:41240 Top.Equiv <> X var
R41245:41245 Top.Equiv <> Y var
R41339:41348 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41374:41383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41384:41403 Top.Equiv <> var_not_used_in_aexp ind
R41408:41412 Top.Imp <> APlus constr
R41417:41418 Top.Equiv <> a2 var
R41414:41415 Top.Equiv <> a1 var
R41405:41405 Top.Equiv <> X var
R41349:41368 Top.Equiv <> var_not_used_in_aexp ind
R41372:41373 Top.Equiv <> a2 var
R41370:41370 Top.Equiv <> X var
R41314:41333 Top.Equiv <> var_not_used_in_aexp ind
R41337:41338 Top.Equiv <> a1 var
R41335:41335 Top.Equiv <> X var
R41480:41489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41515:41524 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41525:41544 Top.Equiv <> var_not_used_in_aexp ind
R41549:41554 Top.Imp <> AMinus constr
R41559:41560 Top.Equiv <> a2 var
R41556:41557 Top.Equiv <> a1 var
R41546:41546 Top.Equiv <> X var
R41490:41509 Top.Equiv <> var_not_used_in_aexp ind
R41513:41514 Top.Equiv <> a2 var
R41511:41511 Top.Equiv <> X var
R41455:41474 Top.Equiv <> var_not_used_in_aexp ind
R41478:41479 Top.Equiv <> a1 var
R41476:41476 Top.Equiv <> X var
R41621:41630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41656:41665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41666:41685 Top.Equiv <> var_not_used_in_aexp ind
R41690:41694 Top.Imp <> AMult constr
R41699:41700 Top.Equiv <> a2 var
R41696:41697 Top.Equiv <> a1 var
R41687:41687 Top.Equiv <> X var
R41631:41650 Top.Equiv <> var_not_used_in_aexp ind
R41654:41655 Top.Equiv <> a2 var
R41652:41652 Top.Equiv <> X var
R41596:41615 Top.Equiv <> var_not_used_in_aexp ind
R41619:41620 Top.Equiv <> a1 var
R41617:41617 Top.Equiv <> X var
prf 41711:41725 <> aeval_weakening
R41773:41778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41805:41807 Coq.Init.Logic <> :type_scope:x_'='_x not
R41779:41783 Top.Imp <> aeval def
R41804:41804 Top.Equiv <> a var
R41786:41793 Top.Maps <> t_update def
R41800:41801 Top.Equiv <> ni var
R41798:41798 Top.Equiv <> i var
R41795:41796 Top.Equiv <> st var
R41808:41812 Top.Imp <> aeval def
R41817:41817 Top.Equiv <> a var
R41814:41815 Top.Equiv <> st var
R41749:41768 Top.Equiv <> var_not_used_in_aexp ind
R41772:41772 Top.Equiv <> a var
R41770:41770 Top.Equiv <> i var
prf 42117:42132 <> inequiv_exercise
R42137:42138 Coq.Init.Logic <> :type_scope:'~'_x not
R42139:42144 Top.Equiv <> cequiv def
R42172:42175 Top.Imp <> ::'SKIP' not
R42147:42152 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R42158:42161 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R42166:42169 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R42153:42157 Top.Imp <> BTrue constr
R42162:42165 Top.Imp <> ::'SKIP' not
mod 44283:44286 <> Himp
ind 44384:44386 Himp com
constr 44402:44406 Himp CSkip
constr 44418:44421 Himp CAss
constr 44447:44450 Himp CSeq
constr 44476:44478 Himp CIf
constr 44512:44517 Himp CWhile
constr 44544:44549 Himp CHavoc
R44410:44412 Top.Equiv <> com ind
R44427:44430 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44435:44438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44439:44441 Top.Equiv <> com ind
R44431:44434 Top.Imp <> aexp ind
R44425:44426 Top.Maps <> id ind
R44457:44460 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44464:44467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44468:44470 Top.Equiv <> com ind
R44461:44463 Top.Equiv <> com ind
R44454:44456 Top.Equiv <> com ind
R44486:44489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44493:44496 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44500:44503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44504:44506 Top.Equiv <> com ind
R44497:44499 Top.Equiv <> com ind
R44490:44492 Top.Equiv <> com ind
R44482:44485 Top.Imp <> bexp ind
R44525:44528 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44532:44535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44536:44538 Top.Equiv <> com ind
R44529:44531 Top.Equiv <> com ind
R44521:44524 Top.Imp <> bexp ind
R44555:44558 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44559:44561 Top.Equiv <> com ind
R44553:44554 Top.Maps <> id ind
R44619:44623 Top.Equiv Himp CSkip constr
not 44605:44605 Himp ::'SKIP'
R44653:44656 Top.Equiv Himp CAss constr
not 44635:44635 Himp ::x_'::='_x
R44704:44707 Top.Equiv Himp CSeq constr
not 44687:44687 Himp ::x_';;'_x
R44792:44797 Top.Equiv Himp CWhile constr
not 44761:44761 Himp ::'WHILE'_x_'DO'_x_'END'
R44891:44893 Top.Equiv Himp CIf constr
not 44849:44849 Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R44966:44971 Top.Equiv Himp CHavoc constr
not 44950:44950 Himp ::'HAVOC'_x
ind 45400:45404 Himp ceval
constr 45445:45450 Himp E_Skip
constr 45493:45497 Himp E_Ass
constr 45623:45627 Himp E_Seq
constr 45759:45766 Himp E_IfTrue
constr 45923:45931 Himp E_IfFalse
constr 46089:46098 Himp E_WhileEnd
constr 46217:46227 Himp E_WhileLoop
R45411:45414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45420:45423 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45429:45432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45424:45428 Top.Imp <> state def
R45415:45419 Top.Imp <> state def
R45408:45410 Top.Equiv Himp com ind
R46473:46477 Top.Equiv <> ceval var
R45466:45470 Top.Imp <> state def
R45477:45479 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45482:45485 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45473:45476 Top.Equiv Himp ::'SKIP' not
R45480:45481 Top.Equiv <> st var
R45486:45487 Top.Equiv <> st var
R45514:45518 Top.Imp <> state def
R45527:45530 Top.Imp <> aexp ind
R45538:45540 Coq.Init.Datatypes <> nat ind
R45548:45549 Top.Maps <> id ind
R45574:45583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45584:45584 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45593:45596 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45599:45602 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45586:45590 Top.Equiv Himp ::x_'::='_x not
R45585:45585 Top.Equiv <> X var
R45591:45592 Top.Equiv <> a1 var
R45597:45598 Top.Equiv <> st var
R45603:45610 Top.Maps <> t_update def
R45617:45617 Top.Equiv <> n var
R45615:45615 Top.Equiv <> X var
R45612:45613 Top.Equiv <> st var
R45570:45572 Coq.Init.Logic <> :type_scope:x_'='_x not
R45559:45563 Top.Imp <> aeval def
R45568:45569 Top.Equiv <> a1 var
R45565:45566 Top.Equiv <> st var
R45573:45573 Top.Equiv <> n var
R45647:45649 Top.Equiv Himp com ind
R45667:45671 Top.Imp <> state def
R45695:45704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45721:45730 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45731:45731 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45740:45743 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45746:45749 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45734:45737 Top.Equiv Himp ::x_';;'_x not
R45732:45733 Top.Equiv <> c1 var
R45738:45739 Top.Equiv <> c2 var
R45744:45745 Top.Equiv <> st var
R45750:45753 Top.Equiv <> st'' var
R45707:45709 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45713:45716 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45705:45706 Top.Equiv <> c2 var
R45710:45712 Top.Equiv <> st' var
R45717:45720 Top.Equiv <> st'' var
R45683:45685 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45688:45691 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45681:45682 Top.Equiv <> c1 var
R45686:45687 Top.Equiv <> st var
R45692:45694 Top.Equiv <> st' var
R45787:45791 Top.Imp <> state def
R45800:45803 Top.Imp <> bexp ind
R45815:45817 Top.Equiv Himp com ind
R45845:45854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45869:45878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45879:45879 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45905:45908 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45911:45914 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45880:45883 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45886:45891 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45894:45899 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45902:45904 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45884:45885 Top.Equiv <> b1 var
R45892:45893 Top.Equiv <> c1 var
R45900:45901 Top.Equiv <> c2 var
R45909:45910 Top.Equiv <> st var
R45915:45917 Top.Equiv <> st' var
R45857:45859 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45862:45865 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R45855:45856 Top.Equiv <> c1 var
R45860:45861 Top.Equiv <> st var
R45866:45868 Top.Equiv <> st' var
R45838:45840 Coq.Init.Logic <> :type_scope:x_'='_x not
R45827:45831 Top.Imp <> beval def
R45836:45837 Top.Equiv <> b1 var
R45833:45834 Top.Equiv <> st var
R45841:45844 Coq.Init.Datatypes <> true constr
R45952:45956 Top.Imp <> state def
R45965:45968 Top.Imp <> bexp ind
R45980:45982 Top.Equiv Himp com ind
R46011:46020 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46035:46044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46045:46045 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46071:46074 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46077:46080 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46046:46049 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46052:46057 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46060:46065 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46068:46070 Top.Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46050:46051 Top.Equiv <> b1 var
R46058:46059 Top.Equiv <> c1 var
R46066:46067 Top.Equiv <> c2 var
R46075:46076 Top.Equiv <> st var
R46081:46083 Top.Equiv <> st' var
R46023:46025 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46028:46031 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46021:46022 Top.Equiv <> c2 var
R46026:46027 Top.Equiv <> st var
R46032:46034 Top.Equiv <> st' var
R46003:46005 Coq.Init.Logic <> :type_scope:x_'='_x not
R45992:45996 Top.Imp <> beval def
R46001:46002 Top.Equiv <> b1 var
R45998:45999 Top.Equiv <> st var
R46006:46010 Coq.Init.Datatypes <> false constr
R46115:46118 Top.Imp <> bexp ind
R46127:46131 Top.Imp <> state def
R46140:46142 Top.Equiv Himp com ind
R46171:46180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46181:46181 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46200:46203 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46206:46209 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46182:46187 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46190:46193 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46196:46199 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46188:46189 Top.Equiv <> b1 var
R46194:46195 Top.Equiv <> c1 var
R46204:46205 Top.Equiv <> st var
R46210:46211 Top.Equiv <> st var
R46163:46165 Coq.Init.Logic <> :type_scope:x_'='_x not
R46152:46156 Top.Imp <> beval def
R46161:46162 Top.Equiv <> b1 var
R46158:46159 Top.Equiv <> st var
R46166:46170 Coq.Init.Datatypes <> false constr
R46253:46257 Top.Imp <> state def
R46266:46269 Top.Imp <> bexp ind
R46278:46280 Top.Equiv Himp com ind
R46308:46317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46332:46341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46376:46385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46386:46386 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46405:46408 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46411:46414 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46387:46392 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46395:46398 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46401:46404 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46393:46394 Top.Equiv <> b1 var
R46399:46400 Top.Equiv <> c1 var
R46409:46410 Top.Equiv <> st var
R46415:46418 Top.Equiv <> st'' var
R46342:46342 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46361:46364 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46368:46371 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46343:46348 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46351:46354 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46357:46360 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R46349:46350 Top.Equiv <> b1 var
R46355:46356 Top.Equiv <> c1 var
R46365:46367 Top.Equiv <> st' var
R46372:46375 Top.Equiv <> st'' var
R46320:46322 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46325:46328 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46318:46319 Top.Equiv <> c1 var
R46323:46324 Top.Equiv <> st var
R46329:46331 Top.Equiv <> st' var
R46301:46303 Coq.Init.Logic <> :type_scope:x_'='_x not
R46290:46294 Top.Imp <> beval def
R46299:46300 Top.Equiv <> b1 var
R46296:46297 Top.Equiv <> st var
R46304:46307 Coq.Init.Datatypes <> true constr
R46473:46477 Top.Equiv Himp ceval ind
not 46448:46448 Himp ::x_'/'_x_'\\'_x
def 46592:46605 Himp havoc_example1
R46609:46609 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46617:46620 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46632:46635 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46610:46615 Top.Equiv Himp ::'HAVOC'_x not
R46616:46616 Top.Imp <> X def
R46621:46631 Top.Imp <> empty_state def
R46636:46643 Top.Maps <> t_update def
R46657:46657 Top.Imp <> X def
R46645:46655 Top.Imp <> empty_state def
def 46707:46720 Himp havoc_example2
R46726:46726 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46741:46744 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46756:46759 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46731:46733 Top.Equiv Himp ::x_';;'_x not
R46727:46730 Top.Equiv Himp ::'SKIP' not
R46734:46739 Top.Equiv Himp ::'HAVOC'_x not
R46740:46740 Top.Imp <> Z def
R46745:46755 Top.Imp <> empty_state def
R46760:46767 Top.Maps <> t_update def
R46781:46781 Top.Imp <> Z def
R46769:46779 Top.Imp <> empty_state def
def 46922:46927 Himp cequiv
R46938:46940 Top.Equiv Himp com ind
R46969:46973 Top.Imp <> state def
R46992:46996 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46980:46982 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46985:46988 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46978:46979 Top.Equiv <> c1 var
R46983:46984 Top.Equiv <> st var
R46989:46991 Top.Equiv <> st' var
R46999:47001 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R47004:47007 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R46997:46998 Top.Equiv <> c2 var
R47002:47003 Top.Equiv <> st var
R47008:47010 Top.Equiv <> st' var
def 47227:47229 Himp pXY
R47243:47245 Top.Equiv Himp ::x_';;'_x not
R47236:47241 Top.Equiv Himp ::'HAVOC'_x not
R47242:47242 Top.Imp <> X def
R47246:47251 Top.Equiv Himp ::'HAVOC'_x not
R47252:47252 Top.Imp <> Y def
def 47267:47269 Himp pYX
R47283:47285 Top.Equiv Himp ::x_';;'_x not
R47276:47281 Top.Equiv Himp ::'HAVOC'_x not
R47282:47282 Top.Imp <> Y def
R47286:47291 Top.Equiv Himp ::'HAVOC'_x not
R47292:47292 Top.Imp <> X def
prf 47400:47413 Himp pXY_cequiv_pYX
R47433:47436 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47419:47424 Top.Equiv Himp cequiv def
R47430:47432 Top.Equiv Himp pYX def
R47426:47428 Top.Equiv Himp pXY def
R47437:47437 Coq.Init.Logic <> :type_scope:'~'_x not
R47438:47443 Top.Equiv Himp cequiv def
R47449:47451 Top.Equiv Himp pYX def
R47445:47447 Top.Equiv Himp pXY def
def 47617:47622 Himp ptwice
R47636:47638 Top.Equiv Himp ::x_';;'_x not
R47629:47634 Top.Equiv Himp ::'HAVOC'_x not
R47635:47635 Top.Imp <> X def
R47639:47644 Top.Equiv Himp ::'HAVOC'_x not
R47645:47645 Top.Imp <> Y def
def 47660:47664 Himp pcopy
R47678:47680 Top.Equiv Himp ::x_';;'_x not
R47671:47676 Top.Equiv Himp ::'HAVOC'_x not
R47677:47677 Top.Imp <> X def
R47682:47686 Top.Equiv Himp ::x_'::='_x not
R47681:47681 Top.Imp <> Y def
R47687:47689 Top.Imp <> AId constr
R47691:47691 Top.Imp <> X def
prf 47862:47880 Himp ptwice_cequiv_pcopy
R47905:47908 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47886:47891 Top.Equiv Himp cequiv def
R47900:47904 Top.Equiv Himp pcopy def
R47893:47898 Top.Equiv Himp ptwice def
R47909:47909 Coq.Init.Logic <> :type_scope:'~'_x not
R47910:47915 Top.Equiv Himp cequiv def
R47924:47928 Top.Equiv Himp pcopy def
R47917:47922 Top.Equiv Himp ptwice def
def 48631:48632 Himp p1
R48636:48638 Top.Equiv Himp com ind
R48645:48651 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48679:48687 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48730:48735 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48652:48655 Top.Imp <> BNot constr
R48658:48660 Top.Imp <> BEq constr
R48671:48674 Top.Imp <> ANum constr
R48663:48665 Top.Imp <> AId constr
R48667:48667 Top.Imp <> X def
R48695:48701 Top.Equiv Himp ::x_';;'_x not
R48688:48693 Top.Equiv Himp ::'HAVOC'_x not
R48694:48694 Top.Imp <> Y def
R48703:48707 Top.Equiv Himp ::x_'::='_x not
R48702:48702 Top.Imp <> X def
R48708:48712 Top.Imp <> APlus constr
R48723:48726 Top.Imp <> ANum constr
R48715:48717 Top.Imp <> AId constr
R48719:48719 Top.Imp <> X def
def 48750:48751 Himp p2
R48755:48757 Top.Equiv Himp com ind
R48764:48770 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48798:48806 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48811:48816 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48771:48774 Top.Imp <> BNot constr
R48777:48779 Top.Imp <> BEq constr
R48790:48793 Top.Imp <> ANum constr
R48782:48784 Top.Imp <> AId constr
R48786:48786 Top.Imp <> X def
R48807:48810 Top.Equiv Himp ::'SKIP' not
prf 49078:49091 Himp p1_may_diverge
R49119:49124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49125:49126 Coq.Init.Logic <> :type_scope:'~'_x not
R49129:49131 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R49134:49137 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R49127:49128 Top.Equiv Himp p1 def
R49132:49133 Top.Equiv <> st var
R49138:49140 Top.Equiv <> st' var
R49114:49117 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R49110:49111 Top.Equiv <> st var
R49113:49113 Top.Imp <> X def
prf 49186:49199 Himp p2_may_diverge
R49227:49232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49233:49234 Coq.Init.Logic <> :type_scope:'~'_x not
R49237:49239 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R49242:49245 Top.Equiv Himp ::x_'/'_x_'\\'_x not
R49235:49236 Top.Equiv Himp p2 def
R49240:49241 Top.Equiv <> st var
R49246:49248 Top.Equiv <> st' var
R49222:49225 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R49218:49219 Top.Equiv <> st var
R49221:49221 Top.Imp <> X def
prf 49447:49457 Himp p1_p2_equiv
R49461:49466 Top.Equiv Himp cequiv def
R49471:49472 Top.Equiv Himp p2 def
R49468:49469 Top.Equiv Himp p1 def
def 49744:49745 Himp p3
R49749:49751 Top.Equiv Himp com ind
R49770:49774 Top.Equiv Himp ::x_';;'_x not
R49759:49763 Top.Equiv Himp ::x_'::='_x not
R49758:49758 Top.Imp <> Z def
R49764:49767 Top.Imp <> ANum constr
R49775:49781 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49809:49817 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49839:49844 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49782:49785 Top.Imp <> BNot constr
R49788:49790 Top.Imp <> BEq constr
R49801:49804 Top.Imp <> ANum constr
R49793:49795 Top.Imp <> AId constr
R49797:49797 Top.Imp <> X def
R49825:49831 Top.Equiv Himp ::x_';;'_x not
R49818:49823 Top.Equiv Himp ::'HAVOC'_x not
R49824:49824 Top.Imp <> X def
R49832:49837 Top.Equiv Himp ::'HAVOC'_x not
R49838:49838 Top.Imp <> Z def
def 49859:49860 Himp p4
R49864:49866 Top.Equiv Himp com ind
R49887:49891 Top.Equiv Himp ::x_';;'_x not
R49874:49879 Top.Equiv Himp ::x_'::='_x not
R49886:49886 Top.Equiv Himp ::x_'::='_x not
R49873:49873 Top.Imp <> X def
R49880:49883 Top.Imp <> ANum constr
R49893:49898 Top.Equiv Himp ::x_'::='_x not
R49905:49905 Top.Equiv Himp ::x_'::='_x not
R49892:49892 Top.Imp <> Z def
R49899:49902 Top.Imp <> ANum constr
prf 49918:49930 Himp p3_p4_inequiv
R49934:49935 Coq.Init.Logic <> :type_scope:'~'_x not
R49936:49941 Top.Equiv Himp cequiv def
R49946:49947 Top.Equiv Himp p4 def
R49943:49944 Top.Equiv Himp p3 def
def 50555:50556 Himp p5
R50560:50562 Top.Equiv Himp com ind
R50569:50575 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R50603:50611 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R50619:50624 Top.Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R50576:50579 Top.Imp <> BNot constr
R50582:50584 Top.Imp <> BEq constr
R50595:50598 Top.Imp <> ANum constr
R50587:50589 Top.Imp <> AId constr
R50591:50591 Top.Imp <> X def
R50612:50617 Top.Equiv Himp ::'HAVOC'_x not
R50618:50618 Top.Imp <> X def
def 50639:50640 Himp p6
R50644:50646 Top.Equiv Himp com ind
R50654:50658 Top.Equiv Himp ::x_'::='_x not
R50653:50653 Top.Imp <> X def
R50659:50662 Top.Imp <> ANum constr
prf 50677:50687 Himp p5_p6_equiv
R50691:50696 Top.Equiv Himp cequiv def
R50701:50702 Top.Equiv Himp p6 def
R50698:50699 Top.Equiv Himp p5 def
R50756:50759 Top.Equiv Himp <> mod
prf 51452:51482 <> swap_noninterfering_assignments
R51515:51520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51547:51552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51579:51584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51585:51590 Top.Equiv <> cequiv def
R51634:51636 Top.Imp <> ::x_';;'_x not
R51627:51631 Top.Imp <> ::x_'::='_x not
R51625:51626 Top.Equiv <> l2 var
R51632:51633 Top.Equiv <> a2 var
R51639:51643 Top.Imp <> ::x_'::='_x not
R51637:51638 Top.Equiv <> l1 var
R51644:51645 Top.Equiv <> a1 var
R51606:51608 Top.Imp <> ::x_';;'_x not
R51599:51603 Top.Imp <> ::x_'::='_x not
R51597:51598 Top.Equiv <> l1 var
R51604:51605 Top.Equiv <> a1 var
R51611:51615 Top.Imp <> ::x_'::='_x not
R51609:51610 Top.Equiv <> l2 var
R51616:51617 Top.Equiv <> a2 var
R51553:51572 Top.Equiv <> var_not_used_in_aexp ind
R51577:51578 Top.Equiv <> a1 var
R51574:51575 Top.Equiv <> l2 var
R51521:51540 Top.Equiv <> var_not_used_in_aexp ind
R51545:51546 Top.Equiv <> a2 var
R51542:51543 Top.Equiv <> l1 var
R51509:51512 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R51507:51508 Top.Equiv <> l1 var
R51513:51514 Top.Equiv <> l2 var
def 52133:52139 <> capprox
R52150:52152 Top.Imp <> com ind
R52182:52186 Top.Imp <> state def
R52206:52209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52212:52214 Top.Imp <> ::x_'/'_x_'\\'_x not
R52217:52220 Top.Imp <> ::x_'/'_x_'\\'_x not
R52210:52211 Top.Equiv <> c2 var
R52215:52216 Top.Equiv <> st var
R52221:52223 Top.Equiv <> st' var
R52194:52196 Top.Imp <> ::x_'/'_x_'\\'_x not
R52199:52202 Top.Imp <> ::x_'/'_x_'\\'_x not
R52192:52193 Top.Equiv <> c1 var
R52197:52198 Top.Equiv <> st var
R52203:52205 Top.Equiv <> st' var
def 52620:52621 <> c3
R52625:52627 Top.Imp <> com ind
def 52705:52706 <> c4
R52710:52712 Top.Imp <> com ind
prf 52788:52802 <> c3_c4_different
R52821:52824 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R52806:52807 Coq.Init.Logic <> :type_scope:'~'_x not
R52808:52814 Top.Equiv <> capprox def
R52819:52820 Top.Equiv <> c4 prfax
R52816:52817 Top.Equiv <> c3 prfax
R52825:52826 Coq.Init.Logic <> :type_scope:'~'_x not
R52827:52833 Top.Equiv <> capprox def
R52838:52839 Top.Equiv <> c3 prfax
R52835:52836 Top.Equiv <> c4 prfax
def 52959:52962 <> cmin
R52966:52968 Top.Imp <> com ind
prf 53046:53057 <> cmin_minimal
R53071:53077 Top.Equiv <> capprox def
R53084:53084 Top.Equiv <> c var
R53079:53082 Top.Equiv <> cmin prfax
def 53261:53265 <> zprop
R53272:53274 Top.Imp <> com ind
prf 53360:53375 <> zprop_preserving
R53401:53404 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53417:53420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53421:53425 Top.Equiv <> zprop prfax
R53427:53428 Top.Equiv <> c' var
R53405:53411 Top.Equiv <> capprox def
R53415:53416 Top.Equiv <> c' var
R53413:53413 Top.Equiv <> c var
R53394:53398 Top.Equiv <> zprop prfax
R53400:53400 Top.Equiv <> c var
