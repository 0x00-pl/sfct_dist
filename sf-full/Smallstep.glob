DIGEST 65a2f0fca8c30c9e475296e757d0e3e9
FTop.Smallstep
R69:83 Coq.Arith.Arith <> <> lib
R101:115 Coq.Arith.EqNat <> <> lib
R133:147 Coq.omega.Omega <> <> lib
R165:178 Coq.Lists.List <> <> lib
R218:221 Top.Maps <> <> lib
R239:241 Top.Imp <> <> lib
ind 4166:4167 <> tm
constr 4183:4183 <> C
constr 4224:4224 <> P
R4190:4193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4194:4195 Top.Smallstep <> tm ind
R4187:4189 Coq.Init.Datatypes <> nat ind
R4230:4233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4236:4239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4240:4241 Top.Smallstep <> tm ind
R4234:4235 Top.Smallstep <> tm ind
R4228:4229 Top.Smallstep <> tm ind
def 4397:4401 <> evalF
R4408:4409 Top.Smallstep <> tm ind
R4414:4416 Coq.Init.Datatypes <> nat ind
R4429:4429 Top.Smallstep <> t var
R4440:4440 Top.Smallstep <> C constr
R4453:4453 Top.Smallstep <> P constr
R4472:4474 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4464:4468 Top.Smallstep <> evalF def
R4475:4479 Top.Smallstep <> evalF def
ind 5100:5103 <> eval
constr 5132:5138 <> E_Const
constr 5171:5176 <> E_Plus
R5109:5112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5116:5119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5113:5115 Coq.Init.Datatypes <> nat ind
R5107:5108 Top.Smallstep <> tm ind
R5289:5292 Top.Smallstep <> eval var
R5161:5164 Top.Smallstep <> ::x_'\\'_x not
R5158:5158 Top.Smallstep <> C constr
R5160:5160 Top.Smallstep <> n var
R5165:5165 Top.Smallstep <> n var
R5214:5223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5232:5241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5249:5253 Top.Smallstep <> ::x_'\\'_x not
R5261:5261 Top.Smallstep <> ::x_'\\'_x not
R5242:5242 Top.Smallstep <> P constr
R5247:5248 Top.Smallstep <> t2 var
R5244:5245 Top.Smallstep <> t1 var
R5256:5258 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5254:5255 Top.Smallstep <> n1 var
R5259:5260 Top.Smallstep <> n2 var
R5226:5229 Top.Smallstep <> ::x_'\\'_x not
R5224:5225 Top.Smallstep <> t2 var
R5230:5231 Top.Smallstep <> n2 var
R5208:5211 Top.Smallstep <> ::x_'\\'_x not
R5206:5207 Top.Smallstep <> t1 var
R5212:5213 Top.Smallstep <> n1 var
R5289:5292 Top.Smallstep <> eval ind
not 5272:5272 <> ::x_'\\'_x
mod 5308:5319 <> SimpleArith1
ind 5937:5940 SimpleArith1 step
constr 5968:5984 SimpleArith1 ST_PlusConstConst
constr 6044:6051 SimpleArith1 ST_Plus1
constr 6124:6131 SimpleArith1 ST_Plus2
R5946:5949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5952:5955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5950:5951 Top.Smallstep <> tm ind
R5944:5945 Top.Smallstep <> tm ind
R6236:6239 Top.Smallstep <> step var
R6023:6027 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6008:6008 Top.Smallstep <> P constr
R6018:6018 Top.Smallstep <> C constr
R6020:6021 Top.Smallstep <> n2 var
R6011:6011 Top.Smallstep <> C constr
R6013:6014 Top.Smallstep <> n1 var
R6028:6028 Top.Smallstep <> C constr
R6033:6035 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6031:6032 Top.Smallstep <> n1 var
R6036:6037 Top.Smallstep <> n2 var
R6089:6098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6106:6110 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6099:6099 Top.Smallstep <> P constr
R6104:6105 Top.Smallstep <> t2 var
R6101:6102 Top.Smallstep <> t1 var
R6111:6111 Top.Smallstep <> P constr
R6117:6118 Top.Smallstep <> t2 var
R6113:6115 Top.Smallstep <> t1' var
R6081:6085 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6079:6080 Top.Smallstep <> t1 var
R6086:6088 Top.Smallstep <> t1' var
R6169:6178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6190:6194 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6179:6179 Top.Smallstep <> P constr
R6188:6189 Top.Smallstep <> t2 var
R6182:6182 Top.Smallstep <> C constr
R6184:6185 Top.Smallstep <> n1 var
R6195:6195 Top.Smallstep <> P constr
R6204:6206 Top.Smallstep <> t2' var
R6198:6198 Top.Smallstep <> C constr
R6200:6201 Top.Smallstep <> n1 var
R6161:6165 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6159:6160 Top.Smallstep <> t2 var
R6166:6168 Top.Smallstep <> t2' var
R6236:6239 Top.Smallstep SimpleArith1 step ind
not 6217:6217 SimpleArith1 ::x_'==>'_x
def 6874:6884 SimpleArith1 test_step_1
R6943:6959 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R6894:6894 Top.Smallstep <> P constr
R6929:6929 Top.Smallstep <> P constr
R6938:6938 Top.Smallstep <> C constr
R6932:6932 Top.Smallstep <> C constr
R6905:6905 Top.Smallstep <> P constr
R6914:6914 Top.Smallstep <> C constr
R6908:6908 Top.Smallstep <> C constr
R6960:6960 Top.Smallstep <> P constr
R6991:6991 Top.Smallstep <> P constr
R7000:7000 Top.Smallstep <> C constr
R6994:6994 Top.Smallstep <> C constr
R6971:6971 Top.Smallstep <> C constr
R6975:6977 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7022:7029 Top.Smallstep SimpleArith1 ST_Plus1 constr
R7022:7029 Top.Smallstep SimpleArith1 ST_Plus1 constr
R7038:7054 Top.Smallstep SimpleArith1 ST_PlusConstConst constr
R7038:7054 Top.Smallstep SimpleArith1 ST_PlusConstConst constr
def 7295:7305 SimpleArith1 test_step_2
R7384:7400 Top.Smallstep SimpleArith1 ::x_'==>'_x not
R7315:7315 Top.Smallstep <> P constr
R7340:7340 Top.Smallstep <> P constr
R7369:7369 Top.Smallstep <> P constr
R7378:7378 Top.Smallstep <> C constr
R7372:7372 Top.Smallstep <> C constr
R7353:7353 Top.Smallstep <> C constr
R7326:7326 Top.Smallstep <> C constr
R7401:7401 Top.Smallstep <> P constr
R7426:7426 Top.Smallstep <> P constr
R7455:7455 Top.Smallstep <> C constr
R7459:7461 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7439:7439 Top.Smallstep <> C constr
R7412:7412 Top.Smallstep <> C constr
R7521:7532 Top.Smallstep SimpleArith1 <> mod
def 8138:8145 <> relation
R8161:8162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8164:8165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8163:8163 Top.Smallstep <> X var
R8160:8160 Top.Smallstep <> X var
def 9921:9933 <> deterministic
R9949:9956 Top.Smallstep <> relation def
R9958:9958 Top.Smallstep <> X var
R9983:9983 Top.Smallstep <> X var
R9992:9995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10002:10005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10008:10010 Coq.Init.Logic <> :type_scope:x_'='_x not
R10006:10007 Top.Smallstep <> y1 var
R10011:10012 Top.Smallstep <> y2 var
R9996:9996 Top.Smallstep <> R var
R10000:10001 Top.Smallstep <> y2 var
R9998:9998 Top.Smallstep <> x var
R9986:9986 Top.Smallstep <> R var
R9990:9991 Top.Smallstep <> y1 var
R9988:9988 Top.Smallstep <> x var
mod 10023:10034 <> SimpleArith2
prf 10067:10084 SimpleArith2 step_deterministic
R10089:10101 Top.Smallstep <> deterministic def
R10103:10106 Top.Smallstep SimpleArith1 step ind
R10125:10137 Top.Smallstep <> deterministic def
R10908:10919 Top.Smallstep SimpleArith2 <> mod
R11611:11611 Coq.Init.Datatypes <> S constr
R11614:11614 Coq.Init.Datatypes <> S constr
R11611:11611 Coq.Init.Datatypes <> S constr
R11614:11614 Coq.Init.Datatypes <> S constr
R11651:11651 Coq.Init.Datatypes <> S constr
mod 12574:12585 <> SimpleArith3
prf 12618:12639 SimpleArith3 step_deterministic_alt
R12642:12654 Top.Smallstep <> deterministic def
R12656:12659 Top.Smallstep SimpleArith1 step ind
R12986:12997 Top.Smallstep SimpleArith3 <> mod
ind 14150:14154 <> value
constr 14176:14182 <> v_const
R14160:14163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14158:14159 Top.Smallstep <> tm ind
R14196:14200 Top.Smallstep <> value ind
R14203:14203 Top.Smallstep <> C constr
R14205:14205 Top.Smallstep <> n var
ind 15422:15425 <> step
constr 15453:15469 <> ST_PlusConstConst
constr 15539:15546 <> ST_Plus1
constr 15623:15630 <> ST_Plus2
R15431:15434 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15437:15440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15435:15436 Top.Smallstep <> tm ind
R15429:15430 Top.Smallstep <> tm ind
R15789:15792 Top.Smallstep <> step var
R15512:15522 Top.Smallstep <> ::x_'==>'_x not
R15497:15497 Top.Smallstep <> P constr
R15507:15507 Top.Smallstep <> C constr
R15509:15510 Top.Smallstep <> n2 var
R15500:15500 Top.Smallstep <> C constr
R15502:15503 Top.Smallstep <> n1 var
R15523:15523 Top.Smallstep <> C constr
R15528:15530 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15526:15527 Top.Smallstep <> n1 var
R15531:15532 Top.Smallstep <> n2 var
R15586:15597 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15605:15609 Top.Smallstep <> ::x_'==>'_x not
R15598:15598 Top.Smallstep <> P constr
R15603:15604 Top.Smallstep <> t2 var
R15600:15601 Top.Smallstep <> t1 var
R15610:15610 Top.Smallstep <> P constr
R15616:15617 Top.Smallstep <> t2 var
R15612:15614 Top.Smallstep <> t1' var
R15578:15582 Top.Smallstep <> ::x_'==>'_x not
R15576:15577 Top.Smallstep <> t1 var
R15583:15585 Top.Smallstep <> t1' var
R15668:15717 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15728:15739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15747:15751 Top.Smallstep <> ::x_'==>'_x not
R15740:15740 Top.Smallstep <> P constr
R15745:15746 Top.Smallstep <> t2 var
R15742:15743 Top.Smallstep <> v1 var
R15752:15752 Top.Smallstep <> P constr
R15757:15759 Top.Smallstep <> t2' var
R15754:15755 Top.Smallstep <> v1 var
R15720:15724 Top.Smallstep <> ::x_'==>'_x not
R15718:15719 Top.Smallstep <> t2 var
R15725:15727 Top.Smallstep <> t2' var
R15660:15664 Top.Smallstep <> value ind
R15666:15667 Top.Smallstep <> v1 var
R15789:15792 Top.Smallstep <> step ind
not 15770:15770 <> ::x_'==>'_x
prf 17067:17084 <> step_deterministic
R17090:17102 Top.Smallstep <> deterministic def
R17104:17107 Top.Smallstep <> step ind
prf 18423:18437 <> strong_progress
R18460:18464 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18484:18484 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18453:18457 Top.Smallstep <> value ind
R18459:18459 Top.Smallstep <> t var
R18465:18471 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18474:18475 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18477:18481 Top.Smallstep <> ::x_'==>'_x not
R18476:18476 Top.Smallstep <> t var
R18482:18483 Top.Smallstep <> t' var
R18535:18541 Top.Smallstep <> v_const constr
R18535:18541 Top.Smallstep <> v_const constr
R18676:18676 Top.Smallstep <> C constr
R18680:18682 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18676:18676 Top.Smallstep <> C constr
R18680:18682 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18705:18721 Top.Smallstep <> ST_PlusConstConst constr
R18705:18721 Top.Smallstep <> ST_PlusConstConst constr
R18785:18785 Top.Smallstep <> P constr
R18785:18785 Top.Smallstep <> P constr
R18811:18818 Top.Smallstep <> ST_Plus2 constr
R18811:18818 Top.Smallstep <> ST_Plus2 constr
R18898:18898 Top.Smallstep <> P constr
R18898:18898 Top.Smallstep <> P constr
R18924:18931 Top.Smallstep <> ST_Plus1 constr
R18924:18931 Top.Smallstep <> ST_Plus1 constr
def 19607:19617 <> normal_form
R19631:19638 Top.Smallstep <> relation def
R19640:19640 Top.Smallstep <> X var
R19646:19646 Top.Smallstep <> X var
R19661:19662 Coq.Init.Logic <> :type_scope:'~'_x not
R19663:19669 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19672:19673 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19674:19674 Top.Smallstep <> R var
R19678:19679 Top.Smallstep <> t' var
R19676:19676 Top.Smallstep <> t var
prf 20229:20239 <> value_is_nf
R20262:20265 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20266:20276 Top.Smallstep <> normal_form def
R20283:20283 Top.Smallstep <> v var
R20278:20281 Top.Smallstep <> step ind
R20255:20259 Top.Smallstep <> value ind
R20261:20261 Top.Smallstep <> v var
R20302:20312 Top.Smallstep <> normal_form def
prf 20401:20411 <> nf_is_value
R20445:20448 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20449:20453 Top.Smallstep <> value ind
R20455:20455 Top.Smallstep <> t var
R20427:20437 Top.Smallstep <> normal_form def
R20444:20444 Top.Smallstep <> t var
R20439:20442 Top.Smallstep <> step ind
R20516:20526 Top.Smallstep <> normal_form def
R20562:20565 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20555:20559 Top.Smallstep <> value ind
R20566:20572 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20575:20576 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20578:20582 Top.Smallstep <> ::x_'==>'_x not
R20583:20584 Top.Smallstep <> t' var
R20562:20565 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20555:20559 Top.Smallstep <> value ind
R20566:20572 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20575:20576 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20578:20582 Top.Smallstep <> ::x_'==>'_x not
R20583:20584 Top.Smallstep <> t' var
R20600:20614 Top.Smallstep <> strong_progress thm
R20600:20614 Top.Smallstep <> strong_progress thm
prf 20719:20734 <> nf_same_as_value
R20768:20772 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R20750:20760 Top.Smallstep <> normal_form def
R20767:20767 Top.Smallstep <> t var
R20762:20765 Top.Smallstep <> step ind
R20773:20777 Top.Smallstep <> value ind
R20779:20779 Top.Smallstep <> t var
R20804:20814 Top.Smallstep <> nf_is_value thm
R20804:20814 Top.Smallstep <> nf_is_value thm
R20823:20833 Top.Smallstep <> value_is_nf thm
R20823:20833 Top.Smallstep <> value_is_nf thm
mod 21562:21566 <> Temp1
ind 21580:21584 Temp1 value
constr 21604:21610 Temp1 v_const
constr 21638:21644 Temp1 v_funny
R21590:21593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21588:21589 Top.Smallstep <> tm ind
R21624:21628 Top.Smallstep <> value ind
R21631:21631 Top.Smallstep <> C constr
R21633:21633 Top.Smallstep <> n var
R21710:21714 Top.Smallstep <> value ind
R21717:21717 Top.Smallstep <> P constr
R21723:21723 Top.Smallstep <> C constr
R21725:21726 Top.Smallstep <> n2 var
R21719:21720 Top.Smallstep <> t1 var
ind 21791:21794 Temp1 step
constr 21822:21838 Temp1 ST_PlusConstConst
constr 21898:21905 Temp1 ST_Plus1
constr 21978:21985 Temp1 ST_Plus2
R21800:21803 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21806:21809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21804:21805 Top.Smallstep <> tm ind
R21798:21799 Top.Smallstep <> tm ind
R22100:22103 Top.Smallstep <> step var
R21877:21881 Top.Smallstep Temp1 ::x_'==>'_x not
R21862:21862 Top.Smallstep <> P constr
R21872:21872 Top.Smallstep <> C constr
R21874:21875 Top.Smallstep <> n2 var
R21865:21865 Top.Smallstep <> C constr
R21867:21868 Top.Smallstep <> n1 var
R21882:21882 Top.Smallstep <> C constr
R21887:21889 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21885:21886 Top.Smallstep <> n1 var
R21890:21891 Top.Smallstep <> n2 var
R21943:21952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21960:21964 Top.Smallstep Temp1 ::x_'==>'_x not
R21953:21953 Top.Smallstep <> P constr
R21958:21959 Top.Smallstep <> t2 var
R21955:21956 Top.Smallstep <> t1 var
R21965:21965 Top.Smallstep <> P constr
R21971:21972 Top.Smallstep <> t2 var
R21967:21969 Top.Smallstep <> t1' var
R21935:21939 Top.Smallstep Temp1 ::x_'==>'_x not
R21933:21934 Top.Smallstep <> t1 var
R21940:21942 Top.Smallstep <> t1' var
R22021:22030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22041:22050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22058:22062 Top.Smallstep Temp1 ::x_'==>'_x not
R22051:22051 Top.Smallstep <> P constr
R22056:22057 Top.Smallstep <> t2 var
R22053:22054 Top.Smallstep <> v1 var
R22063:22063 Top.Smallstep <> P constr
R22068:22070 Top.Smallstep <> t2' var
R22065:22066 Top.Smallstep <> v1 var
R22033:22037 Top.Smallstep Temp1 ::x_'==>'_x not
R22031:22032 Top.Smallstep <> t2 var
R22038:22040 Top.Smallstep <> t2' var
R22013:22017 Top.Smallstep Temp1 value ind
R22019:22020 Top.Smallstep <> v1 var
R22100:22103 Top.Smallstep Temp1 step ind
not 22081:22081 Temp1 ::x_'==>'_x
prf 22119:22147 Temp1 value_not_same_as_normal_form
R22153:22159 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22161:22162 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22170:22173 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22163:22167 Top.Smallstep Temp1 value ind
R22169:22169 Top.Smallstep <> v var
R22174:22175 Coq.Init.Logic <> :type_scope:'~'_x not
R22176:22186 Top.Smallstep <> normal_form def
R22193:22193 Top.Smallstep <> v var
R22188:22191 Top.Smallstep Temp1 step ind
R22238:22242 Top.Smallstep Temp1 <> mod
mod 22469:22473 <> Temp2
ind 22487:22491 Temp2 value
constr 22511:22517 Temp2 v_const
R22497:22500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22495:22496 Top.Smallstep <> tm ind
R22531:22535 Top.Smallstep <> value ind
R22538:22538 Top.Smallstep <> C constr
R22540:22540 Top.Smallstep <> n var
ind 22604:22607 Temp2 step
constr 22635:22642 Temp2 ST_Funny
constr 22724:22740 Temp2 ST_PlusConstConst
constr 22800:22807 Temp2 ST_Plus1
constr 22880:22887 Temp2 ST_Plus2
R22613:22616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22619:22622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22617:22618 Top.Smallstep <> tm ind
R22611:22612 Top.Smallstep <> tm ind
R23002:23005 Top.Smallstep <> step var
R22701:22705 Top.Smallstep Temp2 ::x_'==>'_x not
R22698:22698 Top.Smallstep <> C constr
R22700:22700 Top.Smallstep <> n var
R22706:22706 Top.Smallstep <> P constr
R22715:22715 Top.Smallstep <> C constr
R22709:22709 Top.Smallstep <> C constr
R22711:22711 Top.Smallstep <> n var
R22779:22783 Top.Smallstep Temp2 ::x_'==>'_x not
R22764:22764 Top.Smallstep <> P constr
R22774:22774 Top.Smallstep <> C constr
R22776:22777 Top.Smallstep <> n2 var
R22767:22767 Top.Smallstep <> C constr
R22769:22770 Top.Smallstep <> n1 var
R22784:22784 Top.Smallstep <> C constr
R22789:22791 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22787:22788 Top.Smallstep <> n1 var
R22792:22793 Top.Smallstep <> n2 var
R22845:22854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22862:22866 Top.Smallstep Temp2 ::x_'==>'_x not
R22855:22855 Top.Smallstep <> P constr
R22860:22861 Top.Smallstep <> t2 var
R22857:22858 Top.Smallstep <> t1 var
R22867:22867 Top.Smallstep <> P constr
R22873:22874 Top.Smallstep <> t2 var
R22869:22871 Top.Smallstep <> t1' var
R22837:22841 Top.Smallstep Temp2 ::x_'==>'_x not
R22835:22836 Top.Smallstep <> t1 var
R22842:22844 Top.Smallstep <> t1' var
R22923:22932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22943:22952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22960:22964 Top.Smallstep Temp2 ::x_'==>'_x not
R22953:22953 Top.Smallstep <> P constr
R22958:22959 Top.Smallstep <> t2 var
R22955:22956 Top.Smallstep <> v1 var
R22965:22965 Top.Smallstep <> P constr
R22970:22972 Top.Smallstep <> t2' var
R22967:22968 Top.Smallstep <> v1 var
R22935:22939 Top.Smallstep Temp2 ::x_'==>'_x not
R22933:22934 Top.Smallstep <> t2 var
R22940:22942 Top.Smallstep <> t2' var
R22915:22919 Top.Smallstep Temp2 value ind
R22921:22922 Top.Smallstep <> v1 var
R23002:23005 Top.Smallstep Temp2 step ind
not 22983:22983 Temp2 ::x_'==>'_x
prf 23021:23049 Temp2 value_not_same_as_normal_form
R23055:23061 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23063:23064 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23072:23075 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23065:23069 Top.Smallstep Temp2 value ind
R23071:23071 Top.Smallstep <> v var
R23076:23077 Coq.Init.Logic <> :type_scope:'~'_x not
R23078:23088 Top.Smallstep <> normal_form def
R23095:23095 Top.Smallstep <> v var
R23090:23093 Top.Smallstep Temp2 step ind
R23141:23145 Top.Smallstep Temp2 <> mod
mod 23634:23638 <> Temp3
ind 23652:23656 Temp3 value
constr 23678:23684 Temp3 v_const
R23662:23665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23660:23661 Top.Smallstep <> tm ind
R23698:23702 Top.Smallstep <> value ind
R23705:23705 Top.Smallstep <> C constr
R23707:23707 Top.Smallstep <> n var
ind 23771:23774 Temp3 step
constr 23802:23818 Temp3 ST_PlusConstConst
constr 23878:23885 Temp3 ST_Plus1
R23780:23783 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23786:23789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23784:23785 Top.Smallstep <> tm ind
R23778:23779 Top.Smallstep <> tm ind
R23982:23985 Top.Smallstep <> step var
R23857:23861 Top.Smallstep Temp3 ::x_'==>'_x not
R23842:23842 Top.Smallstep <> P constr
R23852:23852 Top.Smallstep <> C constr
R23854:23855 Top.Smallstep <> n2 var
R23845:23845 Top.Smallstep <> C constr
R23847:23848 Top.Smallstep <> n1 var
R23862:23862 Top.Smallstep <> C constr
R23867:23869 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23865:23866 Top.Smallstep <> n1 var
R23870:23871 Top.Smallstep <> n2 var
R23923:23932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23940:23944 Top.Smallstep Temp3 ::x_'==>'_x not
R23933:23933 Top.Smallstep <> P constr
R23938:23939 Top.Smallstep <> t2 var
R23935:23936 Top.Smallstep <> t1 var
R23945:23945 Top.Smallstep <> P constr
R23951:23952 Top.Smallstep <> t2 var
R23947:23949 Top.Smallstep <> t1' var
R23915:23919 Top.Smallstep Temp3 ::x_'==>'_x not
R23913:23914 Top.Smallstep <> t1 var
R23920:23922 Top.Smallstep <> t1' var
R23982:23985 Top.Smallstep Temp3 step ind
not 23963:23963 Temp3 ::x_'==>'_x
prf 24044:24072 Temp3 value_not_same_as_normal_form
R24078:24084 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24086:24087 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24097:24100 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24088:24089 Coq.Init.Logic <> :type_scope:'~'_x not
R24090:24094 Top.Smallstep Temp3 value ind
R24096:24096 Top.Smallstep <> t var
R24101:24111 Top.Smallstep <> normal_form def
R24118:24118 Top.Smallstep <> t var
R24113:24116 Top.Smallstep Temp3 step ind
R24164:24168 Top.Smallstep Temp3 <> mod
mod 24296:24300 <> Temp4
ind 24505:24506 Temp4 tm
constr 24522:24526 Temp4 ttrue
constr 24537:24542 Temp4 tfalse
constr 24553:24555 Temp4 tif
R24530:24531 Top.Smallstep <> tm ind
R24546:24547 Top.Smallstep <> tm ind
R24561:24564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24567:24570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24573:24576 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24577:24578 Top.Smallstep <> tm ind
R24571:24572 Top.Smallstep <> tm ind
R24565:24566 Top.Smallstep <> tm ind
R24559:24560 Top.Smallstep <> tm ind
ind 24592:24596 Temp4 value
constr 24618:24623 Temp4 v_true
constr 24643:24649 Temp4 v_false
R24602:24605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24600:24601 Top.Smallstep Temp4 tm ind
R24627:24631 Top.Smallstep <> value ind
R24633:24637 Top.Smallstep Temp4 ttrue constr
R24653:24657 Top.Smallstep <> value ind
R24659:24664 Top.Smallstep Temp4 tfalse constr
ind 24727:24730 Temp4 step
constr 24758:24766 Temp4 ST_IfTrue
constr 24817:24826 Temp4 ST_IfFalse
constr 24878:24882 Temp4 ST_If
R24736:24739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24742:24745 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24740:24741 Top.Smallstep Temp4 tm ind
R24734:24735 Top.Smallstep Temp4 tm ind
R24992:24995 Top.Smallstep <> step var
R24805:24809 Top.Smallstep Temp4 ::x_'==>'_x not
R24790:24792 Top.Smallstep Temp4 tif constr
R24803:24804 Top.Smallstep <> t2 var
R24800:24801 Top.Smallstep <> t1 var
R24794:24798 Top.Smallstep Temp4 ttrue constr
R24810:24811 Top.Smallstep <> t1 var
R24866:24870 Top.Smallstep Temp4 ::x_'==>'_x not
R24850:24852 Top.Smallstep Temp4 tif constr
R24864:24865 Top.Smallstep <> t2 var
R24861:24862 Top.Smallstep <> t1 var
R24854:24859 Top.Smallstep Temp4 tfalse constr
R24871:24872 Top.Smallstep <> t2 var
R24923:24932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24945:24949 Top.Smallstep Temp4 ::x_'==>'_x not
R24933:24935 Top.Smallstep Temp4 tif constr
R24943:24944 Top.Smallstep <> t3 var
R24940:24941 Top.Smallstep <> t2 var
R24937:24938 Top.Smallstep <> t1 var
R24950:24952 Top.Smallstep Temp4 tif constr
R24961:24962 Top.Smallstep <> t3 var
R24958:24959 Top.Smallstep <> t2 var
R24954:24956 Top.Smallstep <> t1' var
R24915:24919 Top.Smallstep Temp4 ::x_'==>'_x not
R24913:24914 Top.Smallstep <> t1 var
R24920:24922 Top.Smallstep <> t1' var
R24992:24995 Top.Smallstep Temp4 step ind
not 24973:24973 Temp4 ::x_'==>'_x
def 25234:25248 Temp4 bool_step_prop1
R25261:25265 Top.Smallstep Temp4 ::x_'==>'_x not
R25255:25260 Top.Smallstep Temp4 tfalse constr
R25266:25271 Top.Smallstep Temp4 tfalse constr
def 25306:25320 Temp4 bool_step_prop2
R25411:25422 Top.Smallstep Temp4 ::x_'==>'_x not
R25330:25332 Top.Smallstep Temp4 tif constr
R25386:25388 Top.Smallstep Temp4 tif constr
R25404:25409 Top.Smallstep Temp4 tfalse constr
R25397:25402 Top.Smallstep Temp4 tfalse constr
R25390:25395 Top.Smallstep Temp4 tfalse constr
R25355:25357 Top.Smallstep Temp4 tif constr
R25371:25375 Top.Smallstep Temp4 ttrue constr
R25365:25369 Top.Smallstep Temp4 ttrue constr
R25359:25363 Top.Smallstep Temp4 ttrue constr
R25341:25345 Top.Smallstep Temp4 ttrue constr
R25423:25427 Top.Smallstep Temp4 ttrue constr
def 25462:25476 Temp4 bool_step_prop3
R25565:25577 Top.Smallstep Temp4 ::x_'==>'_x not
R25486:25488 Top.Smallstep Temp4 tif constr
R25559:25564 Top.Smallstep Temp4 tfalse constr
R25529:25531 Top.Smallstep Temp4 tif constr
R25545:25549 Top.Smallstep Temp4 ttrue constr
R25539:25543 Top.Smallstep Temp4 ttrue constr
R25533:25537 Top.Smallstep Temp4 ttrue constr
R25498:25500 Top.Smallstep Temp4 tif constr
R25514:25518 Top.Smallstep Temp4 ttrue constr
R25508:25512 Top.Smallstep Temp4 ttrue constr
R25502:25506 Top.Smallstep Temp4 ttrue constr
R25578:25580 Top.Smallstep Temp4 tif constr
R25633:25638 Top.Smallstep Temp4 tfalse constr
R25603:25605 Top.Smallstep Temp4 tif constr
R25619:25623 Top.Smallstep Temp4 ttrue constr
R25613:25617 Top.Smallstep Temp4 ttrue constr
R25607:25611 Top.Smallstep Temp4 ttrue constr
R25589:25593 Top.Smallstep Temp4 ttrue constr
prf 25855:25869 Temp4 strong_progress
R25892:25896 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25916:25916 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25885:25889 Top.Smallstep Temp4 value ind
R25891:25891 Top.Smallstep <> t var
R25897:25903 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25906:25907 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25909:25913 Top.Smallstep Temp4 ::x_'==>'_x not
R25908:25908 Top.Smallstep <> t var
R25914:25915 Top.Smallstep <> t' var
prf 26038:26055 Temp4 step_deterministic
R26061:26073 Top.Smallstep <> deterministic def
R26075:26078 Top.Smallstep Temp4 step ind
mod 26137:26141 <> Temp4.Temp5
ind 26911:26914 Temp4.Temp5 step
constr 26942:26950 Temp4.Temp5 ST_IfTrue
constr 27001:27010 Temp4.Temp5 ST_IfFalse
constr 27062:27066 Temp4.Temp5 ST_If
R26920:26923 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26926:26929 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26924:26925 Top.Smallstep Temp4 tm ind
R26918:26919 Top.Smallstep Temp4 tm ind
R27197:27200 Top.Smallstep <> step var
R26989:26993 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R26974:26976 Top.Smallstep Temp4 tif constr
R26987:26988 Top.Smallstep <> t2 var
R26984:26985 Top.Smallstep <> t1 var
R26978:26982 Top.Smallstep Temp4 ttrue constr
R26994:26995 Top.Smallstep <> t1 var
R27050:27054 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27034:27036 Top.Smallstep Temp4 tif constr
R27048:27049 Top.Smallstep <> t2 var
R27045:27046 Top.Smallstep <> t1 var
R27038:27043 Top.Smallstep Temp4 tfalse constr
R27055:27056 Top.Smallstep <> t2 var
R27107:27116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27129:27133 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27117:27119 Top.Smallstep Temp4 tif constr
R27127:27128 Top.Smallstep <> t3 var
R27124:27125 Top.Smallstep <> t2 var
R27121:27122 Top.Smallstep <> t1 var
R27134:27136 Top.Smallstep Temp4 tif constr
R27145:27146 Top.Smallstep <> t3 var
R27142:27143 Top.Smallstep <> t2 var
R27138:27140 Top.Smallstep <> t1' var
R27099:27103 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27097:27098 Top.Smallstep <> t1 var
R27104:27106 Top.Smallstep <> t1' var
R27197:27200 Top.Smallstep Temp4.Temp5 step ind
not 27178:27178 Temp4.Temp5 ::x_'==>'_x
def 27221:27235 Temp4.Temp5 bool_step_prop4
R27326:27344 Top.Smallstep Temp4.Temp5 ::x_'==>'_x not
R27249:27251 Top.Smallstep Temp4 tif constr
R27320:27325 Top.Smallstep Temp4 tfalse constr
R27301:27306 Top.Smallstep Temp4 tfalse constr
R27266:27268 Top.Smallstep Temp4 tif constr
R27282:27286 Top.Smallstep Temp4 ttrue constr
R27276:27280 Top.Smallstep Temp4 ttrue constr
R27270:27274 Top.Smallstep Temp4 ttrue constr
R27345:27350 Top.Smallstep Temp4 tfalse constr
def 27362:27382 Temp4.Temp5 bool_step_prop4_holds
R27388:27402 Top.Smallstep Temp4.Temp5 bool_step_prop4 def
R28391:28395 Top.Smallstep Temp4.Temp5 <> mod
R28402:28406 Top.Smallstep Temp4 <> mod
ind 29422:29426 <> multi
constr 29473:29482 <> multi_refl
constr 29519:29528 <> multi_step
R29441:29448 Top.Smallstep <> relation def
R29450:29450 Top.Smallstep <> X var
R29455:29462 Top.Smallstep <> relation def
R29499:29499 Top.Smallstep <> X var
R29503:29507 Top.Smallstep <> multi ind
R29513:29513 Top.Smallstep <> x var
R29511:29511 Top.Smallstep <> x var
R29509:29509 Top.Smallstep <> R var
R29503:29507 Top.Smallstep <> X var
R29548:29548 Top.Smallstep <> X var
R29577:29600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29612:29635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29636:29640 Top.Smallstep <> multi ind
R29646:29646 Top.Smallstep <> z var
R29644:29644 Top.Smallstep <> x var
R29642:29642 Top.Smallstep <> R var
R29636:29640 Top.Smallstep <> X var
R29601:29605 Top.Smallstep <> multi ind
R29611:29611 Top.Smallstep <> z var
R29609:29609 Top.Smallstep <> y var
R29607:29607 Top.Smallstep <> R var
R29601:29605 Top.Smallstep <> X var
R29572:29572 Top.Smallstep <> R var
R29576:29576 Top.Smallstep <> y var
R29574:29574 Top.Smallstep <> x var
R30367:30371 Top.Smallstep <> multi ind
R30373:30376 Top.Smallstep <> step ind
not 30347:30347 <> ::x_'==>*'_x
prf 30921:30927 <> multi_R
R30950:30957 Top.Smallstep <> relation def
R30959:30959 Top.Smallstep <> X var
R30969:30969 Top.Smallstep <> X var
R30985:30988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30990:30994 Top.Smallstep <> multi ind
R30996:30996 Top.Smallstep <> R var
R31001:31001 Top.Smallstep <> y var
R30999:30999 Top.Smallstep <> x var
R30980:30980 Top.Smallstep <> R var
R30984:30984 Top.Smallstep <> y var
R30982:30982 Top.Smallstep <> x var
R31039:31048 Top.Smallstep <> multi_step constr
R31039:31048 Top.Smallstep <> multi_step constr
R31073:31082 Top.Smallstep <> multi_refl constr
R31073:31082 Top.Smallstep <> multi_refl constr
prf 31143:31153 <> multi_trans
R31179:31186 Top.Smallstep <> relation def
R31188:31188 Top.Smallstep <> X var
R31200:31200 Top.Smallstep <> X var
R31221:31231 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31243:31252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31253:31257 Top.Smallstep <> multi ind
R31263:31263 Top.Smallstep <> z var
R31261:31261 Top.Smallstep <> x var
R31259:31259 Top.Smallstep <> R var
R31232:31236 Top.Smallstep <> multi ind
R31242:31242 Top.Smallstep <> z var
R31240:31240 Top.Smallstep <> y var
R31238:31238 Top.Smallstep <> R var
R31210:31214 Top.Smallstep <> multi ind
R31220:31220 Top.Smallstep <> y var
R31218:31218 Top.Smallstep <> x var
R31216:31216 Top.Smallstep <> R var
R31382:31391 Top.Smallstep <> multi_step constr
R31382:31391 Top.Smallstep <> multi_step constr
prf 31726:31741 <> test_multistep_1
R31799:31813 Top.Smallstep <> ::x_'==>*'_x not
R31750:31750 Top.Smallstep <> P constr
R31785:31785 Top.Smallstep <> P constr
R31794:31794 Top.Smallstep <> C constr
R31788:31788 Top.Smallstep <> C constr
R31761:31761 Top.Smallstep <> P constr
R31770:31770 Top.Smallstep <> C constr
R31764:31764 Top.Smallstep <> C constr
R31814:31814 Top.Smallstep <> C constr
R31817:31817 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31823:31827 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31833:31833 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31819:31821 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31829:31831 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31881:31881 Top.Smallstep <> P constr
R31911:31911 Top.Smallstep <> P constr
R31920:31920 Top.Smallstep <> C constr
R31914:31914 Top.Smallstep <> C constr
R31884:31884 Top.Smallstep <> C constr
R31888:31890 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31852:31861 Top.Smallstep <> multi_step constr
R31881:31881 Top.Smallstep <> P constr
R31911:31911 Top.Smallstep <> P constr
R31920:31920 Top.Smallstep <> C constr
R31914:31914 Top.Smallstep <> C constr
R31884:31884 Top.Smallstep <> C constr
R31888:31890 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31852:31861 Top.Smallstep <> multi_step constr
R31936:31943 Top.Smallstep <> ST_Plus1 constr
R31936:31943 Top.Smallstep <> ST_Plus1 constr
R31952:31968 Top.Smallstep <> ST_PlusConstConst constr
R31952:31968 Top.Smallstep <> ST_PlusConstConst constr
R32008:32008 Top.Smallstep <> P constr
R32038:32038 Top.Smallstep <> C constr
R32042:32044 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32011:32011 Top.Smallstep <> C constr
R32015:32017 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31979:31988 Top.Smallstep <> multi_step constr
R32008:32008 Top.Smallstep <> P constr
R32038:32038 Top.Smallstep <> C constr
R32042:32044 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32011:32011 Top.Smallstep <> C constr
R32015:32017 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31979:31988 Top.Smallstep <> multi_step constr
R32059:32066 Top.Smallstep <> ST_Plus2 constr
R32059:32066 Top.Smallstep <> ST_Plus2 constr
R32075:32081 Top.Smallstep <> v_const constr
R32075:32081 Top.Smallstep <> v_const constr
R32092:32108 Top.Smallstep <> ST_PlusConstConst constr
R32092:32108 Top.Smallstep <> ST_PlusConstConst constr
R32119:32125 Top.Smallstep <> multi_R thm
R32119:32125 Top.Smallstep <> multi_R thm
R32136:32152 Top.Smallstep <> ST_PlusConstConst constr
R32136:32152 Top.Smallstep <> ST_PlusConstConst constr
prf 32302:32318 <> test_multistep_1'
R32376:32389 Top.Smallstep <> ::x_'==>*'_x not
R32327:32327 Top.Smallstep <> P constr
R32362:32362 Top.Smallstep <> P constr
R32371:32371 Top.Smallstep <> C constr
R32365:32365 Top.Smallstep <> C constr
R32338:32338 Top.Smallstep <> P constr
R32347:32347 Top.Smallstep <> C constr
R32341:32341 Top.Smallstep <> C constr
R32390:32390 Top.Smallstep <> C constr
R32393:32393 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32399:32403 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32409:32409 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32395:32397 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32405:32407 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32429:32438 Top.Smallstep <> multi_step constr
R32429:32438 Top.Smallstep <> multi_step constr
R32447:32454 Top.Smallstep <> ST_Plus1 constr
R32447:32454 Top.Smallstep <> ST_Plus1 constr
R32463:32479 Top.Smallstep <> ST_PlusConstConst constr
R32463:32479 Top.Smallstep <> ST_PlusConstConst constr
R32491:32500 Top.Smallstep <> multi_step constr
R32491:32500 Top.Smallstep <> multi_step constr
R32509:32516 Top.Smallstep <> ST_Plus2 constr
R32509:32516 Top.Smallstep <> ST_Plus2 constr
R32525:32531 Top.Smallstep <> v_const constr
R32525:32531 Top.Smallstep <> v_const constr
R32542:32558 Top.Smallstep <> ST_PlusConstConst constr
R32542:32558 Top.Smallstep <> ST_PlusConstConst constr
R32570:32579 Top.Smallstep <> multi_step constr
R32570:32579 Top.Smallstep <> multi_step constr
R32588:32604 Top.Smallstep <> ST_PlusConstConst constr
R32588:32604 Top.Smallstep <> ST_PlusConstConst constr
R32615:32624 Top.Smallstep <> multi_refl constr
R32615:32624 Top.Smallstep <> multi_refl constr
prf 32699:32714 <> test_multistep_2
R32722:32727 Top.Smallstep <> ::x_'==>*'_x not
R32719:32719 Top.Smallstep <> C constr
R32728:32728 Top.Smallstep <> C constr
prf 32847:32862 <> test_multistep_3
R32884:32898 Top.Smallstep <> ::x_'==>*'_x not
R32871:32871 Top.Smallstep <> P constr
R32880:32880 Top.Smallstep <> C constr
R32874:32874 Top.Smallstep <> C constr
R32899:32899 Top.Smallstep <> P constr
R32908:32908 Top.Smallstep <> C constr
R32902:32902 Top.Smallstep <> C constr
prf 33019:33034 <> test_multistep_4
R33112:33125 Top.Smallstep <> ::x_'==>*'_x not
R33043:33043 Top.Smallstep <> P constr
R33068:33068 Top.Smallstep <> P constr
R33097:33097 Top.Smallstep <> P constr
R33106:33106 Top.Smallstep <> C constr
R33100:33100 Top.Smallstep <> C constr
R33081:33081 Top.Smallstep <> C constr
R33054:33054 Top.Smallstep <> C constr
R33126:33126 Top.Smallstep <> P constr
R33151:33151 Top.Smallstep <> C constr
R33155:33158 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33164:33164 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33160:33162 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R33137:33137 Top.Smallstep <> C constr
def 33459:33474 <> step_normal_form
R33479:33489 Top.Smallstep <> normal_form def
R33491:33494 Top.Smallstep <> step ind
def 33509:33522 <> normal_form_of
R33532:33533 Top.Smallstep <> tm ind
R33551:33554 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33543:33548 Top.Smallstep <> ::x_'==>*'_x not
R33542:33542 Top.Smallstep <> t var
R33549:33550 Top.Smallstep <> t' var
R33555:33570 Top.Smallstep <> step_normal_form def
R33572:33573 Top.Smallstep <> t' var
prf 34020:34038 <> normal_forms_unique
R34043:34055 Top.Smallstep <> deterministic def
R34057:34070 Top.Smallstep <> normal_form_of def
R34142:34154 Top.Smallstep <> deterministic def
R34164:34177 Top.Smallstep <> normal_form_of def
def 34644:34654 <> normalizing
R34668:34675 Top.Smallstep <> relation def
R34677:34677 Top.Smallstep <> X var
R34695:34701 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34704:34709 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34724:34727 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R34711:34715 Top.Smallstep <> multi ind
R34717:34717 Top.Smallstep <> R var
R34722:34723 Top.Smallstep <> t' var
R34720:34720 Top.Smallstep <> t var
R34728:34738 Top.Smallstep <> normal_form def
R34742:34743 Top.Smallstep <> t' var
R34740:34740 Top.Smallstep <> R var
prf 35137:35153 <> multistep_congr_1
R35191:35199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35207:35212 Top.Smallstep <> ::x_'==>*'_x not
R35200:35200 Top.Smallstep <> P constr
R35205:35206 Top.Smallstep <> t2 var
R35202:35203 Top.Smallstep <> t1 var
R35213:35213 Top.Smallstep <> P constr
R35219:35220 Top.Smallstep <> t2 var
R35215:35217 Top.Smallstep <> t1' var
R35182:35187 Top.Smallstep <> ::x_'==>*'_x not
R35180:35181 Top.Smallstep <> t1 var
R35188:35190 Top.Smallstep <> t1' var
R35294:35303 Top.Smallstep <> multi_refl constr
R35294:35303 Top.Smallstep <> multi_refl constr
R35352:35352 Top.Smallstep <> P constr
R35335:35344 Top.Smallstep <> multi_step constr
R35352:35352 Top.Smallstep <> P constr
R35335:35344 Top.Smallstep <> multi_step constr
R35375:35382 Top.Smallstep <> ST_Plus1 constr
R35375:35382 Top.Smallstep <> ST_Plus1 constr
prf 35481:35497 <> multistep_congr_2
R35532:35540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35552:35560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35568:35573 Top.Smallstep <> ::x_'==>*'_x not
R35561:35561 Top.Smallstep <> P constr
R35566:35567 Top.Smallstep <> t2 var
R35563:35564 Top.Smallstep <> t1 var
R35574:35574 Top.Smallstep <> P constr
R35579:35581 Top.Smallstep <> t2' var
R35576:35577 Top.Smallstep <> t1 var
R35543:35548 Top.Smallstep <> ::x_'==>*'_x not
R35541:35542 Top.Smallstep <> t2 var
R35549:35551 Top.Smallstep <> t2' var
R35524:35528 Top.Smallstep <> value ind
R35530:35531 Top.Smallstep <> t1 var
prf 36809:36824 <> step_normalizing
R36830:36840 Top.Smallstep <> normalizing def
R36842:36845 Top.Smallstep <> step ind
R36864:36874 Top.Smallstep <> normalizing def
R36920:36920 Top.Smallstep <> C constr
R36920:36920 Top.Smallstep <> C constr
R36961:36970 Top.Smallstep <> multi_refl constr
R36961:36970 Top.Smallstep <> multi_refl constr
R37095:37110 Top.Smallstep <> nf_same_as_value thm
R37095:37110 Top.Smallstep <> nf_same_as_value thm
R37095:37110 Top.Smallstep <> nf_same_as_value thm
R37119:37125 Top.Smallstep <> v_const constr
R37119:37125 Top.Smallstep <> v_const constr
R37236:37251 Top.Smallstep <> nf_same_as_value thm
R37236:37251 Top.Smallstep <> nf_same_as_value thm
R37236:37251 Top.Smallstep <> nf_same_as_value thm
R37269:37284 Top.Smallstep <> nf_same_as_value thm
R37269:37284 Top.Smallstep <> nf_same_as_value thm
R37269:37284 Top.Smallstep <> nf_same_as_value thm
R37420:37420 Top.Smallstep <> C constr
R37425:37427 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R37420:37420 Top.Smallstep <> C constr
R37425:37427 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R37499:37499 Top.Smallstep <> P constr
R37502:37502 Top.Smallstep <> C constr
R37481:37491 Top.Smallstep <> multi_trans thm
R37499:37499 Top.Smallstep <> P constr
R37502:37502 Top.Smallstep <> C constr
R37481:37491 Top.Smallstep <> multi_trans thm
R37531:37547 Top.Smallstep <> multistep_congr_1 thm
R37531:37547 Top.Smallstep <> multistep_congr_1 thm
R37610:37610 Top.Smallstep <> P constr
R37620:37620 Top.Smallstep <> C constr
R37613:37613 Top.Smallstep <> C constr
R37579:37589 Top.Smallstep <> multi_trans thm
R37610:37610 Top.Smallstep <> P constr
R37620:37620 Top.Smallstep <> C constr
R37613:37613 Top.Smallstep <> C constr
R37579:37589 Top.Smallstep <> multi_trans thm
R37648:37664 Top.Smallstep <> multistep_congr_2 prfax
R37648:37664 Top.Smallstep <> multistep_congr_2 prfax
R37673:37679 Top.Smallstep <> v_const constr
R37673:37679 Top.Smallstep <> v_const constr
R37715:37721 Top.Smallstep <> multi_R thm
R37715:37721 Top.Smallstep <> multi_R thm
R37730:37746 Top.Smallstep <> ST_PlusConstConst constr
R37730:37746 Top.Smallstep <> ST_PlusConstConst constr
R37787:37802 Top.Smallstep <> nf_same_as_value thm
R37787:37802 Top.Smallstep <> nf_same_as_value thm
R37787:37802 Top.Smallstep <> nf_same_as_value thm
R37811:37817 Top.Smallstep <> v_const constr
R37811:37817 Top.Smallstep <> v_const constr
prf 38323:38337 <> eval__multistep
R38361:38364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38366:38371 Top.Smallstep <> ::x_'==>*'_x not
R38365:38365 Top.Smallstep <> t var
R38372:38372 Top.Smallstep <> C constr
R38374:38374 Top.Smallstep <> n var
R38356:38359 Top.Smallstep <> ::x_'\\'_x not
R38355:38355 Top.Smallstep <> t var
R38360:38360 Top.Smallstep <> n var
prf 40064:40073 <> step__eval
R40105:40113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40121:40129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40131:40134 Top.Smallstep <> ::x_'\\'_x not
R40130:40130 Top.Smallstep <> t var
R40135:40135 Top.Smallstep <> n var
R40116:40119 Top.Smallstep <> ::x_'\\'_x not
R40114:40115 Top.Smallstep <> t' var
R40120:40120 Top.Smallstep <> n var
R40098:40102 Top.Smallstep <> ::x_'==>'_x not
R40097:40097 Top.Smallstep <> t var
R40103:40104 Top.Smallstep <> t' var
prf 40650:40664 <> multistep__eval
R40702:40705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40706:40712 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40714:40715 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40724:40727 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40718:40720 Coq.Init.Logic <> :type_scope:x_'='_x not
R40716:40717 Top.Smallstep <> t' var
R40721:40721 Top.Smallstep <> C constr
R40723:40723 Top.Smallstep <> n var
R40729:40732 Top.Smallstep <> ::x_'\\'_x not
R40728:40728 Top.Smallstep <> t var
R40733:40733 Top.Smallstep <> n var
R40683:40696 Top.Smallstep <> normal_form_of def
R40700:40701 Top.Smallstep <> t' var
R40698:40698 Top.Smallstep <> t var
prf 41272:41281 <> evalF_eval
R41310:41314 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R41306:41308 Coq.Init.Logic <> :type_scope:x_'='_x not
R41299:41303 Top.Smallstep <> evalF def
R41305:41305 Top.Smallstep <> t var
R41309:41309 Top.Smallstep <> n var
R41316:41319 Top.Smallstep <> ::x_'\\'_x not
R41315:41315 Top.Smallstep <> t var
R41320:41320 Top.Smallstep <> n var
mod 41559:41566 <> Combined
ind 41580:41581 Combined tm
constr 41597:41597 Combined C
constr 41615:41615 Combined P
constr 41638:41642 Combined ttrue
constr 41653:41658 Combined tfalse
constr 41669:41671 Combined tif
R41604:41607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41608:41609 Top.Smallstep <> tm ind
R41601:41603 Coq.Init.Datatypes <> nat ind
R41621:41624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41627:41630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41631:41632 Top.Smallstep <> tm ind
R41625:41626 Top.Smallstep <> tm ind
R41619:41620 Top.Smallstep <> tm ind
R41646:41647 Top.Smallstep <> tm ind
R41662:41663 Top.Smallstep <> tm ind
R41677:41680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41683:41686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41689:41692 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41693:41694 Top.Smallstep <> tm ind
R41687:41688 Top.Smallstep <> tm ind
R41681:41682 Top.Smallstep <> tm ind
R41675:41676 Top.Smallstep <> tm ind
ind 41708:41712 Combined value
constr 41734:41740 Combined v_const
constr 41770:41775 Combined v_true
constr 41795:41801 Combined v_false
R41718:41721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41716:41717 Top.Smallstep Combined tm ind
R41754:41758 Top.Smallstep <> value ind
R41761:41761 Top.Smallstep Combined C constr
R41763:41763 Top.Smallstep <> n var
R41779:41783 Top.Smallstep <> value ind
R41785:41789 Top.Smallstep Combined ttrue constr
R41805:41809 Top.Smallstep <> value ind
R41811:41816 Top.Smallstep Combined tfalse constr
ind 41879:41882 Combined step
constr 41910:41926 Combined ST_PlusConstConst
constr 41986:41993 Combined ST_Plus1
constr 42066:42073 Combined ST_Plus2
constr 42164:42172 Combined ST_IfTrue
constr 42223:42232 Combined ST_IfFalse
constr 42284:42288 Combined ST_If
R41888:41891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41894:41897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41892:41893 Top.Smallstep Combined tm ind
R41886:41887 Top.Smallstep Combined tm ind
R42398:42401 Top.Smallstep <> step var
R41965:41969 Top.Smallstep Combined ::x_'==>'_x not
R41950:41950 Top.Smallstep Combined P constr
R41960:41960 Top.Smallstep Combined C constr
R41962:41963 Top.Smallstep <> n2 var
R41953:41953 Top.Smallstep Combined C constr
R41955:41956 Top.Smallstep <> n1 var
R41970:41970 Top.Smallstep Combined C constr
R41975:41977 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R41973:41974 Top.Smallstep <> n1 var
R41978:41979 Top.Smallstep <> n2 var
R42031:42040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42048:42052 Top.Smallstep Combined ::x_'==>'_x not
R42041:42041 Top.Smallstep Combined P constr
R42046:42047 Top.Smallstep <> t2 var
R42043:42044 Top.Smallstep <> t1 var
R42053:42053 Top.Smallstep Combined P constr
R42059:42060 Top.Smallstep <> t2 var
R42055:42057 Top.Smallstep <> t1' var
R42023:42027 Top.Smallstep Combined ::x_'==>'_x not
R42021:42022 Top.Smallstep <> t1 var
R42028:42030 Top.Smallstep <> t1' var
R42109:42118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42129:42138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42146:42150 Top.Smallstep Combined ::x_'==>'_x not
R42139:42139 Top.Smallstep Combined P constr
R42144:42145 Top.Smallstep <> t2 var
R42141:42142 Top.Smallstep <> v1 var
R42151:42151 Top.Smallstep Combined P constr
R42156:42158 Top.Smallstep <> t2' var
R42153:42154 Top.Smallstep <> v1 var
R42121:42125 Top.Smallstep Combined ::x_'==>'_x not
R42119:42120 Top.Smallstep <> t2 var
R42126:42128 Top.Smallstep <> t2' var
R42101:42105 Top.Smallstep Combined value ind
R42107:42108 Top.Smallstep <> v1 var
R42211:42215 Top.Smallstep Combined ::x_'==>'_x not
R42196:42198 Top.Smallstep Combined tif constr
R42209:42210 Top.Smallstep <> t2 var
R42206:42207 Top.Smallstep <> t1 var
R42200:42204 Top.Smallstep Combined ttrue constr
R42216:42217 Top.Smallstep <> t1 var
R42272:42276 Top.Smallstep Combined ::x_'==>'_x not
R42256:42258 Top.Smallstep Combined tif constr
R42270:42271 Top.Smallstep <> t2 var
R42267:42268 Top.Smallstep <> t1 var
R42260:42265 Top.Smallstep Combined tfalse constr
R42277:42278 Top.Smallstep <> t2 var
R42329:42338 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42351:42355 Top.Smallstep Combined ::x_'==>'_x not
R42339:42341 Top.Smallstep Combined tif constr
R42349:42350 Top.Smallstep <> t3 var
R42346:42347 Top.Smallstep <> t2 var
R42343:42344 Top.Smallstep <> t1 var
R42356:42358 Top.Smallstep Combined tif constr
R42367:42368 Top.Smallstep <> t3 var
R42364:42365 Top.Smallstep <> t2 var
R42360:42362 Top.Smallstep <> t1' var
R42321:42325 Top.Smallstep Combined ::x_'==>'_x not
R42319:42320 Top.Smallstep <> t1 var
R42326:42328 Top.Smallstep <> t1' var
R42398:42401 Top.Smallstep Combined step ind
not 42379:42379 Combined ::x_'==>'_x
R42734:42741 Top.Smallstep Combined <> mod
ind 43273:43276 <> aval
constr 43300:43305 <> av_num
R43284:43287 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43280:43283 Top.Imp <> aexp ind
R43319:43322 Top.Smallstep <> aval ind
R43325:43328 Top.Imp <> ANum constr
R43330:43330 Top.Smallstep <> n var
ind 43648:43652 <> astep
constr 43693:43697 <> AS_Id
constr 43752:43758 <> AS_Plus
constr 43840:43847 <> AS_Plus1
constr 43947:43954 <> AS_Plus2
constr 44071:44078 <> AS_Minus
constr 44169:44177 <> AS_Minus1
constr 44279:44287 <> AS_Minus2
constr 44406:44412 <> AS_Mult
constr 44501:44508 <> AS_Mult1
constr 44608:44615 <> AS_Mult2
R43661:43664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43669:43672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43677:43680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43673:43676 Top.Imp <> aexp ind
R43665:43668 Top.Imp <> aexp ind
R43656:43660 Top.Imp <> state def
R44766:44770 Top.Smallstep <> astep var
R43725:43727 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43730:43735 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43728:43729 Top.Smallstep <> st var
R43720:43722 Top.Imp <> AId constr
R43724:43724 Top.Smallstep <> i var
R43736:43739 Top.Imp <> ANum constr
R43742:43743 Top.Smallstep <> st var
R43745:43745 Top.Smallstep <> i var
R43810:43812 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43815:43820 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43813:43814 Top.Smallstep <> st var
R43785:43789 Top.Imp <> APlus constr
R43802:43805 Top.Imp <> ANum constr
R43807:43808 Top.Smallstep <> n2 var
R43792:43795 Top.Imp <> ANum constr
R43797:43798 Top.Smallstep <> n1 var
R43821:43824 Top.Imp <> ANum constr
R43829:43831 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43827:43828 Top.Smallstep <> n1 var
R43832:43833 Top.Smallstep <> n2 var
R43894:43903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43904:43904 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43916:43919 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43922:43928 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43941:43941 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43920:43921 Top.Smallstep <> st var
R43905:43909 Top.Imp <> APlus constr
R43914:43915 Top.Smallstep <> a2 var
R43911:43912 Top.Smallstep <> a1 var
R43929:43933 Top.Imp <> APlus constr
R43939:43940 Top.Smallstep <> a2 var
R43935:43937 Top.Smallstep <> a1' var
R43880:43882 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43885:43890 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R43883:43884 Top.Smallstep <> st var
R43878:43879 Top.Smallstep <> a1 var
R43891:43893 Top.Smallstep <> a1' var
R43992:44001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44018:44027 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44028:44028 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44040:44043 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44046:44052 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44065:44065 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44044:44045 Top.Smallstep <> st var
R44029:44033 Top.Imp <> APlus constr
R44038:44039 Top.Smallstep <> a2 var
R44035:44036 Top.Smallstep <> v1 var
R44053:44057 Top.Imp <> APlus constr
R44062:44064 Top.Smallstep <> a2' var
R44059:44060 Top.Smallstep <> v1 var
R44004:44006 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44009:44014 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44007:44008 Top.Smallstep <> st var
R44002:44003 Top.Smallstep <> a2 var
R44015:44017 Top.Smallstep <> a2' var
R43985:43988 Top.Smallstep <> aval ind
R43990:43991 Top.Smallstep <> v1 var
R44105:44105 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44132:44135 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44138:44144 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44163:44163 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44136:44137 Top.Smallstep <> st var
R44106:44111 Top.Imp <> AMinus constr
R44124:44127 Top.Imp <> ANum constr
R44129:44130 Top.Smallstep <> n2 var
R44114:44117 Top.Imp <> ANum constr
R44119:44120 Top.Smallstep <> n1 var
R44145:44148 Top.Imp <> ANum constr
R44151:44155 Coq.Init.Peano <> minus syndef
R44160:44161 Top.Smallstep <> n2 var
R44157:44158 Top.Smallstep <> n1 var
R44224:44233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44234:44234 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44247:44250 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44253:44259 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44273:44273 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44251:44252 Top.Smallstep <> st var
R44235:44240 Top.Imp <> AMinus constr
R44245:44246 Top.Smallstep <> a2 var
R44242:44243 Top.Smallstep <> a1 var
R44260:44265 Top.Imp <> AMinus constr
R44271:44272 Top.Smallstep <> a2 var
R44267:44269 Top.Smallstep <> a1' var
R44210:44212 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44215:44220 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44213:44214 Top.Smallstep <> st var
R44208:44209 Top.Smallstep <> a1 var
R44221:44223 Top.Smallstep <> a1' var
R44325:44334 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44351:44360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44361:44361 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44374:44377 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44380:44386 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44400:44400 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44378:44379 Top.Smallstep <> st var
R44362:44367 Top.Imp <> AMinus constr
R44372:44373 Top.Smallstep <> a2 var
R44369:44370 Top.Smallstep <> v1 var
R44387:44392 Top.Imp <> AMinus constr
R44397:44399 Top.Smallstep <> a2' var
R44394:44395 Top.Smallstep <> v1 var
R44337:44339 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44342:44347 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44340:44341 Top.Smallstep <> st var
R44335:44336 Top.Smallstep <> a2 var
R44348:44350 Top.Smallstep <> a2' var
R44318:44321 Top.Smallstep <> aval ind
R44323:44324 Top.Smallstep <> v1 var
R44439:44439 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44465:44468 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44471:44477 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44495:44495 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44469:44470 Top.Smallstep <> st var
R44440:44444 Top.Imp <> AMult constr
R44457:44460 Top.Imp <> ANum constr
R44462:44463 Top.Smallstep <> n2 var
R44447:44450 Top.Imp <> ANum constr
R44452:44453 Top.Smallstep <> n1 var
R44478:44481 Top.Imp <> ANum constr
R44484:44487 Coq.Init.Peano <> mult syndef
R44492:44493 Top.Smallstep <> n2 var
R44489:44490 Top.Smallstep <> n1 var
R44555:44564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44565:44565 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44577:44580 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44583:44589 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44602:44602 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44581:44582 Top.Smallstep <> st var
R44566:44570 Top.Imp <> AMult constr
R44575:44576 Top.Smallstep <> a2 var
R44572:44573 Top.Smallstep <> a1 var
R44590:44594 Top.Imp <> AMult constr
R44600:44601 Top.Smallstep <> a2 var
R44596:44598 Top.Smallstep <> a1' var
R44541:44543 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44546:44551 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44544:44545 Top.Smallstep <> st var
R44539:44540 Top.Smallstep <> a1 var
R44552:44554 Top.Smallstep <> a1' var
R44653:44662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44679:44688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44689:44689 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44701:44704 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44707:44713 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44726:44726 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44705:44706 Top.Smallstep <> st var
R44690:44694 Top.Imp <> AMult constr
R44699:44700 Top.Smallstep <> a2 var
R44696:44697 Top.Smallstep <> v1 var
R44714:44718 Top.Imp <> AMult constr
R44723:44725 Top.Smallstep <> a2' var
R44720:44721 Top.Smallstep <> v1 var
R44665:44667 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44670:44675 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R44668:44669 Top.Smallstep <> st var
R44663:44664 Top.Smallstep <> a2 var
R44676:44678 Top.Smallstep <> a2' var
R44646:44649 Top.Smallstep <> aval ind
R44651:44652 Top.Smallstep <> v1 var
R44766:44770 Top.Smallstep <> astep ind
not 44739:44739 <> ::x_'/'_x_'==>a'_x
ind 44884:44888 <> bstep
constr 44927:44931 <> BS_Eq
constr 45042:45047 <> BS_Eq1
constr 45137:45142 <> BS_Eq2
constr 45247:45253 <> BS_LtEq
constr 45369:45376 <> BS_LtEq1
constr 45466:45473 <> BS_LtEq2
constr 45578:45587 <> BS_NotTrue
constr 45638:45648 <> BS_NotFalse
constr 45699:45708 <> BS_NotStep
constr 45791:45804 <> BS_AndTrueTrue
constr 45860:45874 <> BS_AndTrueFalse
constr 45932:45942 <> BS_AndFalse
constr 46000:46013 <> BS_AndTrueStep
constr 46108:46117 <> BS_AndStep
R44897:44900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44905:44908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44913:44916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44909:44912 Top.Imp <> bexp ind
R44901:44904 Top.Imp <> bexp ind
R44892:44896 Top.Imp <> state def
R46241:46245 Top.Smallstep <> bstep var
R44956:44956 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R44980:44983 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R44986:44996 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45038:45038 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R44984:44985 Top.Smallstep <> st var
R44957:44959 Top.Imp <> BEq constr
R44972:44975 Top.Imp <> ANum constr
R44977:44978 Top.Smallstep <> n2 var
R44962:44965 Top.Imp <> ANum constr
R44967:44968 Top.Smallstep <> n1 var
R45001:45007 Coq.Arith.EqNat <> beq_nat syndef
R45012:45013 Top.Smallstep <> n2 var
R45009:45010 Top.Smallstep <> n1 var
R45032:45037 Top.Imp <> BFalse constr
R45021:45025 Top.Imp <> BTrue constr
R45092:45099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45100:45100 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45110:45113 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45116:45122 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45133:45133 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45114:45115 Top.Smallstep <> st var
R45101:45103 Top.Imp <> BEq constr
R45108:45109 Top.Smallstep <> a2 var
R45105:45106 Top.Smallstep <> a1 var
R45123:45125 Top.Imp <> BEq constr
R45131:45132 Top.Smallstep <> a2 var
R45127:45129 Top.Smallstep <> a1' var
R45078:45080 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45083:45088 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45081:45082 Top.Smallstep <> st var
R45076:45077 Top.Smallstep <> a1 var
R45089:45091 Top.Smallstep <> a1' var
R45178:45185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45202:45209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45210:45210 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45220:45223 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45226:45232 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45243:45243 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45224:45225 Top.Smallstep <> st var
R45211:45213 Top.Imp <> BEq constr
R45218:45219 Top.Smallstep <> a2 var
R45215:45216 Top.Smallstep <> v1 var
R45233:45235 Top.Imp <> BEq constr
R45240:45242 Top.Smallstep <> a2' var
R45237:45238 Top.Smallstep <> v1 var
R45188:45190 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45193:45198 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45191:45192 Top.Smallstep <> st var
R45186:45187 Top.Smallstep <> a2 var
R45199:45201 Top.Smallstep <> a2' var
R45171:45174 Top.Smallstep <> aval ind
R45176:45177 Top.Smallstep <> v1 var
R45278:45278 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45302:45305 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45308:45327 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45365:45365 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45306:45307 Top.Smallstep <> st var
R45279:45281 Top.Imp <> BLe constr
R45294:45297 Top.Imp <> ANum constr
R45299:45300 Top.Smallstep <> n2 var
R45284:45287 Top.Imp <> ANum constr
R45289:45290 Top.Smallstep <> n1 var
R45332:45334 Coq.Arith.Compare_dec <> leb syndef
R45339:45340 Top.Smallstep <> n2 var
R45336:45337 Top.Smallstep <> n1 var
R45359:45364 Top.Imp <> BFalse constr
R45348:45352 Top.Imp <> BTrue constr
R45421:45428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45429:45429 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45439:45442 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45445:45451 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45462:45462 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45443:45444 Top.Smallstep <> st var
R45430:45432 Top.Imp <> BLe constr
R45437:45438 Top.Smallstep <> a2 var
R45434:45435 Top.Smallstep <> a1 var
R45452:45454 Top.Imp <> BLe constr
R45460:45461 Top.Smallstep <> a2 var
R45456:45458 Top.Smallstep <> a1' var
R45407:45409 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45412:45417 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45410:45411 Top.Smallstep <> st var
R45405:45406 Top.Smallstep <> a1 var
R45418:45420 Top.Smallstep <> a1' var
R45509:45516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45533:45540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45541:45541 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45551:45554 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45557:45563 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45574:45574 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45555:45556 Top.Smallstep <> st var
R45542:45544 Top.Imp <> BLe constr
R45549:45550 Top.Smallstep <> a2 var
R45546:45547 Top.Smallstep <> v1 var
R45564:45566 Top.Imp <> BLe constr
R45571:45573 Top.Smallstep <> a2' var
R45568:45569 Top.Smallstep <> v1 var
R45519:45521 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45524:45529 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R45522:45523 Top.Smallstep <> st var
R45517:45518 Top.Smallstep <> a2 var
R45530:45532 Top.Smallstep <> a2' var
R45502:45505 Top.Smallstep <> aval ind
R45507:45508 Top.Smallstep <> v1 var
R45606:45606 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45617:45620 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45623:45628 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45621:45622 Top.Smallstep <> st var
R45607:45610 Top.Imp <> BNot constr
R45612:45616 Top.Imp <> BTrue constr
R45629:45634 Top.Imp <> BFalse constr
R45667:45667 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45679:45682 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45685:45690 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45683:45684 Top.Smallstep <> st var
R45668:45671 Top.Imp <> BNot constr
R45673:45678 Top.Imp <> BFalse constr
R45691:45695 Top.Imp <> BTrue constr
R45750:45757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45758:45758 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45766:45769 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45772:45778 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45787:45787 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45770:45771 Top.Smallstep <> st var
R45759:45762 Top.Imp <> BNot constr
R45764:45765 Top.Smallstep <> b1 var
R45779:45782 Top.Imp <> BNot constr
R45784:45786 Top.Smallstep <> b1' var
R45736:45738 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45741:45746 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45739:45740 Top.Smallstep <> st var
R45734:45735 Top.Smallstep <> b1 var
R45747:45749 Top.Smallstep <> b1' var
R45823:45823 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45840:45843 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45846:45851 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45844:45845 Top.Smallstep <> st var
R45824:45827 Top.Imp <> BAnd constr
R45835:45839 Top.Imp <> BTrue constr
R45829:45833 Top.Imp <> BTrue constr
R45852:45856 Top.Imp <> BTrue constr
R45893:45893 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45911:45914 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45917:45922 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45915:45916 Top.Smallstep <> st var
R45894:45897 Top.Imp <> BAnd constr
R45905:45910 Top.Imp <> BFalse constr
R45899:45903 Top.Imp <> BTrue constr
R45923:45928 Top.Imp <> BFalse constr
R45964:45964 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45979:45982 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45985:45990 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R45983:45984 Top.Smallstep <> st var
R45965:45968 Top.Imp <> BAnd constr
R45977:45978 Top.Smallstep <> b2 var
R45970:45975 Top.Imp <> BFalse constr
R45991:45996 Top.Imp <> BFalse constr
R46055:46062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46063:46063 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46077:46080 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46083:46089 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46104:46104 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46081:46082 Top.Smallstep <> st var
R46064:46067 Top.Imp <> BAnd constr
R46075:46076 Top.Smallstep <> b2 var
R46069:46073 Top.Imp <> BTrue constr
R46090:46093 Top.Imp <> BAnd constr
R46101:46103 Top.Smallstep <> b2' var
R46095:46099 Top.Imp <> BTrue constr
R46041:46043 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46046:46051 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46044:46045 Top.Smallstep <> st var
R46039:46040 Top.Smallstep <> b2 var
R46052:46054 Top.Smallstep <> b2' var
R46162:46169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46170:46170 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46181:46184 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46187:46193 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46205:46205 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46185:46186 Top.Smallstep <> st var
R46171:46174 Top.Imp <> BAnd constr
R46179:46180 Top.Smallstep <> b2 var
R46176:46177 Top.Smallstep <> b1 var
R46194:46197 Top.Imp <> BAnd constr
R46203:46204 Top.Smallstep <> b2 var
R46199:46201 Top.Smallstep <> b1' var
R46148:46150 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46153:46158 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R46151:46152 Top.Smallstep <> st var
R46146:46147 Top.Smallstep <> b1 var
R46159:46161 Top.Smallstep <> b1' var
R46241:46245 Top.Smallstep <> bstep ind
not 46214:46214 <> ::x_'/'_x_'==>b'_x
ind 47260:47264 <> cstep
constr 47314:47323 <> CS_AssStep
constr 47414:47419 <> CS_Ass
constr 47499:47508 <> CS_SeqStep
constr 47616:47627 <> CS_SeqFinish
constr 47685:47693 <> CS_IfTrue
constr 47770:47779 <> CS_IfFalse
constr 47857:47865 <> CS_IfStep
constr 48003:48010 <> CS_While
R47268:47268 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47280:47284 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47285:47285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47297:47301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47289:47291 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R47286:47288 Top.Imp <> com ind
R47292:47296 Top.Imp <> state def
R47272:47274 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R47269:47271 Top.Imp <> com ind
R47275:47279 Top.Imp <> state def
R48176:48180 Top.Smallstep <> cstep var
R48189:48189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48192:48192 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48196:48196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48182:48182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48184:48184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48187:48187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47365:47374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47375:47375 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47383:47386 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47389:47394 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47403:47406 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47377:47381 Top.Imp <> ::x_'::='_x not
R47376:47376 Top.Smallstep <> i var
R47382:47382 Top.Smallstep <> a var
R47387:47388 Top.Smallstep <> st var
R47396:47400 Top.Imp <> ::x_'::='_x not
R47395:47395 Top.Smallstep <> i var
R47401:47402 Top.Smallstep <> a' var
R47407:47408 Top.Smallstep <> st var
R47352:47354 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R47357:47362 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R47355:47356 Top.Smallstep <> st var
R47351:47351 Top.Smallstep <> a var
R47363:47364 Top.Smallstep <> a' var
R47444:47444 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47459:47462 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47465:47469 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47474:47477 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47493:47493 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47446:47451 Top.Imp <> ::x_'::='_x not
R47458:47458 Top.Imp <> ::x_'::='_x not
R47445:47445 Top.Smallstep <> i var
R47452:47455 Top.Imp <> ANum constr
R47457:47457 Top.Smallstep <> n var
R47463:47464 Top.Smallstep <> st var
R47470:47473 Top.Imp <> ::'SKIP' not
R47478:47485 Top.Maps <> t_update def
R47492:47492 Top.Smallstep <> n var
R47490:47490 Top.Smallstep <> i var
R47487:47488 Top.Smallstep <> st var
R47564:47573 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47574:47574 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47583:47586 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47589:47594 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47604:47607 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47577:47580 Top.Imp <> ::x_';;'_x not
R47575:47576 Top.Smallstep <> c1 var
R47581:47582 Top.Smallstep <> c2 var
R47587:47588 Top.Smallstep <> st var
R47598:47601 Top.Imp <> ::x_';;'_x not
R47595:47597 Top.Smallstep <> c1' var
R47602:47603 Top.Smallstep <> c2 var
R47608:47610 Top.Smallstep <> st' var
R47545:47547 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47550:47554 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47558:47560 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47543:47544 Top.Smallstep <> c1 var
R47548:47549 Top.Smallstep <> st var
R47555:47557 Top.Smallstep <> c1' var
R47561:47563 Top.Smallstep <> st' var
R47651:47651 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47662:47665 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47668:47672 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47675:47677 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47656:47659 Top.Imp <> ::x_';;'_x not
R47652:47655 Top.Imp <> ::'SKIP' not
R47660:47661 Top.Smallstep <> c2 var
R47666:47667 Top.Smallstep <> st var
R47673:47674 Top.Smallstep <> c2 var
R47678:47679 Top.Smallstep <> st var
R47748:47750 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47753:47757 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47760:47762 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47720:47723 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47729:47734 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47737:47742 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47745:47747 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47724:47728 Top.Imp <> BTrue constr
R47735:47736 Top.Smallstep <> c1 var
R47743:47744 Top.Smallstep <> c2 var
R47751:47752 Top.Smallstep <> st var
R47758:47759 Top.Smallstep <> c1 var
R47763:47764 Top.Smallstep <> st var
R47835:47837 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47840:47844 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47847:47849 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47806:47809 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47816:47821 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47824:47829 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47832:47834 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47810:47815 Top.Imp <> BFalse constr
R47822:47823 Top.Smallstep <> c1 var
R47830:47831 Top.Smallstep <> c2 var
R47838:47839 Top.Smallstep <> st var
R47845:47846 Top.Smallstep <> c2 var
R47850:47851 Top.Smallstep <> st var
R47911:47924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47949:47951 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47954:47966 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47992:47995 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R47925:47928 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47930:47935 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47938:47943 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47946:47948 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47929:47929 Top.Smallstep <> b var
R47936:47937 Top.Smallstep <> c1 var
R47944:47945 Top.Smallstep <> c2 var
R47952:47953 Top.Smallstep <> st var
R47967:47970 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47973:47978 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47981:47986 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47989:47991 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47971:47972 Top.Smallstep <> b' var
R47979:47980 Top.Smallstep <> c1 var
R47987:47988 Top.Smallstep <> c2 var
R47996:47997 Top.Smallstep <> st var
R47898:47900 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R47903:47908 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R47901:47902 Top.Smallstep <> st var
R47897:47897 Top.Smallstep <> b var
R47909:47910 Top.Smallstep <> b' var
R48040:48040 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48058:48061 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48064:48075 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48126:48129 Top.Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R48041:48046 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48048:48051 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48054:48057 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48047:48047 Top.Smallstep <> b var
R48052:48053 Top.Smallstep <> c1 var
R48062:48063 Top.Smallstep <> st var
R48076:48079 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48081:48087 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48112:48118 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48123:48125 Top.Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R48080:48080 Top.Smallstep <> b var
R48090:48093 Top.Imp <> ::x_';;'_x not
R48111:48111 Top.Imp <> ::x_';;'_x not
R48088:48089 Top.Smallstep <> c1 var
R48094:48099 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48101:48104 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48107:48110 Top.Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48100:48100 Top.Smallstep <> b var
R48105:48106 Top.Smallstep <> c1 var
R48119:48122 Top.Imp <> ::'SKIP' not
R48130:48131 Top.Smallstep <> st var
R48176:48180 Top.Smallstep <> cstep ind
R48189:48189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48192:48192 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48196:48196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48182:48182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48184:48184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48187:48187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 48142:48142 <> ::x_'/'_x_'==>'_x_'/'_x
mod 48718:48721 <> CImp
ind 48735:48737 CImp com
constr 48753:48757 CImp CSkip
constr 48769:48772 CImp CAss
constr 48798:48801 CImp CSeq
constr 48827:48829 CImp CIf
constr 48863:48868 CImp CWhile
constr 48908:48911 CImp CPar
R48761:48763 Top.Smallstep <> com ind
R48778:48781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48786:48789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48790:48792 Top.Smallstep <> com ind
R48782:48785 Top.Imp <> aexp ind
R48776:48777 Top.Maps <> id ind
R48808:48811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48815:48818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48819:48821 Top.Smallstep <> com ind
R48812:48814 Top.Smallstep <> com ind
R48805:48807 Top.Smallstep <> com ind
R48837:48840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48844:48847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48851:48854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48855:48857 Top.Smallstep <> com ind
R48848:48850 Top.Smallstep <> com ind
R48841:48843 Top.Smallstep <> com ind
R48833:48836 Top.Imp <> bexp ind
R48876:48879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48883:48886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48887:48889 Top.Smallstep <> com ind
R48880:48882 Top.Smallstep <> com ind
R48872:48875 Top.Imp <> bexp ind
R48918:48921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48925:48928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48929:48931 Top.Smallstep <> com ind
R48922:48924 Top.Smallstep <> com ind
R48915:48917 Top.Smallstep <> com ind
R48958:48962 Top.Smallstep CImp CSkip constr
not 48944:48944 CImp ::'SKIP'
R48992:48995 Top.Smallstep CImp CAss constr
not 48974:48974 CImp ::x_'::='_x
R49043:49046 Top.Smallstep CImp CSeq constr
not 49026:49026 CImp ::x_';;'_x
R49131:49136 Top.Smallstep CImp CWhile constr
not 49100:49100 CImp ::'WHILE'_x_'DO'_x_'END'
R49229:49231 Top.Smallstep CImp CIf constr
not 49188:49188 CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R49320:49323 Top.Smallstep CImp CPar constr
not 49287:49287 CImp ::'PAR'_x_'WITH'_x_'END'
ind 49379:49383 CImp cstep
constr 49453:49462 CImp CS_AssStep
constr 49553:49558 CImp CS_Ass
constr 49638:49647 CImp CS_SeqStep
constr 49755:49766 CImp CS_SeqFinish
constr 49824:49832 CImp CS_IfTrue
constr 49911:49920 CImp CS_IfFalse
constr 50000:50008 CImp CS_IfStep
constr 50147:50154 CImp CS_While
constr 50302:50308 CImp CS_Par1
constr 50436:50442 CImp CS_Par2
constr 50570:50579 CImp CS_ParDone
R49387:49387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49399:49404 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49405:49405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49417:49421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49409:49411 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R49406:49408 Top.Smallstep CImp com ind
R49412:49416 Top.Imp <> state def
R49391:49393 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R49388:49390 Top.Smallstep CImp com ind
R49394:49398 Top.Imp <> state def
R50686:50690 Top.Smallstep <> cstep var
R50699:50699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50702:50702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50706:50706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50692:50692 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50694:50694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50697:50697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49504:49513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49514:49514 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49522:49525 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49528:49533 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49542:49545 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49516:49520 Top.Smallstep CImp ::x_'::='_x not
R49515:49515 Top.Smallstep <> i var
R49521:49521 Top.Smallstep <> a var
R49526:49527 Top.Smallstep <> st var
R49535:49539 Top.Smallstep CImp ::x_'::='_x not
R49534:49534 Top.Smallstep <> i var
R49540:49541 Top.Smallstep <> a' var
R49546:49547 Top.Smallstep <> st var
R49491:49493 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R49496:49501 Top.Smallstep <> ::x_'/'_x_'==>a'_x not
R49494:49495 Top.Smallstep <> st var
R49490:49490 Top.Smallstep <> a var
R49502:49503 Top.Smallstep <> a' var
R49583:49583 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49598:49601 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49604:49608 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49613:49616 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49632:49632 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49585:49590 Top.Smallstep CImp ::x_'::='_x not
R49597:49597 Top.Smallstep CImp ::x_'::='_x not
R49584:49584 Top.Smallstep <> i var
R49591:49594 Top.Imp <> ANum constr
R49596:49596 Top.Smallstep <> n var
R49602:49603 Top.Smallstep <> st var
R49609:49612 Top.Smallstep CImp ::'SKIP' not
R49617:49624 Top.Maps <> t_update def
R49631:49631 Top.Smallstep <> n var
R49629:49629 Top.Smallstep <> i var
R49626:49627 Top.Smallstep <> st var
R49703:49712 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49713:49713 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49722:49725 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49728:49733 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49743:49746 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49716:49719 Top.Smallstep CImp ::x_';;'_x not
R49714:49715 Top.Smallstep <> c1 var
R49720:49721 Top.Smallstep <> c2 var
R49726:49727 Top.Smallstep <> st var
R49737:49740 Top.Smallstep CImp ::x_';;'_x not
R49734:49736 Top.Smallstep <> c1' var
R49741:49742 Top.Smallstep <> c2 var
R49747:49749 Top.Smallstep <> st' var
R49684:49686 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49689:49693 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49697:49699 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49682:49683 Top.Smallstep <> c1 var
R49687:49688 Top.Smallstep <> st var
R49694:49696 Top.Smallstep <> c1' var
R49700:49702 Top.Smallstep <> st' var
R49790:49790 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49801:49804 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49807:49811 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49814:49816 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49795:49798 Top.Smallstep CImp ::x_';;'_x not
R49791:49794 Top.Smallstep CImp ::'SKIP' not
R49799:49800 Top.Smallstep <> c2 var
R49805:49806 Top.Smallstep <> st var
R49812:49813 Top.Smallstep <> c2 var
R49817:49818 Top.Smallstep <> st var
R49859:49859 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49888:49891 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49894:49898 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49901:49903 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49860:49863 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49869:49874 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49877:49882 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49885:49887 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49864:49868 Top.Imp <> BTrue constr
R49875:49876 Top.Smallstep <> c1 var
R49883:49884 Top.Smallstep <> c2 var
R49892:49893 Top.Smallstep <> st var
R49899:49900 Top.Smallstep <> c1 var
R49904:49905 Top.Smallstep <> st var
R49947:49947 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49977:49980 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49983:49987 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49990:49992 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R49948:49951 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49958:49963 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49966:49971 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49974:49976 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49952:49957 Top.Imp <> BFalse constr
R49964:49965 Top.Smallstep <> c1 var
R49972:49973 Top.Smallstep <> c2 var
R49981:49982 Top.Smallstep <> st var
R49988:49989 Top.Smallstep <> c2 var
R49993:49994 Top.Smallstep <> st var
R50053:50066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50067:50067 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50092:50095 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50098:50110 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50136:50139 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50068:50071 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50073:50078 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50081:50086 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50089:50091 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50072:50072 Top.Smallstep <> b var
R50079:50080 Top.Smallstep <> c1 var
R50087:50088 Top.Smallstep <> c2 var
R50096:50097 Top.Smallstep <> st var
R50111:50114 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50117:50122 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50125:50130 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50133:50135 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50115:50116 Top.Smallstep <> b' var
R50123:50124 Top.Smallstep <> c1 var
R50131:50132 Top.Smallstep <> c2 var
R50140:50141 Top.Smallstep <> st var
R50041:50042 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R50045:50050 Top.Smallstep <> ::x_'/'_x_'==>b'_x not
R50043:50044 Top.Smallstep <> st var
R50040:50040 Top.Smallstep <> b var
R50051:50052 Top.Smallstep <> b' var
R50184:50184 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50202:50205 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50208:50220 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50271:50274 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50185:50190 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50192:50195 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50198:50201 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50191:50191 Top.Smallstep <> b var
R50196:50197 Top.Smallstep <> c1 var
R50206:50207 Top.Smallstep <> st var
R50221:50224 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50226:50232 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50257:50263 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50268:50270 Top.Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R50225:50225 Top.Smallstep <> b var
R50235:50238 Top.Smallstep CImp ::x_';;'_x not
R50256:50256 Top.Smallstep CImp ::x_';;'_x not
R50233:50234 Top.Smallstep <> c1 var
R50239:50244 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50246:50249 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50252:50255 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R50245:50245 Top.Smallstep <> b var
R50250:50251 Top.Smallstep <> c1 var
R50264:50267 Top.Smallstep CImp ::'SKIP' not
R50275:50276 Top.Smallstep <> st var
R50364:50373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50374:50374 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50393:50396 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50399:50404 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50424:50427 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50375:50378 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50381:50386 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50389:50392 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50379:50380 Top.Smallstep <> c1 var
R50387:50388 Top.Smallstep <> c2 var
R50397:50398 Top.Smallstep <> st var
R50405:50408 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50412:50417 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50420:50423 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50409:50411 Top.Smallstep <> c1' var
R50418:50419 Top.Smallstep <> c2 var
R50428:50430 Top.Smallstep <> st' var
R50345:50347 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50350:50354 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50358:50360 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50343:50344 Top.Smallstep <> c1 var
R50348:50349 Top.Smallstep <> st var
R50355:50357 Top.Smallstep <> c1' var
R50361:50363 Top.Smallstep <> st' var
R50498:50507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50508:50508 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50527:50530 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50533:50538 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50558:50561 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50509:50512 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50515:50520 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50523:50526 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50513:50514 Top.Smallstep <> c1 var
R50521:50522 Top.Smallstep <> c2 var
R50531:50532 Top.Smallstep <> st var
R50539:50542 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50545:50550 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50554:50557 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50543:50544 Top.Smallstep <> c1 var
R50551:50553 Top.Smallstep <> c2' var
R50562:50564 Top.Smallstep <> st' var
R50479:50481 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50484:50488 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50492:50494 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50477:50478 Top.Smallstep <> c2 var
R50482:50483 Top.Smallstep <> st var
R50489:50491 Top.Smallstep <> c2' var
R50495:50497 Top.Smallstep <> st' var
R50600:50600 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50623:50626 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50629:50633 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50638:50640 Top.Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R50601:50604 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50609:50614 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50619:50622 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R50605:50608 Top.Smallstep CImp ::'SKIP' not
R50615:50618 Top.Smallstep CImp ::'SKIP' not
R50627:50628 Top.Smallstep <> st var
R50634:50637 Top.Smallstep CImp ::'SKIP' not
R50641:50642 Top.Smallstep <> st var
R50686:50690 Top.Smallstep CImp cstep ind
R50699:50699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50702:50702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50706:50706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50692:50692 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50694:50694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50697:50697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 50652:50652 CImp ::x_'/'_x_'==>'_x_'/'_x
def 50722:50731 CImp cmultistep
R50736:50740 Top.Smallstep <> multi ind
R50742:50746 Top.Smallstep CImp cstep ind
R50797:50801 Top.Smallstep <> multi ind
R50817:50817 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50820:50820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50824:50824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50810:50810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50812:50812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50815:50815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50803:50807 Top.Smallstep CImp cstep ind
not 50759:50759 CImp ::x_'/'_x_'==>*'_x_'/'_x
def 51054:51061 CImp par_loop
R51065:51067 Top.Smallstep CImp com ind
R51074:51081 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R51094:51105 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R51178:51183 Top.Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R51083:51087 Top.Smallstep CImp ::x_'::='_x not
R51082:51082 Top.Imp <> Y def
R51088:51091 Top.Imp <> ANum constr
R51106:51111 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R51132:51141 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R51170:51177 Top.Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R51112:51114 Top.Imp <> BEq constr
R51125:51128 Top.Imp <> ANum constr
R51117:51119 Top.Imp <> AId constr
R51121:51121 Top.Imp <> Y def
R51143:51147 Top.Smallstep CImp ::x_'::='_x not
R51142:51142 Top.Imp <> X def
R51148:51152 Top.Imp <> APlus constr
R51163:51166 Top.Imp <> ANum constr
R51155:51157 Top.Imp <> AId constr
R51159:51159 Top.Imp <> X def
def 51256:51273 CImp par_loop_example_0
R51278:51284 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51288:51296 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51336:51343 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R51305:51307 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51319:51325 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51330:51332 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51297:51304 Top.Smallstep CImp par_loop def
R51308:51318 Top.Imp <> empty_state def
R51326:51329 Top.Smallstep CImp ::'SKIP' not
R51333:51335 Top.Smallstep <> st' var
R51349:51351 Coq.Init.Logic <> :type_scope:x_'='_x not
R51344:51346 Top.Smallstep <> st' var
R51348:51348 Top.Imp <> X def
R51371:51378 Coq.Init.Logic <> ex_intro constr
R51371:51378 Coq.Init.Logic <> ex_intro constr
R51397:51404 Top.Smallstep CImp par_loop def
R51416:51425 Top.Smallstep <> multi_step constr
R51416:51425 Top.Smallstep <> multi_step constr
R51434:51440 Top.Smallstep CImp CS_Par1 constr
R51434:51440 Top.Smallstep CImp CS_Par1 constr
R51453:51458 Top.Smallstep CImp CS_Ass constr
R51453:51458 Top.Smallstep CImp CS_Ass constr
R51470:51479 Top.Smallstep <> multi_step constr
R51470:51479 Top.Smallstep <> multi_step constr
R51488:51494 Top.Smallstep CImp CS_Par2 constr
R51488:51494 Top.Smallstep CImp CS_Par2 constr
R51503:51510 Top.Smallstep CImp CS_While constr
R51503:51510 Top.Smallstep CImp CS_While constr
R51522:51531 Top.Smallstep <> multi_step constr
R51522:51531 Top.Smallstep <> multi_step constr
R51540:51546 Top.Smallstep CImp CS_Par2 constr
R51540:51546 Top.Smallstep CImp CS_Par2 constr
R51555:51563 Top.Smallstep CImp CS_IfStep constr
R51555:51563 Top.Smallstep CImp CS_IfStep constr
R51576:51581 Top.Smallstep <> BS_Eq1 constr
R51576:51581 Top.Smallstep <> BS_Eq1 constr
R51590:51594 Top.Smallstep <> AS_Id constr
R51590:51594 Top.Smallstep <> AS_Id constr
R51606:51615 Top.Smallstep <> multi_step constr
R51606:51615 Top.Smallstep <> multi_step constr
R51624:51630 Top.Smallstep CImp CS_Par2 constr
R51624:51630 Top.Smallstep CImp CS_Par2 constr
R51639:51647 Top.Smallstep CImp CS_IfStep constr
R51639:51647 Top.Smallstep CImp CS_IfStep constr
R51660:51664 Top.Smallstep <> BS_Eq constr
R51660:51664 Top.Smallstep <> BS_Eq constr
R51683:51692 Top.Smallstep <> multi_step constr
R51683:51692 Top.Smallstep <> multi_step constr
R51701:51707 Top.Smallstep CImp CS_Par2 constr
R51701:51707 Top.Smallstep CImp CS_Par2 constr
R51716:51725 Top.Smallstep CImp CS_IfFalse constr
R51716:51725 Top.Smallstep CImp CS_IfFalse constr
R51737:51746 Top.Smallstep <> multi_step constr
R51737:51746 Top.Smallstep <> multi_step constr
R51755:51764 Top.Smallstep CImp CS_ParDone constr
R51755:51764 Top.Smallstep CImp CS_ParDone constr
R51776:51785 Top.Smallstep <> multi_refl constr
R51776:51785 Top.Smallstep <> multi_refl constr
def 51868:51885 CImp par_loop_example_2
R51890:51896 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51900:51908 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51947:51954 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R51917:51919 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51931:51936 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51941:51943 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R51909:51916 Top.Smallstep CImp par_loop def
R51920:51930 Top.Imp <> empty_state def
R51937:51940 Top.Smallstep CImp ::'SKIP' not
R51944:51946 Top.Smallstep <> st' var
R51960:51962 Coq.Init.Logic <> :type_scope:x_'='_x not
R51955:51957 Top.Smallstep <> st' var
R51959:51959 Top.Imp <> X def
R51982:51989 Coq.Init.Logic <> ex_intro constr
R51982:51989 Coq.Init.Logic <> ex_intro constr
R52008:52017 Top.Smallstep <> multi_step constr
R52008:52017 Top.Smallstep <> multi_step constr
R52026:52032 Top.Smallstep CImp CS_Par2 constr
R52026:52032 Top.Smallstep CImp CS_Par2 constr
R52041:52048 Top.Smallstep CImp CS_While constr
R52041:52048 Top.Smallstep CImp CS_While constr
R52060:52069 Top.Smallstep <> multi_step constr
R52060:52069 Top.Smallstep <> multi_step constr
R52078:52084 Top.Smallstep CImp CS_Par2 constr
R52078:52084 Top.Smallstep CImp CS_Par2 constr
R52093:52101 Top.Smallstep CImp CS_IfStep constr
R52093:52101 Top.Smallstep CImp CS_IfStep constr
R52114:52119 Top.Smallstep <> BS_Eq1 constr
R52114:52119 Top.Smallstep <> BS_Eq1 constr
R52128:52132 Top.Smallstep <> AS_Id constr
R52128:52132 Top.Smallstep <> AS_Id constr
R52144:52153 Top.Smallstep <> multi_step constr
R52144:52153 Top.Smallstep <> multi_step constr
R52162:52168 Top.Smallstep CImp CS_Par2 constr
R52162:52168 Top.Smallstep CImp CS_Par2 constr
R52177:52185 Top.Smallstep CImp CS_IfStep constr
R52177:52185 Top.Smallstep CImp CS_IfStep constr
R52198:52202 Top.Smallstep <> BS_Eq constr
R52198:52202 Top.Smallstep <> BS_Eq constr
R52221:52230 Top.Smallstep <> multi_step constr
R52221:52230 Top.Smallstep <> multi_step constr
R52239:52245 Top.Smallstep CImp CS_Par2 constr
R52239:52245 Top.Smallstep CImp CS_Par2 constr
R52254:52262 Top.Smallstep CImp CS_IfTrue constr
R52254:52262 Top.Smallstep CImp CS_IfTrue constr
R52274:52283 Top.Smallstep <> multi_step constr
R52274:52283 Top.Smallstep <> multi_step constr
R52292:52298 Top.Smallstep CImp CS_Par2 constr
R52292:52298 Top.Smallstep CImp CS_Par2 constr
R52307:52316 Top.Smallstep CImp CS_SeqStep constr
R52307:52316 Top.Smallstep CImp CS_SeqStep constr
R52329:52338 Top.Smallstep CImp CS_AssStep constr
R52329:52338 Top.Smallstep CImp CS_AssStep constr
R52347:52354 Top.Smallstep <> AS_Plus1 constr
R52347:52354 Top.Smallstep <> AS_Plus1 constr
R52363:52367 Top.Smallstep <> AS_Id constr
R52363:52367 Top.Smallstep <> AS_Id constr
R52379:52388 Top.Smallstep <> multi_step constr
R52379:52388 Top.Smallstep <> multi_step constr
R52397:52403 Top.Smallstep CImp CS_Par2 constr
R52397:52403 Top.Smallstep CImp CS_Par2 constr
R52412:52421 Top.Smallstep CImp CS_SeqStep constr
R52412:52421 Top.Smallstep CImp CS_SeqStep constr
R52434:52443 Top.Smallstep CImp CS_AssStep constr
R52434:52443 Top.Smallstep CImp CS_AssStep constr
R52452:52458 Top.Smallstep <> AS_Plus constr
R52452:52458 Top.Smallstep <> AS_Plus constr
R52470:52479 Top.Smallstep <> multi_step constr
R52470:52479 Top.Smallstep <> multi_step constr
R52488:52494 Top.Smallstep CImp CS_Par2 constr
R52488:52494 Top.Smallstep CImp CS_Par2 constr
R52503:52512 Top.Smallstep CImp CS_SeqStep constr
R52503:52512 Top.Smallstep CImp CS_SeqStep constr
R52525:52530 Top.Smallstep CImp CS_Ass constr
R52525:52530 Top.Smallstep CImp CS_Ass constr
R52542:52551 Top.Smallstep <> multi_step constr
R52542:52551 Top.Smallstep <> multi_step constr
R52560:52566 Top.Smallstep CImp CS_Par2 constr
R52560:52566 Top.Smallstep CImp CS_Par2 constr
R52575:52586 Top.Smallstep CImp CS_SeqFinish constr
R52575:52586 Top.Smallstep CImp CS_SeqFinish constr
R52599:52608 Top.Smallstep <> multi_step constr
R52599:52608 Top.Smallstep <> multi_step constr
R52617:52623 Top.Smallstep CImp CS_Par2 constr
R52617:52623 Top.Smallstep CImp CS_Par2 constr
R52632:52639 Top.Smallstep CImp CS_While constr
R52632:52639 Top.Smallstep CImp CS_While constr
R52651:52660 Top.Smallstep <> multi_step constr
R52651:52660 Top.Smallstep <> multi_step constr
R52669:52675 Top.Smallstep CImp CS_Par2 constr
R52669:52675 Top.Smallstep CImp CS_Par2 constr
R52684:52692 Top.Smallstep CImp CS_IfStep constr
R52684:52692 Top.Smallstep CImp CS_IfStep constr
R52705:52710 Top.Smallstep <> BS_Eq1 constr
R52705:52710 Top.Smallstep <> BS_Eq1 constr
R52719:52723 Top.Smallstep <> AS_Id constr
R52719:52723 Top.Smallstep <> AS_Id constr
R52735:52744 Top.Smallstep <> multi_step constr
R52735:52744 Top.Smallstep <> multi_step constr
R52753:52759 Top.Smallstep CImp CS_Par2 constr
R52753:52759 Top.Smallstep CImp CS_Par2 constr
R52768:52776 Top.Smallstep CImp CS_IfStep constr
R52768:52776 Top.Smallstep CImp CS_IfStep constr
R52789:52793 Top.Smallstep <> BS_Eq constr
R52789:52793 Top.Smallstep <> BS_Eq constr
R52812:52821 Top.Smallstep <> multi_step constr
R52812:52821 Top.Smallstep <> multi_step constr
R52830:52836 Top.Smallstep CImp CS_Par2 constr
R52830:52836 Top.Smallstep CImp CS_Par2 constr
R52845:52853 Top.Smallstep CImp CS_IfTrue constr
R52845:52853 Top.Smallstep CImp CS_IfTrue constr
R52865:52874 Top.Smallstep <> multi_step constr
R52865:52874 Top.Smallstep <> multi_step constr
R52883:52889 Top.Smallstep CImp CS_Par2 constr
R52883:52889 Top.Smallstep CImp CS_Par2 constr
R52898:52907 Top.Smallstep CImp CS_SeqStep constr
R52898:52907 Top.Smallstep CImp CS_SeqStep constr
R52920:52929 Top.Smallstep CImp CS_AssStep constr
R52920:52929 Top.Smallstep CImp CS_AssStep constr
R52938:52945 Top.Smallstep <> AS_Plus1 constr
R52938:52945 Top.Smallstep <> AS_Plus1 constr
R52954:52958 Top.Smallstep <> AS_Id constr
R52954:52958 Top.Smallstep <> AS_Id constr
R52970:52979 Top.Smallstep <> multi_step constr
R52970:52979 Top.Smallstep <> multi_step constr
R52988:52994 Top.Smallstep CImp CS_Par2 constr
R52988:52994 Top.Smallstep CImp CS_Par2 constr
R53003:53012 Top.Smallstep CImp CS_SeqStep constr
R53003:53012 Top.Smallstep CImp CS_SeqStep constr
R53025:53034 Top.Smallstep CImp CS_AssStep constr
R53025:53034 Top.Smallstep CImp CS_AssStep constr
R53043:53049 Top.Smallstep <> AS_Plus constr
R53043:53049 Top.Smallstep <> AS_Plus constr
R53061:53070 Top.Smallstep <> multi_step constr
R53061:53070 Top.Smallstep <> multi_step constr
R53079:53085 Top.Smallstep CImp CS_Par2 constr
R53079:53085 Top.Smallstep CImp CS_Par2 constr
R53094:53103 Top.Smallstep CImp CS_SeqStep constr
R53094:53103 Top.Smallstep CImp CS_SeqStep constr
R53116:53121 Top.Smallstep CImp CS_Ass constr
R53116:53121 Top.Smallstep CImp CS_Ass constr
R53134:53143 Top.Smallstep <> multi_step constr
R53134:53143 Top.Smallstep <> multi_step constr
R53152:53158 Top.Smallstep CImp CS_Par1 constr
R53152:53158 Top.Smallstep CImp CS_Par1 constr
R53167:53172 Top.Smallstep CImp CS_Ass constr
R53167:53172 Top.Smallstep CImp CS_Ass constr
R53184:53193 Top.Smallstep <> multi_step constr
R53184:53193 Top.Smallstep <> multi_step constr
R53202:53208 Top.Smallstep CImp CS_Par2 constr
R53202:53208 Top.Smallstep CImp CS_Par2 constr
R53217:53228 Top.Smallstep CImp CS_SeqFinish constr
R53217:53228 Top.Smallstep CImp CS_SeqFinish constr
R53240:53249 Top.Smallstep <> multi_step constr
R53240:53249 Top.Smallstep <> multi_step constr
R53258:53264 Top.Smallstep CImp CS_Par2 constr
R53258:53264 Top.Smallstep CImp CS_Par2 constr
R53273:53280 Top.Smallstep CImp CS_While constr
R53273:53280 Top.Smallstep CImp CS_While constr
R53292:53301 Top.Smallstep <> multi_step constr
R53292:53301 Top.Smallstep <> multi_step constr
R53310:53316 Top.Smallstep CImp CS_Par2 constr
R53310:53316 Top.Smallstep CImp CS_Par2 constr
R53325:53333 Top.Smallstep CImp CS_IfStep constr
R53325:53333 Top.Smallstep CImp CS_IfStep constr
R53346:53351 Top.Smallstep <> BS_Eq1 constr
R53346:53351 Top.Smallstep <> BS_Eq1 constr
R53360:53364 Top.Smallstep <> AS_Id constr
R53360:53364 Top.Smallstep <> AS_Id constr
R53376:53385 Top.Smallstep <> multi_step constr
R53376:53385 Top.Smallstep <> multi_step constr
R53394:53400 Top.Smallstep CImp CS_Par2 constr
R53394:53400 Top.Smallstep CImp CS_Par2 constr
R53409:53417 Top.Smallstep CImp CS_IfStep constr
R53409:53417 Top.Smallstep CImp CS_IfStep constr
R53430:53434 Top.Smallstep <> BS_Eq constr
R53430:53434 Top.Smallstep <> BS_Eq constr
R53453:53462 Top.Smallstep <> multi_step constr
R53453:53462 Top.Smallstep <> multi_step constr
R53471:53477 Top.Smallstep CImp CS_Par2 constr
R53471:53477 Top.Smallstep CImp CS_Par2 constr
R53486:53495 Top.Smallstep CImp CS_IfFalse constr
R53486:53495 Top.Smallstep CImp CS_IfFalse constr
R53507:53516 Top.Smallstep <> multi_step constr
R53507:53516 Top.Smallstep <> multi_step constr
R53525:53534 Top.Smallstep CImp CS_ParDone constr
R53525:53534 Top.Smallstep CImp CS_ParDone constr
R53546:53555 Top.Smallstep <> multi_refl constr
R53546:53555 Top.Smallstep <> multi_refl constr
prf 53669:53682 CImp par_body_n__Sn
R53721:53726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53735:53737 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53740:53745 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53754:53757 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53777:53777 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53727:53734 Top.Smallstep CImp par_loop def
R53738:53739 Top.Smallstep <> st var
R53746:53753 Top.Smallstep CImp par_loop def
R53758:53765 Top.Maps <> t_update def
R53773:53773 Coq.Init.Datatypes <> S constr
R53775:53775 Top.Smallstep <> n var
R53770:53770 Top.Imp <> X def
R53767:53768 Top.Smallstep <> st var
R53709:53712 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53705:53707 Coq.Init.Logic <> :type_scope:x_'='_x not
R53701:53702 Top.Smallstep <> st var
R53704:53704 Top.Imp <> X def
R53708:53708 Top.Smallstep <> n var
R53717:53719 Coq.Init.Logic <> :type_scope:x_'='_x not
R53713:53714 Top.Smallstep <> st var
R53716:53716 Top.Imp <> Y def
prf 53889:53898 CImp par_body_n
R53937:53942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53943:53949 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53953:53958 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53993:53996 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53967:53969 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53972:53978 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53987:53989 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R53959:53966 Top.Smallstep CImp par_loop def
R53970:53971 Top.Smallstep <> st var
R53979:53986 Top.Smallstep CImp par_loop def
R53990:53992 Top.Smallstep <> st' var
R54006:54009 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54002:54004 Coq.Init.Logic <> :type_scope:x_'='_x not
R53997:53999 Top.Smallstep <> st' var
R54001:54001 Top.Imp <> X def
R54005:54005 Top.Smallstep <> n var
R54015:54017 Coq.Init.Logic <> :type_scope:x_'='_x not
R54010:54012 Top.Smallstep <> st' var
R54014:54014 Top.Imp <> Y def
R53925:53928 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53921:53923 Coq.Init.Logic <> :type_scope:x_'='_x not
R53917:53918 Top.Smallstep <> st var
R53920:53920 Top.Imp <> X def
R53933:53935 Coq.Init.Logic <> :type_scope:x_'='_x not
R53929:53930 Top.Smallstep <> st var
R53932:53932 Top.Imp <> Y def
prf 54156:54169 CImp par_loop_any_X
R54184:54190 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54194:54199 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54239:54246 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54208:54210 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54222:54228 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54233:54235 Top.Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R54200:54207 Top.Smallstep CImp par_loop def
R54211:54221 Top.Imp <> empty_state def
R54229:54232 Top.Smallstep CImp ::'SKIP' not
R54236:54238 Top.Smallstep <> st' var
R54252:54254 Coq.Init.Logic <> :type_scope:x_'='_x not
R54247:54249 Top.Smallstep <> st' var
R54251:54251 Top.Imp <> X def
R54255:54255 Top.Smallstep <> n var
R54289:54298 Top.Smallstep CImp par_body_n prfax
R54302:54312 Top.Imp <> empty_state def
R54289:54298 Top.Smallstep CImp par_body_n prfax
R54302:54312 Top.Imp <> empty_state def
R54334:54341 Top.Maps <> t_update def
R54428:54435 Top.Maps <> t_update def
R54440:54440 Top.Imp <> Y def
R54428:54435 Top.Maps <> t_update def
R54440:54440 Top.Imp <> Y def
R54479:54479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54488:54488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54491:54491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54480:54487 Top.Smallstep CImp par_loop def
R54462:54472 Top.Smallstep <> multi_trans thm
R54479:54479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54488:54488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54491:54491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54480:54487 Top.Smallstep CImp par_loop def
R54462:54472 Top.Smallstep <> multi_trans thm
R54513:54522 Top.Smallstep <> multi_step constr
R54513:54522 Top.Smallstep <> multi_step constr
R54531:54537 Top.Smallstep CImp CS_Par1 constr
R54531:54537 Top.Smallstep CImp CS_Par1 constr
R54546:54551 Top.Smallstep CImp CS_Ass constr
R54546:54551 Top.Smallstep CImp CS_Ass constr
R54563:54572 Top.Smallstep <> multi_step constr
R54563:54572 Top.Smallstep <> multi_step constr
R54581:54587 Top.Smallstep CImp CS_Par2 constr
R54581:54587 Top.Smallstep CImp CS_Par2 constr
R54596:54603 Top.Smallstep CImp CS_While constr
R54596:54603 Top.Smallstep CImp CS_While constr
R54615:54624 Top.Smallstep <> multi_step constr
R54615:54624 Top.Smallstep <> multi_step constr
R54633:54639 Top.Smallstep CImp CS_Par2 constr
R54633:54639 Top.Smallstep CImp CS_Par2 constr
R54648:54656 Top.Smallstep CImp CS_IfStep constr
R54648:54656 Top.Smallstep CImp CS_IfStep constr
R54669:54674 Top.Smallstep <> BS_Eq1 constr
R54669:54674 Top.Smallstep <> BS_Eq1 constr
R54683:54687 Top.Smallstep <> AS_Id constr
R54683:54687 Top.Smallstep <> AS_Id constr
R54698:54708 Top.Maps <> t_update_eq prfax
R54698:54708 Top.Maps <> t_update_eq prfax
R54698:54708 Top.Maps <> t_update_eq prfax
R54720:54729 Top.Smallstep <> multi_step constr
R54720:54729 Top.Smallstep <> multi_step constr
R54738:54744 Top.Smallstep CImp CS_Par2 constr
R54738:54744 Top.Smallstep CImp CS_Par2 constr
R54753:54761 Top.Smallstep CImp CS_IfStep constr
R54753:54761 Top.Smallstep CImp CS_IfStep constr
R54774:54778 Top.Smallstep <> BS_Eq constr
R54774:54778 Top.Smallstep <> BS_Eq constr
R54797:54806 Top.Smallstep <> multi_step constr
R54797:54806 Top.Smallstep <> multi_step constr
R54815:54821 Top.Smallstep CImp CS_Par2 constr
R54815:54821 Top.Smallstep CImp CS_Par2 constr
R54830:54839 Top.Smallstep CImp CS_IfFalse constr
R54830:54839 Top.Smallstep CImp CS_IfFalse constr
R54851:54860 Top.Smallstep <> multi_step constr
R54851:54860 Top.Smallstep <> multi_step constr
R54869:54878 Top.Smallstep CImp CS_ParDone constr
R54869:54878 Top.Smallstep CImp CS_ParDone constr
R54889:54898 Top.Smallstep <> multi_refl constr
R54889:54898 Top.Smallstep <> multi_refl constr
R54912:54923 Top.Maps <> t_update_neq prfax
R54912:54923 Top.Maps <> t_update_neq prfax
R54912:54923 Top.Maps <> t_update_neq prfax
R54912:54923 Top.Maps <> t_update_neq prfax
R54970:54973 Top.Smallstep CImp <> mod
def 55206:55210 <> stack
R55215:55218 Coq.Init.Datatypes <> list ind
R55220:55222 Coq.Init.Datatypes <> nat ind
def 55236:55239 <> prog
R55245:55248 Coq.Init.Datatypes <> list ind
R55250:55255 Top.Imp <> sinstr ind
ind 55269:55278 <> stack_step
constr 55335:55341 <> SS_Push
constr 55428:55434 <> SS_Load
constr 55524:55530 <> SS_Plus
constr 55621:55628 <> SS_Minus
constr 55719:55725 <> SS_Mult
R55287:55290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55303:55306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55319:55322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55311:55313 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55307:55310 Top.Smallstep <> prog def
R55314:55318 Top.Smallstep <> stack def
R55295:55297 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55291:55294 Top.Smallstep <> prog def
R55298:55302 Top.Smallstep <> stack def
R55282:55286 Top.Imp <> state def
R55369:55378 Top.Smallstep <> stack_step ind
R55409:55409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55412:55413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55422:55422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55410:55411 Top.Smallstep <> p' var
R55415:55418 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55414:55414 Top.Smallstep <> n var
R55419:55421 Top.Smallstep <> stk var
R55383:55383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55397:55398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55402:55402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55391:55394 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55384:55388 Top.Imp <> SPush constr
R55390:55390 Top.Smallstep <> n var
R55395:55396 Top.Smallstep <> p' var
R55399:55401 Top.Smallstep <> stk var
R55380:55381 Top.Smallstep <> st var
R55462:55471 Top.Smallstep <> stack_step ind
R55502:55502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55505:55506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55518:55518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55503:55504 Top.Smallstep <> p' var
R55511:55514 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55507:55508 Top.Smallstep <> st var
R55510:55510 Top.Smallstep <> i var
R55515:55517 Top.Smallstep <> stk var
R55476:55476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55490:55491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55495:55495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55484:55487 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55477:55481 Top.Imp <> SLoad constr
R55483:55483 Top.Smallstep <> i var
R55488:55489 Top.Smallstep <> p' var
R55492:55494 Top.Smallstep <> stk var
R55473:55474 Top.Smallstep <> st var
R55560:55569 Top.Smallstep <> stack_step ind
R55600:55600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55603:55604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55615:55615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55601:55602 Top.Smallstep <> p' var
R55605:55605 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55609:55611 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55607:55607 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R55606:55606 Top.Smallstep <> m var
R55608:55608 Top.Smallstep <> n var
R55612:55614 Top.Smallstep <> stk var
R55574:55574 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55586:55587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55597:55597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55580:55583 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55575:55579 Top.Imp <> SPlus constr
R55584:55585 Top.Smallstep <> p' var
R55589:55590 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55588:55588 Top.Smallstep <> n var
R55592:55593 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55591:55591 Top.Smallstep <> m var
R55594:55596 Top.Smallstep <> stk var
R55571:55572 Top.Smallstep <> st var
R55658:55667 Top.Smallstep <> stack_step ind
R55698:55698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55701:55702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55713:55713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55699:55700 Top.Smallstep <> p' var
R55703:55703 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55707:55709 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55705:55705 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R55704:55704 Top.Smallstep <> m var
R55706:55706 Top.Smallstep <> n var
R55710:55712 Top.Smallstep <> stk var
R55672:55672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55685:55686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55696:55696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55679:55682 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55673:55678 Top.Imp <> SMinus constr
R55683:55684 Top.Smallstep <> p' var
R55688:55689 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55687:55687 Top.Smallstep <> n var
R55691:55692 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55690:55690 Top.Smallstep <> m var
R55693:55695 Top.Smallstep <> stk var
R55669:55670 Top.Smallstep <> st var
R55755:55764 Top.Smallstep <> stack_step ind
R55795:55795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55798:55799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55810:55810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55796:55797 Top.Smallstep <> p' var
R55800:55800 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55804:55806 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55802:55802 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R55801:55801 Top.Smallstep <> m var
R55803:55803 Top.Smallstep <> n var
R55807:55809 Top.Smallstep <> stk var
R55769:55769 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55781:55782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55792:55792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55775:55778 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55770:55774 Top.Imp <> SMult constr
R55779:55780 Top.Smallstep <> p' var
R55784:55785 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55783:55783 Top.Smallstep <> n var
R55787:55788 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55786:55786 Top.Smallstep <> m var
R55789:55791 Top.Smallstep <> stk var
R55766:55767 Top.Smallstep <> st var
prf 55822:55845 <> stack_step_deterministic
R55862:55874 Top.Smallstep <> deterministic def
R55877:55886 Top.Smallstep <> stack_step ind
R55888:55889 Top.Smallstep <> st var
R55909:55921 Top.Smallstep <> deterministic def
def 56009:56023 <> stack_multistep
R56031:56035 Top.Smallstep <> multi ind
R56038:56047 Top.Smallstep <> stack_step ind
R56049:56050 Top.Smallstep <> st var
def 56426:56454 <> compiler_is_correct_statement
prf 56541:56559 <> compiler_is_correct
R56563:56591 Top.Smallstep <> compiler_is_correct_statement prfax
