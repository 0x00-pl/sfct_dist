DIGEST d4a5185688a7e0671c636349976c1cf3
FTop.UseTactics
R614:628 Coq.Arith.Arith <> <> lib
R647:650 Top.Maps <> <> lib
R668:670 Top.Imp <> <> lib
R688:692 Top.Types <> <> lib
R710:718 Top.Smallstep <> <> lib
R736:745 Top.LibTactics <> <> lib
mod 2823:2836 <> IntrovExamples
R2856:2859 Top.Stlc <> <> lib
prf 3385:3403 IntrovExamples ceval_deterministic
R3442:3447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3461:3466 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3470:3472 Coq.Init.Logic <> :type_scope:x_'='_x not
R3467:3469 Top.UseTactics <> st1 var
R3473:3475 Top.UseTactics <> st2 var
R3449:3451 Top.Imp <> ::x_'/'_x_'\\'_x not
R3454:3457 Top.Imp <> ::x_'/'_x_'\\'_x not
R3448:3448 Top.UseTactics <> c var
R3452:3453 Top.UseTactics <> st var
R3458:3460 Top.UseTactics <> st2 var
R3430:3432 Top.Imp <> ::x_'/'_x_'\\'_x not
R3435:3438 Top.Imp <> ::x_'/'_x_'\\'_x not
R3429:3429 Top.UseTactics <> c var
R3433:3434 Top.UseTactics <> st var
R3439:3441 Top.UseTactics <> st1 var
prf 3652:3665 IntrovExamples dist_exists_or
R3693:3696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3692:3692 Top.UseTactics <> X var
R3706:3706 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3727:3732 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3707:3713 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3715:3716 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3720:3723 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3717:3717 Top.UseTactics <> P var
R3719:3719 Top.UseTactics <> x var
R3724:3724 Top.UseTactics <> Q var
R3726:3726 Top.UseTactics <> x var
R3733:3733 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3747:3752 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3766:3766 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3734:3740 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3742:3743 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3744:3744 Top.UseTactics <> P var
R3746:3746 Top.UseTactics <> x var
R3753:3759 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3761:3762 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3763:3763 Top.UseTactics <> Q var
R3765:3765 Top.UseTactics <> x var
prf 3930:3949 IntrovExamples ceval_deterministic'
R3971:3971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3985:3989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4002:4002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4016:4020 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4024:4026 Coq.Init.Logic <> :type_scope:x_'='_x not
R4021:4023 Top.UseTactics <> st1 var
R4027:4029 Top.UseTactics <> st2 var
R4004:4006 Top.Imp <> ::x_'/'_x_'\\'_x not
R4009:4012 Top.Imp <> ::x_'/'_x_'\\'_x not
R4003:4003 Top.UseTactics <> c var
R4007:4008 Top.UseTactics <> st var
R4013:4015 Top.UseTactics <> st2 var
R3973:3975 Top.Imp <> ::x_'/'_x_'\\'_x not
R3978:3981 Top.Imp <> ::x_'/'_x_'\\'_x not
R3972:3972 Top.UseTactics <> c var
R3976:3977 Top.UseTactics <> st var
R3982:3984 Top.UseTactics <> st1 var
prf 4207:4217 IntrovExamples exists_impl
R4235:4238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4234:4234 Top.UseTactics <> X var
R4274:4274 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4293:4304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4325:4325 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4305:4305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4319:4323 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4324:4324 Top.UseTactics <> Q var
R4306:4312 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4314:4315 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4316:4316 Top.UseTactics <> P var
R4318:4318 Top.UseTactics <> x var
R4288:4291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4292:4292 Top.UseTactics <> Q var
R4285:4285 Top.UseTactics <> P var
R4287:4287 Top.UseTactics <> x var
R4611:4624 Top.UseTactics IntrovExamples <> mod
mod 4740:4754 <> InvertsExamples
R4774:4777 Top.Stlc <> <> lib
R4797:4801 Top.Equiv <> <> lib
R4821:4823 Top.Imp <> <> lib
prf 5632:5640 InvertsExamples skip_left
R5655:5660 Top.Equiv <> cequiv def
R5673:5673 Top.UseTactics <> c var
R5667:5669 Top.Imp <> ::x_';;'_x not
R5663:5666 Top.Imp <> ::'SKIP' not
R5670:5670 Top.UseTactics <> c var
prf 5957:5975 InvertsExamples ceval_deterministic
R6014:6020 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6034:6039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6043:6045 Coq.Init.Logic <> :type_scope:x_'='_x not
R6040:6042 Top.UseTactics <> st1 var
R6046:6048 Top.UseTactics <> st2 var
R6022:6024 Top.Imp <> ::x_'/'_x_'\\'_x not
R6027:6030 Top.Imp <> ::x_'/'_x_'\\'_x not
R6021:6021 Top.UseTactics <> c var
R6025:6026 Top.UseTactics <> st var
R6031:6033 Top.UseTactics <> st2 var
R6002:6004 Top.Imp <> ::x_'/'_x_'\\'_x not
R6007:6010 Top.Imp <> ::x_'/'_x_'\\'_x not
R6001:6001 Top.UseTactics <> c var
R6005:6006 Top.UseTactics <> st var
R6011:6013 Top.UseTactics <> st1 var
prf 6608:6627 InvertsExamples ceval_deterministic'
R6666:6672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6686:6691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6695:6697 Coq.Init.Logic <> :type_scope:x_'='_x not
R6692:6694 Top.UseTactics <> st1 var
R6698:6700 Top.UseTactics <> st2 var
R6674:6676 Top.Imp <> ::x_'/'_x_'\\'_x not
R6679:6682 Top.Imp <> ::x_'/'_x_'\\'_x not
R6673:6673 Top.UseTactics <> c var
R6677:6678 Top.UseTactics <> st var
R6683:6685 Top.UseTactics <> st2 var
R6654:6656 Top.Imp <> ::x_'/'_x_'\\'_x not
R6659:6662 Top.Imp <> ::x_'/'_x_'\\'_x not
R6653:6653 Top.UseTactics <> c var
R6657:6658 Top.UseTactics <> st var
R6663:6665 Top.UseTactics <> st1 var
R7366:7368 Coq.Init.Logic <> :type_scope:x_'='_x not
R7366:7368 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 8205:8214 InvertsExamples skip_left'
R8229:8234 Top.Equiv <> cequiv def
R8247:8247 Top.UseTactics <> c var
R8241:8243 Top.Imp <> ::x_';;'_x not
R8237:8240 Top.Imp <> ::'SKIP' not
R8244:8244 Top.UseTactics <> c var
def 8534:8552 InvertsExamples typing_nonexample_1
R8558:8559 Coq.Init.Logic <> :type_scope:'~'_x not
R8560:8566 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8568:8575 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8576:8583 Top.Stlc STLC has_type ind
R8689:8689 Top.UseTactics <> T var
R8600:8603 Top.Stlc STLC tabs constr
R8626:8629 Top.Stlc STLC tabs constr
R8655:8658 Top.Stlc STLC tapp constr
R8670:8673 Top.Stlc STLC tvar constr
R8675:8675 Top.Stlc STLC y def
R8661:8664 Top.Stlc STLC tvar constr
R8666:8666 Top.Stlc STLC x def
R8633:8637 Top.Stlc STLC TBool constr
R8631:8631 Top.Stlc STLC y def
R8607:8611 Top.Stlc STLC TBool constr
R8605:8605 Top.Stlc STLC x def
R8585:8589 Top.Maps <> empty def
R9238:9252 Top.UseTactics InvertsExamples <> mod
mod 10233:10244 <> NaryExamples
R10264:10273 Top.References <> <> lib
R10293:10301 Top.Smallstep <> <> lib
prf 10661:10671 NaryExamples demo_splits
R10694:10697 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10690:10692 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R10689:10689 Top.UseTactics <> n var
R10703:10706 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10699:10701 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R10698:10698 Top.UseTactics <> n var
R10702:10702 Top.UseTactics <> m var
R10715:10718 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10708:10710 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R10707:10707 Top.UseTactics <> m var
R10712:10712 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10711:10711 Top.UseTactics <> n var
R10720:10723 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R10719:10719 Top.UseTactics <> m var
prf 11134:11144 NaryExamples demo_branch
R11167:11170 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11163:11165 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R11162:11162 Top.UseTactics <> n var
R11166:11166 Top.UseTactics <> m var
R11176:11179 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11172:11174 Coq.Init.Logic <> :type_scope:x_'='_x not
R11171:11171 Top.UseTactics <> n var
R11175:11175 Top.UseTactics <> m var
R11181:11183 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R11180:11180 Top.UseTactics <> m var
R11184:11184 Top.UseTactics <> n var
R11216:11227 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
R11216:11227 Coq.Arith.Compare_dec <> lt_eq_lt_dec def
prf 11859:11866 NaryExamples progress
R11911:11916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11939:11944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11952:11955 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11945:11949 Top.References STLCRef value ind
R11951:11951 Top.UseTactics <> t var
R11956:11962 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11969:11970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11972:11974 Top.References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R11977:11981 Top.References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R11984:11986 Top.References STLCRef ::x_'/'_x_'==>'_x_'/'_x not
R11971:11971 Top.UseTactics <> t var
R11975:11976 Top.UseTactics <> st var
R11982:11983 Top.UseTactics <> t' var
R11987:11989 Top.UseTactics <> st' var
R11917:11932 Top.References STLCRef store_well_typed def
R11937:11938 Top.UseTactics <> st var
R11934:11935 Top.UseTactics <> ST var
R11890:11897 Top.References STLCRef has_type ind
R11910:11910 Top.UseTactics <> T var
R11908:11908 Top.UseTactics <> t var
R11905:11906 Top.UseTactics <> ST var
R11899:11903 Top.Maps <> empty def
R12117:12121 Top.Maps <> empty def
R12123:12124 Top.References STLCRef ty ind
R12117:12121 Top.Maps <> empty def
R12123:12124 Top.References STLCRef ty ind
R12442:12445 Top.References STLCRef tapp constr
R12448:12451 Top.References STLCRef tabs constr
R12442:12445 Top.References STLCRef tapp constr
R12448:12451 Top.References STLCRef tabs constr
R12795:12806 Top.UseTactics NaryExamples <> mod
mod 13623:13638 <> EqualityExamples
prf 13904:13914 EqualityExamples mult_0_plus
R13931:13933 Coq.Init.Datatypes <> nat ind
R13949:13951 Coq.Init.Logic <> :type_scope:x_'='_x not
R13938:13938 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13944:13947 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13940:13942 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13943:13943 Top.UseTactics <> n var
R13948:13948 Top.UseTactics <> m var
R13953:13955 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13952:13952 Top.UseTactics <> n var
R13956:13956 Top.UseTactics <> m var
R14028:14030 Coq.Init.Logic <> :type_scope:x_'='_x not
R14024:14026 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14028:14030 Coq.Init.Logic <> :type_scope:x_'='_x not
R14024:14026 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14139:14141 Coq.Init.Logic <> :type_scope:x_'='_x not
R14135:14137 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14139:14141 Coq.Init.Logic <> :type_scope:x_'='_x not
R14135:14137 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 14524:14535 EqualityExamples mult_0_plus'
R14552:14554 Coq.Init.Datatypes <> nat ind
R14570:14572 Coq.Init.Logic <> :type_scope:x_'='_x not
R14559:14559 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14565:14568 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14561:14563 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14564:14564 Top.UseTactics <> n var
R14569:14569 Top.UseTactics <> m var
R14574:14576 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14573:14573 Top.UseTactics <> n var
R14577:14577 Top.UseTactics <> m var
R14622:14624 Coq.Init.Logic <> :type_scope:x_'='_x not
R14618:14620 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14622:14624 Coq.Init.Logic <> :type_scope:x_'='_x not
R14618:14620 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 15039:15051 EqualityExamples mult_0_plus''
R15075:15077 Coq.Init.Datatypes <> nat ind
R15107:15109 Coq.Init.Logic <> :type_scope:x_'='_x not
R15082:15082 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15088:15092 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15106:15106 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15084:15086 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15083:15083 Top.UseTactics <> u var
R15087:15087 Top.UseTactics <> v var
R15093:15093 Coq.Init.Datatypes <> S constr
R15101:15103 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15097:15099 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15096:15096 Top.UseTactics <> w var
R15100:15100 Top.UseTactics <> x var
R15104:15104 Top.UseTactics <> y var
R15110:15110 Top.UseTactics <> z var
R15166:15168 Coq.Init.Logic <> :type_scope:x_'='_x not
R15160:15161 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15165:15165 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15159:15159 Top.UseTactics <> a var
R15162:15162 Coq.Init.Datatypes <> S constr
R15164:15164 Top.UseTactics <> b var
R15172:15172 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15170:15170 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15169:15169 Top.UseTactics <> a var
R15171:15171 Top.UseTactics <> b var
R15173:15173 Top.UseTactics <> a var
R15166:15168 Coq.Init.Logic <> :type_scope:x_'='_x not
R15160:15161 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15165:15165 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15159:15159 Top.UseTactics <> a var
R15162:15162 Coq.Init.Datatypes <> S constr
R15164:15164 Top.UseTactics <> b var
R15172:15172 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15170:15170 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R15169:15169 Top.UseTactics <> a var
R15171:15171 Top.UseTactics <> b var
R15173:15173 Top.UseTactics <> a var
prf 15567:15577 EqualityExamples demo_substs
R15598:15599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15600:15602 Coq.Init.Datatypes <> nat ind
R15595:15597 Coq.Init.Datatypes <> nat ind
R15615:15618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15624:15627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15629:15631 Coq.Init.Logic <> :type_scope:x_'='_x not
R15628:15628 Top.UseTactics <> y var
R15632:15632 Top.UseTactics <> f var
R15634:15634 Top.UseTactics <> x var
R15620:15622 Coq.Init.Logic <> :type_scope:x_'='_x not
R15619:15619 Top.UseTactics <> y var
R15623:15623 Top.UseTactics <> x var
R15609:15611 Coq.Init.Logic <> :type_scope:x_'='_x not
R15608:15608 Top.UseTactics <> x var
R15612:15612 Top.UseTactics <> f var
R15614:15614 Top.UseTactics <> x var
prf 16061:16072 EqualityExamples demo_fequals
R16096:16098 Coq.Init.Datatypes <> nat ind
R16109:16110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16114:16115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16119:16120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16124:16125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16126:16128 Coq.Init.Datatypes <> nat ind
R16121:16123 Coq.Init.Datatypes <> nat ind
R16116:16118 Coq.Init.Datatypes <> nat ind
R16111:16113 Coq.Init.Datatypes <> nat ind
R16106:16108 Coq.Init.Datatypes <> nat ind
R16139:16142 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16148:16151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16157:16162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16172:16174 Coq.Init.Logic <> :type_scope:x_'='_x not
R16163:16163 Top.UseTactics <> f var
R16171:16171 Top.UseTactics <> d var
R16169:16169 Top.UseTactics <> c var
R16167:16167 Top.UseTactics <> b var
R16165:16165 Top.UseTactics <> a var
R16175:16175 Top.UseTactics <> f var
R16181:16181 Top.UseTactics <> c var
R16153:16155 Coq.Init.Logic <> :type_scope:x_'='_x not
R16152:16152 Top.UseTactics <> e var
R16144:16146 Coq.Init.Logic <> :type_scope:x_'='_x not
R16143:16143 Top.UseTactics <> b var
R16147:16147 Top.UseTactics <> e var
R16135:16137 Coq.Init.Logic <> :type_scope:x_'='_x not
R16134:16134 Top.UseTactics <> a var
ax 17315:17334 EqualityExamples big_expression_using
R17341:17342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17343:17345 Coq.Init.Datatypes <> nat ind
R17338:17340 Coq.Init.Datatypes <> nat ind
prf 17381:17396 EqualityExamples demo_applys_eq_1
R17413:17414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17418:17419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17415:17417 Coq.Init.Datatypes <> nat ind
R17410:17412 Coq.Init.Datatypes <> nat ind
R17463:17468 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17469:17469 Top.UseTactics <> P var
R17474:17493 Top.UseTactics EqualityExamples big_expression_using prfax
R17495:17495 Top.UseTactics <> y var
R17471:17471 Top.UseTactics <> x var
R17435:17435 Top.UseTactics <> P var
R17440:17459 Top.UseTactics EqualityExamples big_expression_using prfax
R17461:17461 Top.UseTactics <> z var
R17437:17437 Top.UseTactics <> x var
R17583:17585 Coq.Init.Logic <> :type_scope:x_'='_x not
R17561:17580 Top.UseTactics EqualityExamples big_expression_using prfax
R17586:17605 Top.UseTactics EqualityExamples big_expression_using prfax
R17583:17585 Coq.Init.Logic <> :type_scope:x_'='_x not
R17561:17580 Top.UseTactics EqualityExamples big_expression_using prfax
R17586:17605 Top.UseTactics EqualityExamples big_expression_using prfax
prf 17991:18006 EqualityExamples demo_applys_eq_2
R18023:18024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18028:18029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18025:18027 Coq.Init.Datatypes <> nat ind
R18020:18022 Coq.Init.Datatypes <> nat ind
R18073:18078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18079:18079 Top.UseTactics <> P var
R18106:18106 Top.UseTactics <> x var
R18082:18101 Top.UseTactics EqualityExamples big_expression_using prfax
R18103:18103 Top.UseTactics <> y var
R18045:18045 Top.UseTactics <> P var
R18072:18072 Top.UseTactics <> x var
R18048:18067 Top.UseTactics EqualityExamples big_expression_using prfax
R18069:18069 Top.UseTactics <> z var
prf 18405:18420 EqualityExamples demo_applys_eq_3
R18437:18438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18442:18443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18439:18441 Coq.Init.Datatypes <> nat ind
R18434:18436 Coq.Init.Datatypes <> nat ind
R18518:18523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18524:18524 Top.UseTactics <> P var
R18553:18572 Top.UseTactics EqualityExamples big_expression_using prfax
R18574:18575 Top.UseTactics <> y1 var
R18527:18546 Top.UseTactics EqualityExamples big_expression_using prfax
R18548:18549 Top.UseTactics <> x1 var
R18465:18465 Top.UseTactics <> P var
R18494:18513 Top.UseTactics EqualityExamples big_expression_using prfax
R18515:18516 Top.UseTactics <> y2 var
R18468:18487 Top.UseTactics EqualityExamples big_expression_using prfax
R18489:18490 Top.UseTactics <> x2 var
R18772:18787 Top.UseTactics EqualityExamples <> mod
mod 19492:19505 <> UnfoldsExample
R19525:19529 Top.Hoare <> <> lib
prf 19698:19711 UnfoldsExample bexp_eval_true
R19747:19750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19752:19756 Top.Hoare <> bassn def
R19758:19758 Top.UseTactics <> b var
R19761:19762 Top.UseTactics <> st var
R19740:19742 Coq.Init.Logic <> :type_scope:x_'='_x not
R19730:19734 Top.Imp <> beval def
R19739:19739 Top.UseTactics <> b var
R19736:19737 Top.UseTactics <> st var
R19743:19746 Coq.Init.Datatypes <> true constr
R19829:19833 Top.Hoare <> bassn def
R20154:20167 Top.UseTactics UnfoldsExample <> mod
prf 20610:20619 <> demo_false
R20642:20645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20647:20649 Coq.Init.Logic <> :type_scope:x_'='_x not
R20646:20646 Top.UseTactics <> n var
R20638:20640 Coq.Init.Logic <> :type_scope:x_'='_x not
R20635:20635 Coq.Init.Datatypes <> S constr
R20637:20637 Top.UseTactics <> n var
prf 20834:20847 <> demo_false_arg
R20853:20853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20878:20882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20883:20883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20889:20893 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20895:20897 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20885:20887 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20869:20872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20873:20877 Coq.Init.Logic <> False ind
R20865:20867 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20864:20864 Top.UseTactics <> n var
prf 21141:21153 <> demo_tryfalse
R21176:21179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21181:21183 Coq.Init.Logic <> :type_scope:x_'='_x not
R21180:21180 Top.UseTactics <> n var
R21172:21174 Coq.Init.Logic <> :type_scope:x_'='_x not
R21169:21169 Coq.Init.Datatypes <> S constr
R21171:21171 Top.UseTactics <> n var
mod 21524:21533 <> GenExample
R21553:21556 Top.Stlc <> <> lib
prf 21581:21609 GenExample substitution_preserves_typing
R21673:21681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21700:21708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21709:21716 Top.Stlc STLC has_type ind
R21734:21734 Top.UseTactics <> S var
R21725:21725 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R21727:21728 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R21730:21730 Top.Stlc STLC ::'['_x_':='_x_']'_x not
R21726:21726 Top.UseTactics <> x var
R21729:21729 Top.UseTactics <> v var
R21731:21731 Top.UseTactics <> t var
R21718:21722 Top.UseTactics <> Gamma var
R21682:21689 Top.Stlc STLC has_type ind
R21699:21699 Top.UseTactics <> U var
R21697:21697 Top.UseTactics <> v var
R21691:21695 Top.Maps <> empty def
R21642:21649 Top.Stlc STLC has_type ind
R21672:21672 Top.UseTactics <> S var
R21670:21670 Top.UseTactics <> t var
R21652:21657 Top.Maps <> update def
R21667:21667 Top.UseTactics <> U var
R21665:21665 Top.UseTactics <> x var
R21659:21663 Top.UseTactics <> Gamma var
R22086:22095 Top.UseTactics GenExample <> mod
mod 22684:22694 <> SkipExample
R22714:22717 Top.Stlc <> <> lib
R22773:22777 Top.Smallstep <> multi ind
R22780:22784 Top.Smallstep <> astep ind
not 22745:22745 SkipExample ::x_'/'_x_'==>a*'_x
def 22872:22885 SkipExample astep_example1
R22891:22891 Top.UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R22932:22935 Top.UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R22947:22954 Top.UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R22962:22962 Top.UseTactics SkipExample ::x_'/'_x_'==>a*'_x not
R22936:22946 Top.Imp <> empty_state def
R22892:22896 Top.Imp <> APlus constr
R22908:22912 Top.Imp <> AMult constr
R22924:22927 Top.Imp <> ANum constr
R22915:22918 Top.Imp <> ANum constr
R22899:22902 Top.Imp <> ANum constr
R22955:22958 Top.Imp <> ANum constr
R22981:22990 Top.Smallstep <> multi_step constr
R22981:22990 Top.Smallstep <> multi_step constr
R23053:23062 Top.Smallstep <> multi_step constr
R23053:23062 Top.Smallstep <> multi_step constr
prf 23524:23533 SkipExample demo_skipH
R23537:23540 Coq.Init.Logic <> True ind
R23574:23576 Coq.Init.Datatypes <> nat ind
R23590:23592 Coq.Init.Logic <> :type_scope:x_'='_x not
R23579:23579 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23585:23588 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23581:23583 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23584:23584 Top.UseTactics <> n var
R23589:23589 Top.UseTactics <> m var
R23594:23596 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23593:23593 Top.UseTactics <> n var
R23597:23597 Top.UseTactics <> m var
R23574:23576 Coq.Init.Datatypes <> nat ind
R23590:23592 Coq.Init.Logic <> :type_scope:x_'='_x not
R23579:23579 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23585:23588 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23581:23583 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23584:23584 Top.UseTactics <> n var
R23589:23589 Top.UseTactics <> m var
R23594:23596 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23593:23593 Top.UseTactics <> n var
R23597:23597 Top.UseTactics <> m var
prf 23756:23766 SkipExample mult_0_plus
R23783:23785 Coq.Init.Datatypes <> nat ind
R23801:23803 Coq.Init.Logic <> :type_scope:x_'='_x not
R23790:23790 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23796:23799 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23792:23794 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23795:23795 Top.UseTactics <> n var
R23800:23800 Top.UseTactics <> m var
R23805:23807 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23804:23804 Top.UseTactics <> n var
R23808:23808 Top.UseTactics <> m var
R23881:23883 Coq.Init.Logic <> :type_scope:x_'='_x not
R23877:23879 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23881:23883 Coq.Init.Logic <> :type_scope:x_'='_x not
R23877:23879 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23982:23984 Coq.Init.Logic <> :type_scope:x_'='_x not
R23978:23980 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23982:23984 Coq.Init.Logic <> :type_scope:x_'='_x not
R23978:23980 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 24662:24680 SkipExample ceval_deterministic
R24719:24724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24738:24743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24747:24749 Coq.Init.Logic <> :type_scope:x_'='_x not
R24744:24746 Top.UseTactics <> st1 var
R24750:24752 Top.UseTactics <> st2 var
R24726:24728 Top.Imp <> ::x_'/'_x_'\\'_x not
R24731:24734 Top.Imp <> ::x_'/'_x_'\\'_x not
R24725:24725 Top.UseTactics <> c var
R24729:24730 Top.UseTactics <> st var
R24735:24737 Top.UseTactics <> st2 var
R24707:24709 Top.Imp <> ::x_'/'_x_'\\'_x not
R24712:24715 Top.Imp <> ::x_'/'_x_'\\'_x not
R24706:24706 Top.UseTactics <> c var
R24710:24711 Top.UseTactics <> st var
R24716:24718 Top.UseTactics <> st1 var
R25308:25310 Coq.Init.Logic <> :type_scope:x_'='_x not
R25308:25310 Coq.Init.Logic <> :type_scope:x_'='_x not
R25615:25625 Top.UseTactics SkipExample <> mod
mod 25738:25749 <> SortExamples
R25769:25771 Top.Imp <> <> lib
prf 25973:25991 SortExamples ceval_deterministic
R26030:26035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26049:26054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26058:26060 Coq.Init.Logic <> :type_scope:x_'='_x not
R26055:26057 Top.UseTactics <> st1 var
R26061:26063 Top.UseTactics <> st2 var
R26037:26039 Top.Imp <> ::x_'/'_x_'\\'_x not
R26042:26045 Top.Imp <> ::x_'/'_x_'\\'_x not
R26036:26036 Top.UseTactics <> c var
R26040:26041 Top.UseTactics <> st var
R26046:26048 Top.UseTactics <> st2 var
R26018:26020 Top.Imp <> ::x_'/'_x_'\\'_x not
R26023:26026 Top.Imp <> ::x_'/'_x_'\\'_x not
R26017:26017 Top.UseTactics <> c var
R26021:26022 Top.UseTactics <> st var
R26027:26029 Top.UseTactics <> st1 var
R26290:26301 Top.UseTactics SortExamples <> mod
mod 28646:28657 <> ExamplesLets
R28677:28679 Top.Sub <> <> lib
ax 28788:28807 ExamplesLets typing_inversion_var
R28821:28827 Top.Sub <> context def
R28833:28834 Top.Maps <> id ind
R28840:28841 Top.Sub <> ty ind
R28868:28873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28874:28880 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28882:28883 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28896:28899 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28887:28889 Coq.Init.Logic <> :type_scope:x_'='_x not
R28884:28884 Top.UseTactics <> G var
R28886:28886 Top.UseTactics <> x var
R28890:28893 Coq.Init.Datatypes <> Some constr
R28895:28895 Top.UseTactics <> S var
R28900:28906 Top.Sub <> subtype ind
R28910:28910 Top.UseTactics <> T var
R28908:28908 Top.UseTactics <> S var
R28847:28854 Top.Sub <> has_type ind
R28867:28867 Top.UseTactics <> T var
R28859:28862 Top.Sub <> tvar constr
R28864:28864 Top.UseTactics <> x var
R28856:28856 Top.UseTactics <> G var
prf 29169:29179 ExamplesLets demo_lets_1
R29193:29199 Top.Sub <> context def
R29205:29206 Top.Maps <> id ind
R29212:29213 Top.Sub <> ty ind
R29240:29243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29244:29247 Coq.Init.Logic <> True ind
R29219:29226 Top.Sub <> has_type ind
R29239:29239 Top.UseTactics <> T var
R29231:29234 Top.Sub <> tvar constr
R29236:29236 Top.UseTactics <> x var
R29228:29228 Top.UseTactics <> G var
R29313:29332 Top.UseTactics ExamplesLets typing_inversion_var prfax
R29313:29332 Top.UseTactics ExamplesLets typing_inversion_var prfax
R29423:29442 Top.UseTactics ExamplesLets typing_inversion_var prfax
R29423:29442 Top.UseTactics ExamplesLets typing_inversion_var prfax
prf 29885:29895 ExamplesLets demo_lets_2
R29909:29915 Top.Sub <> context def
R29921:29922 Top.Maps <> id ind
R29928:29929 Top.Sub <> ty ind
R29933:29936 Coq.Init.Logic <> True ind
R29985:30004 Top.UseTactics ExamplesLets typing_inversion_var prfax
R30012:30014 Top.LibTactics <> :ltac_scope:'___' not
R29985:30004 Top.UseTactics ExamplesLets typing_inversion_var prfax
R30012:30014 Top.LibTactics <> :ltac_scope:'___' not
prf 30391:30401 ExamplesLets demo_lets_3
R30415:30416 Top.Maps <> id ind
R30420:30423 Coq.Init.Logic <> True ind
R30468:30487 Top.UseTactics ExamplesLets typing_inversion_var prfax
R30491:30493 Top.LibTactics <> :ltac_scope:'___' not
R30468:30487 Top.UseTactics ExamplesLets typing_inversion_var prfax
R30491:30493 Top.LibTactics <> :ltac_scope:'___' not
prf 30673:30683 ExamplesLets demo_lets_4
R30687:30690 Coq.Init.Logic <> True ind
R30723:30742 Top.UseTactics ExamplesLets typing_inversion_var prfax
R30744:30746 Top.LibTactics <> :ltac_scope:'___' not
R30723:30742 Top.UseTactics ExamplesLets typing_inversion_var prfax
R30744:30746 Top.LibTactics <> :ltac_scope:'___' not
prf 30951:30961 ExamplesLets demo_lets_5
R30965:30968 Coq.Init.Logic <> True ind
R30988:31007 Top.UseTactics ExamplesLets typing_inversion_var prfax
R30988:31007 Top.UseTactics ExamplesLets typing_inversion_var prfax
prf 31444:31463 ExamplesLets demo_lets_underscore
R31469:31469 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31499:31503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31504:31507 Coq.Init.Logic <> True ind
R31488:31491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31493:31495 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R31492:31492 Top.UseTactics <> n var
R31497:31497 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31496:31496 Top.UseTactics <> m var
R31483:31486 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R31482:31482 Top.UseTactics <> n var
R31487:31487 Top.UseTactics <> m var
R31930:31931 Top.LibTactics <> :ltac_scope:'__' not
R31930:31931 Top.LibTactics <> :ltac_scope:'__' not
R32409:32420 Top.UseTactics ExamplesLets <> mod
mod 33708:33729 <> ExamplesInstantiations
R33749:33751 Top.Sub <> <> lib
prf 34007:34035 ExamplesInstantiations substitution_preserves_typing
R34099:34107 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34126:34134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34135:34142 Top.Sub <> has_type ind
R34160:34160 Top.UseTactics <> S var
R34151:34151 Top.Sub <> ::'['_x_':='_x_']'_x not
R34153:34154 Top.Sub <> ::'['_x_':='_x_']'_x not
R34156:34156 Top.Sub <> ::'['_x_':='_x_']'_x not
R34152:34152 Top.UseTactics <> x var
R34155:34155 Top.UseTactics <> v var
R34157:34157 Top.UseTactics <> t var
R34144:34148 Top.UseTactics <> Gamma var
R34108:34115 Top.Sub <> has_type ind
R34125:34125 Top.UseTactics <> U var
R34123:34123 Top.UseTactics <> v var
R34117:34121 Top.Maps <> empty def
R34068:34075 Top.Sub <> has_type ind
R34098:34098 Top.UseTactics <> S var
R34096:34096 Top.UseTactics <> t var
R34078:34083 Top.Maps <> update def
R34093:34093 Top.UseTactics <> U var
R34091:34091 Top.UseTactics <> x var
R34085:34089 Top.UseTactics <> Gamma var
R34518:34537 Top.Sub <> typing_inversion_var thm
R34518:34537 Top.Sub <> typing_inversion_var thm
R34557:34562 Top.Maps <> update def
R34565:34572 Top.Maps <> t_update def
R34597:34603 Top.Maps <> beq_idP prfax
R34597:34603 Top.Maps <> beq_idP prfax
R34719:34723 Top.Maps <> empty def
R34695:34712 Top.Sub <> context_invariance thm
R34719:34723 Top.Maps <> empty def
R34695:34712 Top.Sub <> context_invariance thm
R34929:34943 Top.Sub <> free_in_context thm
R34949:34953 Top.Maps <> empty def
R34955:34956 Top.Sub <> ty ind
R34929:34943 Top.Sub <> free_in_context thm
R34949:34953 Top.Maps <> empty def
R34955:34956 Top.Sub <> ty ind
R35432:35451 Top.Sub <> typing_inversion_abs thm
R35432:35451 Top.Sub <> typing_inversion_abs thm
R35607:35611 Top.Sub <> T_Sub constr
R35614:35619 Top.Sub <> TArrow constr
R35607:35611 Top.Sub <> T_Sub constr
R35614:35619 Top.Sub <> TArrow constr
R35642:35646 Top.Sub <> T_Abs constr
R35642:35646 Top.Sub <> T_Abs constr
R35665:35671 Top.Maps <> beq_idP prfax
R35665:35671 Top.Maps <> beq_idP prfax
R35708:35725 Top.Sub <> context_invariance thm
R35708:35725 Top.Sub <> context_invariance thm
R35771:35776 Top.Maps <> update def
R35779:35786 Top.Maps <> t_update def
R35805:35811 Top.Maps <> beq_idP prfax
R35805:35811 Top.Maps <> beq_idP prfax
R35862:35879 Top.Sub <> context_invariance thm
R35862:35879 Top.Sub <> context_invariance thm
R35912:35917 Top.Maps <> update def
R35920:35927 Top.Maps <> t_update def
R35946:35952 Top.Maps <> beq_idP prfax
R35946:35952 Top.Maps <> beq_idP prfax
R35983:35994 Top.Maps <> false_beq_id thm
R35983:35994 Top.Maps <> false_beq_id thm
R35983:35994 Top.Maps <> false_beq_id thm
R35983:35994 Top.Maps <> false_beq_id thm
R36025:36045 Top.Sub <> typing_inversion_true thm
R36025:36045 Top.Sub <> typing_inversion_true thm
R36083:36104 Top.Sub <> typing_inversion_false thm
R36083:36104 Top.Sub <> typing_inversion_false thm
R36159:36177 Top.Sub <> typing_inversion_if thm
R36159:36177 Top.Sub <> typing_inversion_if thm
R36389:36409 Top.Sub <> typing_inversion_unit thm
R36389:36409 Top.Sub <> typing_inversion_unit thm
R36438:36459 Top.UseTactics ExamplesInstantiations <> mod
